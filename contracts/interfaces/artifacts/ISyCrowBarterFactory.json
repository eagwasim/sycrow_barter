{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "",
			"opcodes": "",
			"sourceMap": ""
		},
		"deployedBytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "",
			"opcodes": "",
			"sourceMap": ""
		},
		"gasEstimates": null,
		"methodIdentifiers": {
			"allBarters(uint256)": "e55ef116",
			"allBartersLength()": "5c56559f",
			"createBarter(address,address,uint256,uint256,uint256,uint8,bool,bool)": "40939a6d",
			"feeCollector()": "c415b95c",
			"getFees()": "db8d55f1",
			"getUserBarters(address)": "e71a76c9",
			"isPaused()": "b187bd26",
			"notifyTradeByBarter(address,address,uint256,uint256)": "f52701b7",
			"notifyWithdrawFromBarter(address,address,uint256,uint256)": "33796a0e",
			"setFeeCollector(address)": "a42dce80",
			"setPause(bool)": "bedb86fb",
			"setUsePriceFeeds(uint256,uint256,bool)": "ccfd592d",
			"totalBarterDeployed()": "be931a41"
		}
	},
	"abi": [
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "enum ISyCrowBarterType",
					"name": "_barterType",
					"type": "uint8"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "_createdBy",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "_barter",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "address",
					"name": "_inToken",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "address",
					"name": "_outToken",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_deadline",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "bool",
					"name": "_shouldList",
					"type": "bool"
				}
			],
			"name": "SyCrowBarterCreated",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "_barter",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "_trader",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_inAmount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "outAmount",
					"type": "uint256"
				}
			],
			"name": "SyCrowTradeByBarter",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "_barter",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "_trader",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_value1",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_value2",
					"type": "uint256"
				}
			],
			"name": "SyCrowWithdrawFromBater",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "allBarters",
			"outputs": [
				{
					"internalType": "address",
					"name": "barter",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "allBartersLength",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_inToken",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_outToken",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_deposited",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_expected",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_deadline",
					"type": "uint256"
				},
				{
					"internalType": "enum ISyCrowBarterType",
					"name": "_type",
					"type": "uint8"
				},
				{
					"internalType": "bool",
					"name": "_shouldList",
					"type": "bool"
				},
				{
					"internalType": "bool",
					"name": "_allowMultiBarter",
					"type": "bool"
				}
			],
			"name": "createBarter",
			"outputs": [
				{
					"internalType": "address",
					"name": "barter",
					"type": "address"
				}
			],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "feeCollector",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getFees",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "baseFee",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "listingFee",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "userAddress",
					"type": "address"
				}
			],
			"name": "getUserBarters",
			"outputs": [
				{
					"internalType": "address[]",
					"name": "barters",
					"type": "address[]"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "isPaused",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_barter",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_trader",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_inAmount",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "outAmount",
					"type": "uint256"
				}
			],
			"name": "notifyTradeByBarter",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_barter",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_trader",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_value1",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_value2",
					"type": "uint256"
				}
			],
			"name": "notifyWithdrawFromBarter",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_feeCollector",
					"type": "address"
				}
			],
			"name": "setFeeCollector",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bool",
					"name": "pause",
					"type": "bool"
				}
			],
			"name": "setPause",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_baseFee",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_listingFee",
					"type": "uint256"
				},
				{
					"internalType": "bool",
					"name": "enable",
					"type": "bool"
				}
			],
			"name": "setUsePriceFeeds",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalBarterDeployed",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}