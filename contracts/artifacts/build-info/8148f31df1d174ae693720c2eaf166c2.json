{
	"id": "8148f31df1d174ae693720c2eaf166c2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SycrowBarter.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/ISyCrowBarterFactory.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./libraries/TransferHelper.sol\";\nimport \"./interfaces/IWETH.sol\";\n\ncontract SyCrowBarter is ISyCrowBarter, Ownable {\n    address public immutable override factory;\n    uint256 public totalTradeAmount;\n    bool public allowMultiBarter;\n\n    uint256 public deadline;\n\n    ISyCrowBarterType public barterType;\n    address private  WETH;\n    \n    bool public _initialized = false;\n    address private _depositedTokenAddress;\n    address private _expectedTokenAddress;\n    uint256 private _depositedAmount;\n    uint256 private _expectedAmount;\n   \n\n   \n    BaterTrade[] private _trades;\n\n    struct BaterTrade {\n        address _trader;\n        uint256 _amountIn;\n        uint256 _amountOut;\n    }\n\n    modifier checkActive() {\n        require(\n            deadline >= block.timestamp && totalTradeAmount < _expectedAmount,\n            \"SyCrowBarter: INACTIVE\"\n        );\n        _;\n    }\n\n    modifier checkBarterType(ISyCrowBarterType _barterType) {\n        require(_barterType == barterType, \"SyCrowBarter: INVALID_BARTER_TYPE\");\n        _;\n    }\n\n    modifier checkInActive() {\n        require(\n            deadline < block.timestamp || totalTradeAmount >= _expectedAmount,\n            \"SyCrowBarter: ACTIVE\"\n        );\n        _;\n    }\n\n    modifier initialized() {\n        require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\");\n        _;\n    }\n\n    modifier checkPaused() {\n        ISyCrowBarterFactory isycrFactory = ISyCrowBarterFactory(factory);\n        require(!isycrFactory.isPaused(), \"SyCrowBarter: Base Contract Paused\");\n        _;\n    }\n\n    constructor() {\n        factory = msg.sender;\n    }\n\n    function initialize(\n        ISyCrowBarterType _barterType,\n        address inToken,\n        address outToken,\n        uint256 amountDeposited,\n        uint256 amountExpected,\n        uint256 _deadline,\n        bool _allowMultiBarter,\n        address _WETH\n    ) external returns (bool) {\n        require(msg.sender == factory, \"SyCrowBarter: FORBIDDEN\");\n\n        require(!_initialized, \"SyCrowBarter: ALREADY_INITIALIZED\");\n        require(_deadline >= block.timestamp, \"SyCrowBarter: PAST_DEADLINE\");\n\n        require(\n            IERC20(inToken).balanceOf(address(this)) >= amountDeposited,\n            \"SyCrowBarter: INSUFFICIENT_DEPOSIT\"\n        );\n\n        deadline = _deadline;\n\n        _depositedTokenAddress = inToken;\n        _expectedTokenAddress = outToken;\n\n        _depositedAmount = amountDeposited;\n        _expectedAmount = amountExpected;\n\n        barterType = _barterType;\n\n        allowMultiBarter = _allowMultiBarter;\n        \n        WETH = _WETH;\n\n        _initialized = true;\n\n        return _initialized;\n    }\n\n    function getAmounts()\n        external\n        view\n        override\n        initialized\n        returns (uint256, uint256)\n    {\n        return (_depositedAmount, _expectedAmount);\n    }\n\n    function getTokens()\n        external\n        view\n        override\n        initialized\n        returns (address, address)\n    {\n        return (_depositedTokenAddress, _expectedTokenAddress);\n    }\n\n    function getTrades()\n        external\n        view\n        override\n        initialized\n        returns (\n            address[] memory,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        address[] memory addresses = new address[](_trades.length);\n        uint256[] memory amountsIn = new uint256[](_trades.length);\n        uint256[] memory amountsOut = new uint256[](_trades.length);\n\n        for (uint256 i = 0; i < _trades.length; i++) {\n            addresses[i] = _trades[i]._trader;\n            amountsIn[i] = _trades[i]._amountIn;\n            amountsOut[i] = _trades[i]._amountOut;\n        }\n\n        return (addresses, amountsIn, amountsOut);\n    }\n\n    function tradeTokenForToken(uint256 inAmount)\n        external\n        override\n        checkActive\n        initialized\n        checkPaused\n        checkBarterType(ISyCrowBarterType.TOKEN_FOR_TOKEN)\n    {\n        if(!allowMultiBarter){\n            require(inAmount >= _expectedAmount, \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\");\n        }\n        _tradeTokenForToken(inAmount);\n    }\n\n    function tradeTokenForEth(uint256 inAmount)\n        external\n        override\n        checkActive\n        initialized\n        checkPaused\n        checkBarterType(ISyCrowBarterType.ETH_FOR_TOKEN)\n    {\n        if (!allowMultiBarter){\n            require(inAmount >= _expectedAmount, \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\");\n        }\n        _tradeTokenForEth(inAmount);\n    }\n\n    function tradeEthForToken(uint256 inAmount)\n        external\n        override\n        checkActive\n        initialized\n        payable\n        checkPaused\n        checkBarterType(ISyCrowBarterType.TOKEN_FOR_ETH)\n    {\n        if(!allowMultiBarter){\n            require(msg.value >= _expectedAmount, \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\");\n        }\n        _tradeEthForToken(inAmount);\n    }\n\n    function _tradeTokenForToken(uint256 inAmount) internal {\n        require(\n            IERC20(_expectedTokenAddress).balanceOf(msg.sender) >= inAmount,\n            \"SyCrowBarter: INSUFFICIENT_BALANCE\"\n        );\n\n        uint256 outAmount = getTradeOutAmount(inAmount);\n\n        require(\n            IERC20(_depositedTokenAddress).balanceOf(address(this)) >=\n                outAmount,\n            \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\"\n        );\n\n        TransferHelper.safeTransferFrom(\n            _expectedTokenAddress,\n            msg.sender,\n            address(this),\n            inAmount\n        );\n        TransferHelper.safeTransfer(\n            _depositedTokenAddress,\n            msg.sender,\n            outAmount\n        );\n\n        _trades.push(BaterTrade(msg.sender, inAmount, outAmount));\n\n        totalTradeAmount = totalTradeAmount + inAmount;\n\n        ISyCrowBarterFactory sycrFactory = ISyCrowBarterFactory(factory);\n        \n        sycrFactory.notifyTradeByBarter(\n            address(this),\n            msg.sender,\n            inAmount,\n            outAmount\n        );\n    }\n\n    function _tradeTokenForEth(uint256 inAmount) internal {\n        require(\n            IERC20(_expectedTokenAddress).balanceOf(msg.sender) >= inAmount,\n            \"SyCrowBarter: INSUFFICIENT_BALANCE\"\n        );\n\n        uint256 outAmount = getTradeOutAmount(inAmount);\n\n        IERC20 _wethErc20 = IERC20(WETH);\n\n        require(\n            _wethErc20.balanceOf(address(this)) >= outAmount,\n            \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\"\n        );\n\n        IWETH(WETH).withdraw(outAmount);\n\n        TransferHelper.safeTransferFrom(\n            _expectedTokenAddress,\n            msg.sender,\n            address(this),\n            inAmount\n        );\n        TransferHelper.safeTransferETH(msg.sender, outAmount);\n\n        _trades.push(BaterTrade(msg.sender, inAmount, outAmount));\n\n        totalTradeAmount = totalTradeAmount + inAmount;\n\n        ISyCrowBarterFactory sycrFactory = ISyCrowBarterFactory(factory);\n        sycrFactory.notifyTradeByBarter(\n            address(this),\n            msg.sender,\n            inAmount,\n            outAmount\n        );\n    }\n\n    function _tradeEthForToken(uint256 inAmount) internal {\n        require(inAmount == msg.value, \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\");\n\n        uint256 outAmount = getTradeOutAmount(inAmount);\n\n        require(\n            IERC20(_depositedTokenAddress).balanceOf(address(this)) >=\n                outAmount,\n            \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\"\n        );\n\n        IWETH(WETH).deposit{value: inAmount}();\n\n        TransferHelper.safeTransfer(\n            _depositedTokenAddress,\n            msg.sender,\n            outAmount\n        );\n\n        _trades.push(BaterTrade(msg.sender, inAmount, outAmount));\n        totalTradeAmount = totalTradeAmount + inAmount;\n\n        ISyCrowBarterFactory sycrFactory = ISyCrowBarterFactory(factory);\n        sycrFactory.notifyTradeByBarter(\n            address(this),\n            msg.sender,\n            inAmount,\n            outAmount\n        );\n    }\n\n    function withdraw() external override checkInActive initialized onlyOwner {\n        IERC20 _wethErc20 = IERC20(WETH);\n\n        uint256 ethBalance = _wethErc20.balanceOf(address(this));\n\n        if (ethBalance > 0) {\n            IWETH(WETH).withdraw(ethBalance);\n            TransferHelper.safeTransferETH(msg.sender, ethBalance);\n        }\n\n        uint256 expectedTokenBalance = IERC20(_expectedTokenAddress).balanceOf(\n            address(this)\n        );\n\n        if (expectedTokenBalance > 0) {\n            TransferHelper.safeTransfer(\n                _expectedTokenAddress,\n                msg.sender,\n                expectedTokenBalance\n            );\n        }\n\n        uint256 depositedTokenBalance = IERC20(_depositedTokenAddress)\n            .balanceOf(address(this));\n\n        if (depositedTokenBalance > 0) {\n            TransferHelper.safeTransfer(\n                _depositedTokenAddress,\n                msg.sender,\n                depositedTokenBalance\n            );\n        }\n        uint256 value1 = 0;\n        uint256 value2 = 0;\n\n        if (barterType == ISyCrowBarterType.ETH_FOR_TOKEN) {\n            value1 = ethBalance;\n            value2 = expectedTokenBalance;\n        } else if (barterType == ISyCrowBarterType.TOKEN_FOR_TOKEN) {\n            value1 = depositedTokenBalance;\n            value2 = expectedTokenBalance;\n        } else {\n            value1 = depositedTokenBalance;\n            value2 = ethBalance;\n        }\n\n        ISyCrowBarterFactory sycrFactory = ISyCrowBarterFactory(factory);\n        \n        sycrFactory.notifyWithdrawFromBarter(\n            address(this),\n            msg.sender,\n            value1,\n            value2\n        );\n    }\n\n    function getTradeOutAmount(uint256 amount)\n        public\n        view\n        returns (uint256)\n    {\n        return (amount * _depositedAmount) / _expectedAmount;\n    }\n}\n"
			},
			"contracts/interfaces/IWETH.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity = 0.8.13;\n\ninterface IWETH {\n    function deposit() external payable;\n    function withdraw(uint) external;\n}\n"
			},
			"contracts/libraries/TransferHelper.sol": {
				"content": "  // SPDX-License-Identifier: GPL-3.0\n\npragma solidity = 0.8.13;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\n    }\n\n    function safeTransfer(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\n    }\n\n    function safeTransferFrom(address token, address from, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\n    }\n\n    function safeTransferETH(address to, uint value) internal {\n        (bool success,) = to.call{value:value}(new bytes(0));\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\n    }\n}"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.13;\n\ninterface IERC20 {\n    function balanceOf(address owner) external view returns (uint256);\n}\n"
			},
			"contracts/interfaces/ISyCrowBarterFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\nimport \"./ISyCrowBarter.sol\";\n\npragma solidity =0.8.13;\n\ninterface ISyCrowBarterFactory {\n    event SyCrowBarterCreated(\n        ISyCrowBarterType _barterType,\n        address indexed _createdBy,\n        address indexed _barter,\n        address _inToken,\n        address _outToken,\n        uint256 _deadline,\n        bool _shouldList\n    );\n    event SyCrowTradeByBarter(\n        address indexed _barter,\n        address indexed _trader,\n        uint256 _inAmount,\n        uint256 outAmount\n    );\n    event SyCrowWithdrawFromBater(\n        address indexed _barter,\n        address indexed _trader,\n        uint256 _value1,\n        uint256 _value2\n    );\n\n    function createBarter(\n        address _inToken,\n        address _outToken,\n        uint256 _deposited,\n        uint256 _expected,\n        uint256 _deadline,\n        ISyCrowBarterType _type,\n        bool _shouldList,\n        bool _allowMultiBarter\n    ) external payable returns (address barter);\n\n\n    function totalBarterDeployed() external returns (uint);\n\n    function getFees() external returns (uint256 baseFee, uint256 listingFee);\n\n    function setFeeCollector(address _feeCollector) external;\n\n    function feeCollector() external view returns (address);\n\n    function allBartersLength() external view returns (uint256);\n\n    function allBarters(uint256) external view returns (address barter);\n\n    function getUserBarters(address userAddress) external view returns (address[] memory barters);\n\n    function isPaused() external view returns (bool);\n\n    function setPause(bool pause) external;\n\n    function setUsePriceFeeds(\n        uint256 _baseFee,\n        uint256 _listingFee,\n        bool enable\n    ) external;\n\n    function notifyTradeByBarter(\n        address _barter,\n        address _trader,\n        uint256 _inAmount,\n        uint256 outAmount\n    ) external;\n\n    function notifyWithdrawFromBarter(\n        address _barter,\n        address _trader,\n        uint256 _value1,\n        uint256 _value2\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/interfaces/ISyCrowBarter.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.13;\n\nenum ISyCrowBarterType {\n    ETH_FOR_TOKEN,\n    TOKEN_FOR_ETH,\n    TOKEN_FOR_TOKEN\n}\n\ninterface ISyCrowBarter {\n    function factory() external view returns (address);\n\n    function getAmounts() external view returns (uint256, uint256);\n\n    function getTokens() external view returns (address, address);\n\n    function getTrades()\n        external\n        view\n        returns (address[] memory, uint256[] memory, uint256[] memory);\n\n    function tradeTokenForToken(uint256 inAmount) external;\n\n    function tradeTokenForEth(uint256 inAmount) external;\n\n    function tradeEthForToken(uint256 inAmount) external payable;\n\n    function withdraw() external;\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SycrowBarter.sol": {
				"SyCrowBarter": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allowMultiBarter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "barterType",
							"outputs": [
								{
									"internalType": "enum ISyCrowBarterType",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deadline",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getTradeOutAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrades",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ISyCrowBarterType",
									"name": "_barterType",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "inToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "outToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountDeposited",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountExpected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_allowMultiBarter",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "_WETH",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTradeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeEthForToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeTokenForEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeTokenForToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SycrowBarter.sol\":269:10099  contract SyCrowBarter is ISyCrowBarter, Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/SycrowBarter.sol\":545:577  bool public _initialized = false */\n  0x04\n  dup1\n  sload\n  not(shl(0xa8, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/SycrowBarter.sol\":1757:1808  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"contracts/SycrowBarter.sol\":1791:1801  msg.sender */\n  caller\n    /* \"contracts/SycrowBarter.sol\":1781:1801  factory = msg.sender */\n  0x80\n  mstore\n    /* \"contracts/SycrowBarter.sol\":269:10099  contract SyCrowBarter is ISyCrowBarter, Ownable {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/SycrowBarter.sol\":269:10099  contract SyCrowBarter is ISyCrowBarter, Ownable {... */\ntag_10:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x26a975632f70533c9512e57b565b8ce8e2befee6b08dfbc27c4a897a20e2c1d6\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SycrowBarter.sol\":269:10099  contract SyCrowBarter is ISyCrowBarter, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xc45a0155\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc6ea7038\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdab5a8df\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe43372e9\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x89523742\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xaa6ca808\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x3ccfd60b\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3d370b4e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40a6f1ab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4341f920\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5f5780e5\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x0d182605\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x29dcb0cf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2ffc6887\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3072cf60\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SycrowBarter.sol\":4336:4716  function tradeTokenForEth(uint256 inAmount)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/SycrowBarter.sol\":442:465  uint256 public deadline */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      sload(0x03)\n      dup2\n      jump\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/SycrowBarter.sol\":442:465  uint256 public deadline */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SycrowBarter.sol\":3945:4330  function tradeTokenForToken(uint256 inAmount)... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":545:577  bool public _initialized = false */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      sload(0x04)\n      tag_38\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":546:560   */\n      swap1\n      iszero\n        /* \"#utility.yul\":539:561   */\n      iszero\n        /* \"#utility.yul\":521:562   */\n      dup2\n      mstore\n        /* \"#utility.yul\":509:511   */\n      0x20\n        /* \"#utility.yul\":494:512   */\n      add\n        /* \"contracts/SycrowBarter.sol\":545:577  bool public _initialized = false */\n      tag_31\n        /* \"#utility.yul\":381:568   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":8236:9921  function withdraw() external override checkInActive initialized onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_24\n      tag_44\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":2856:3043  function getAmounts()... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":747:772   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":803:805   */\n      0x20\n        /* \"#utility.yul\":788:806   */\n      dup4\n      add\n        /* \"#utility.yul\":781:815   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":720:738   */\n      add\n        /* \"contracts/SycrowBarter.sol\":2856:3043  function getAmounts()... */\n      tag_31\n        /* \"#utility.yul\":573:821   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":370:401  uint256 public totalTradeAmount */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_29\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/SycrowBarter.sol\":4722:5118  function tradeEthForToken(uint256 inAmount)... */\n    tag_9:\n      tag_24\n      tag_55\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":1814:2850  function initialize(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_38\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_24\n      tag_65\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":472:507  ISyCrowBarterType public barterType */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      sload(0x04)\n      tag_67\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_67:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_72:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2627:2659   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2609:2660   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2597:2599   */\n      0x20\n        /* \"#utility.yul\":2582:2600   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_31\n        /* \"#utility.yul\":2463:2666   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":3049:3247  function getTokens()... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2901:2916   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":2883:2917   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2953:2968   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2948:2950   */\n      0x20\n        /* \"#utility.yul\":2933:2951   */\n      dup4\n      add\n        /* \"#utility.yul\":2926:2969   */\n      mstore\n        /* \"#utility.yul\":2818:2836   */\n      add\n        /* \"contracts/SycrowBarter.sol\":3049:3247  function getTokens()... */\n      tag_31\n        /* \"#utility.yul\":2671:2975   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":323:364  address public immutable override factory */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_72\n      immutable(\"0x26a975632f70533c9512e57b565b8ce8e2befee6b08dfbc27c4a897a20e2c1d6\")\n      dup2\n      jump\n        /* \"contracts/SycrowBarter.sol\":407:435  bool public allowMultiBarter */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      sload(0x02)\n      tag_38\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/SycrowBarter.sol\":9927:10097  function getTradeOutAmount(uint256 amount)... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_29\n      tag_91\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":3253:3939  function getTrades()... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_31\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_24\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":4336:4716  function tradeTokenForEth(uint256 inAmount)... */\n    tag_27:\n        /* \"contracts/SycrowBarter.sol\":966:981  block.timestamp */\n      timestamp\n        /* \"contracts/SycrowBarter.sol\":954:962  deadline */\n      sload(0x03)\n        /* \"contracts/SycrowBarter.sol\":954:981  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":954:1019  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n      dup1\n      iszero\n      tag_105\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":1004:1019  _expectedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":985:1001  totalTradeAmount */\n      sload(0x01)\n        /* \"contracts/SycrowBarter.sol\":985:1019  totalTradeAmount < _expectedAmount */\n      lt\n        /* \"contracts/SycrowBarter.sol\":954:1019  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n    tag_105:\n        /* \"contracts/SycrowBarter.sol\":933:1067  require(... */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/SycrowBarter.sol\":1484:1496  _initialized */\n      sload(0x04)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1476:1530  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_112\n      jump\t// in\n    tag_110:\n        /* \"contracts/SycrowBarter.sol\":1587:1620  ISyCrowBarterFactory isycrFactory */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":1644:1651  factory */\n      immutable(\"0x26a975632f70533c9512e57b565b8ce8e2befee6b08dfbc27c4a897a20e2c1d6\")\n        /* \"contracts/SycrowBarter.sol\":1587:1652  ISyCrowBarterFactory isycrFactory = ISyCrowBarterFactory(factory) */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":1671:1683  isycrFactory */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":1671:1692  isycrFactory.isPaused */\n      and\n      0xb187bd26\n        /* \"contracts/SycrowBarter.sol\":1671:1694  isycrFactory.isPaused() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"contracts/SycrowBarter.sol\":1670:1694  !isycrFactory.isPaused() */\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1662:1733  require(!isycrFactory.isPaused(), \"SyCrowBarter: Base Contract Paused\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_120\n      jump\t// in\n    tag_118:\n        /* \"contracts/SycrowBarter.sol\":1180:1190  barterType */\n      sload(0x04)\n        /* \"contracts/SycrowBarter.sol\":4498:4529  ISyCrowBarterType.ETH_FOR_TOKEN */\n      0x00\n      swap1\n        /* \"contracts/SycrowBarter.sol\":1180:1190  barterType */\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1165:1190  _barterType == barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_123\n      jumpi\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"contracts/SycrowBarter.sol\":1165:1176  _barterType */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":1165:1190  _barterType == barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_126\n      jumpi\n      tag_126\n      tag_124\n      jump\t// in\n    tag_126:\n      eq\n        /* \"contracts/SycrowBarter.sol\":1157:1228  require(_barterType == barterType, \"SyCrowBarter: INVALID_BARTER_TYPE\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_129\n      jump\t// in\n    tag_127:\n        /* \"contracts/SycrowBarter.sol\":4550:4566  allowMultiBarter */\n      and(0xff, sload(0x02))\n        /* \"contracts/SycrowBarter.sol\":4545:4673  if (!allowMultiBarter){... */\n      tag_132\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":4601:4616  _expectedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":4589:4597  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":4589:4616  inAmount >= _expectedAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":4581:4662  require(inAmount >= _expectedAmount, \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_134\n      jump\t// in\n    tag_132:\n        /* \"contracts/SycrowBarter.sol\":4682:4709  _tradeTokenForEth(inAmount) */\n      tag_135\n        /* \"contracts/SycrowBarter.sol\":4700:4708  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":4682:4699  _tradeTokenForEth */\n      tag_136\n        /* \"contracts/SycrowBarter.sol\":4682:4709  _tradeTokenForEth(inAmount) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/SycrowBarter.sol\":1743:1744  _ */\n      pop\n        /* \"contracts/SycrowBarter.sol\":1577:1751  {... */\n      pop\n        /* \"contracts/SycrowBarter.sol\":4336:4716  function tradeTokenForEth(uint256 inAmount)... */\n      pop\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":3945:4330  function tradeTokenForToken(uint256 inAmount)... */\n    tag_36:\n        /* \"contracts/SycrowBarter.sol\":966:981  block.timestamp */\n      timestamp\n        /* \"contracts/SycrowBarter.sol\":954:962  deadline */\n      sload(0x03)\n        /* \"contracts/SycrowBarter.sol\":954:981  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":954:1019  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n      dup1\n      iszero\n      tag_138\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":1004:1019  _expectedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":985:1001  totalTradeAmount */\n      sload(0x01)\n        /* \"contracts/SycrowBarter.sol\":985:1019  totalTradeAmount < _expectedAmount */\n      lt\n        /* \"contracts/SycrowBarter.sol\":954:1019  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n    tag_138:\n        /* \"contracts/SycrowBarter.sol\":933:1067  require(... */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_139:\n        /* \"contracts/SycrowBarter.sol\":1484:1496  _initialized */\n      sload(0x04)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1476:1530  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_112\n      jump\t// in\n    tag_142:\n        /* \"contracts/SycrowBarter.sol\":1587:1620  ISyCrowBarterFactory isycrFactory */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":1644:1651  factory */\n      immutable(\"0x26a975632f70533c9512e57b565b8ce8e2befee6b08dfbc27c4a897a20e2c1d6\")\n        /* \"contracts/SycrowBarter.sol\":1587:1652  ISyCrowBarterFactory isycrFactory = ISyCrowBarterFactory(factory) */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":1671:1683  isycrFactory */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":1671:1692  isycrFactory.isPaused */\n      and\n      0xb187bd26\n        /* \"contracts/SycrowBarter.sol\":1671:1694  isycrFactory.isPaused() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_147:\n        /* \"contracts/SycrowBarter.sol\":1670:1694  !isycrFactory.isPaused() */\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1662:1733  require(!isycrFactory.isPaused(), \"SyCrowBarter: Base Contract Paused\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_120\n      jump\t// in\n    tag_148:\n        /* \"contracts/SycrowBarter.sol\":1180:1190  barterType */\n      sload(0x04)\n        /* \"contracts/SycrowBarter.sol\":4109:4142  ISyCrowBarterType.TOKEN_FOR_TOKEN */\n      0x02\n      swap1\n        /* \"contracts/SycrowBarter.sol\":1180:1190  barterType */\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1165:1190  _barterType == barterType */\n      dup2\n      dup2\n      gt\n      iszero\n      tag_152\n      jumpi\n      tag_152\n      tag_124\n      jump\t// in\n    tag_152:\n        /* \"contracts/SycrowBarter.sol\":1165:1176  _barterType */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":1165:1190  _barterType == barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_154\n      jumpi\n      tag_154\n      tag_124\n      jump\t// in\n    tag_154:\n      eq\n        /* \"contracts/SycrowBarter.sol\":1157:1228  require(_barterType == barterType, \"SyCrowBarter: INVALID_BARTER_TYPE\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_129\n      jump\t// in\n    tag_155:\n        /* \"contracts/SycrowBarter.sol\":4162:4178  allowMultiBarter */\n      and(0xff, sload(0x02))\n        /* \"contracts/SycrowBarter.sol\":4158:4285  if(!allowMultiBarter){... */\n      tag_159\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":4213:4228  _expectedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":4201:4209  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":4201:4228  inAmount >= _expectedAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":4193:4274  require(inAmount >= _expectedAmount, \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_134\n      jump\t// in\n    tag_159:\n        /* \"contracts/SycrowBarter.sol\":4294:4323  _tradeTokenForToken(inAmount) */\n      tag_135\n        /* \"contracts/SycrowBarter.sol\":4314:4322  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":4294:4313  _tradeTokenForToken */\n      tag_162\n        /* \"contracts/SycrowBarter.sol\":4294:4323  _tradeTokenForToken(inAmount) */\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":8236:9921  function withdraw() external override checkInActive initialized onlyOwner {... */\n    tag_44:\n        /* \"contracts/SycrowBarter.sol\":1319:1334  block.timestamp */\n      timestamp\n        /* \"contracts/SycrowBarter.sol\":1308:1316  deadline */\n      sload(0x03)\n        /* \"contracts/SycrowBarter.sol\":1308:1334  deadline < block.timestamp */\n      lt\n        /* \"contracts/SycrowBarter.sol\":1308:1373  deadline < block.timestamp || totalTradeAmount >= _expectedAmount */\n      dup1\n      tag_164\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":1358:1373  _expectedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":1338:1354  totalTradeAmount */\n      sload(0x01)\n        /* \"contracts/SycrowBarter.sol\":1338:1373  totalTradeAmount >= _expectedAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1308:1373  deadline < block.timestamp || totalTradeAmount >= _expectedAmount */\n    tag_164:\n        /* \"contracts/SycrowBarter.sol\":1287:1419  require(... */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7029:7031   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":1287:1419  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7011:7032   */\n      mstore\n        /* \"#utility.yul\":7068:7070   */\n      0x14\n        /* \"#utility.yul\":7048:7066   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7041:7071   */\n      mstore\n      shl(0x60, 0x537943726f774261727465723a20414354495645)\n        /* \"#utility.yul\":7087:7105   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7080:7130   */\n      mstore\n        /* \"#utility.yul\":7147:7165   */\n      0x64\n      add\n        /* \"contracts/SycrowBarter.sol\":1287:1419  require(... */\n      tag_107\n        /* \"#utility.yul\":6827:7171   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":1287:1419  require(... */\n    tag_165:\n        /* \"contracts/SycrowBarter.sol\":1484:1496  _initialized */\n      sload(0x04)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1476:1530  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_112\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_177\n      jump\t// in\n    tag_175:\n        /* \"contracts/SycrowBarter.sol\":8347:8351  WETH */\n      0x04\n      dup1\n      sload\n        /* \"contracts/SycrowBarter.sol\":8384:8419  _wethErc20.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8413:8417  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":8384:8419  _wethErc20.balanceOf(address(this)) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":2609:2660   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8347:8351  WETH */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8320:8337  IERC20 _wethErc20 */\n      0x00\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8347:8351  WETH */\n      dup3\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8384:8404  _wethErc20.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":8384:8419  _wethErc20.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/SycrowBarter.sol\":8363:8419  uint256 ethBalance = _wethErc20.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":8434:8448  ethBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/SycrowBarter.sol\":8430:8575  if (ethBalance > 0) {... */\n      tag_189\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":8470:8474  WETH */\n      0x04\n      dup1\n      sload\n        /* \"contracts/SycrowBarter.sol\":8464:8496  IWETH(WETH).withdraw(ethBalance) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":345:370   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8470:8474  WETH */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8464:8484  IWETH(WETH).withdraw */\n      0x2e1a7d4d\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":8464:8496  IWETH(WETH).withdraw(ethBalance) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":8510:8564  TransferHelper.safeTransferETH(msg.sender, ethBalance) */\n      tag_189\n        /* \"contracts/SycrowBarter.sol\":8541:8551  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":8553:8563  ethBalance */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":8510:8540  TransferHelper.safeTransferETH */\n      tag_190\n        /* \"contracts/SycrowBarter.sol\":8510:8564  TransferHelper.safeTransferETH(msg.sender, ethBalance) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/SycrowBarter.sol\":8623:8644  _expectedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":8616:8692  IERC20(_expectedTokenAddress).balanceOf(... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8677:8681  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":8616:8692  IERC20(_expectedTokenAddress).balanceOf(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8585:8613  uint256 expectedTokenBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":8623:8644  _expectedTokenAddress */\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8616:8655  IERC20(_expectedTokenAddress).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":8616:8692  IERC20(_expectedTokenAddress).balanceOf(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_194:\n        /* \"contracts/SycrowBarter.sol\":8585:8692  uint256 expectedTokenBalance = IERC20(_expectedTokenAddress).balanceOf(... */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":8707:8731  expectedTokenBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/SycrowBarter.sol\":8703:8904  if (expectedTokenBalance > 0) {... */\n      tag_196\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":8792:8813  _expectedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":8747:8893  TransferHelper.safeTransfer(... */\n      tag_196\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":8792:8813  _expectedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":8831:8841  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":8859:8879  expectedTokenBalance */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":8747:8774  TransferHelper.safeTransfer */\n      tag_197\n        /* \"contracts/SycrowBarter.sol\":8747:8893  TransferHelper.safeTransfer(... */\n      jump\t// in\n    tag_196:\n        /* \"contracts/SycrowBarter.sol\":8953:8975  _depositedTokenAddress */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":8946:9014  IERC20(_depositedTokenAddress)... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":9008:9012  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":8946:9014  IERC20(_depositedTokenAddress)... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8914:8943  uint256 depositedTokenBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":8953:8975  _depositedTokenAddress */\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8946:8999  IERC20(_depositedTokenAddress)... */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":8946:9014  IERC20(_depositedTokenAddress)... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_201:\n        /* \"contracts/SycrowBarter.sol\":8914:9014  uint256 depositedTokenBalance = IERC20(_depositedTokenAddress)... */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":9029:9054  depositedTokenBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/SycrowBarter.sol\":9025:9229  if (depositedTokenBalance > 0) {... */\n      tag_203\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":9115:9137  _depositedTokenAddress */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":9070:9218  TransferHelper.safeTransfer(... */\n      tag_203\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":9115:9137  _depositedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":9155:9165  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":9183:9204  depositedTokenBalance */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":9070:9097  TransferHelper.safeTransfer */\n      tag_197\n        /* \"contracts/SycrowBarter.sol\":9070:9218  TransferHelper.safeTransfer(... */\n      jump\t// in\n    tag_203:\n        /* \"contracts/SycrowBarter.sol\":9238:9252  uint256 value1 */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/SycrowBarter.sol\":9299:9309  barterType */\n      and(0xff, sload(0x04))\n        /* \"contracts/SycrowBarter.sol\":9299:9344  barterType == ISyCrowBarterType.ETH_FOR_TOKEN */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_207\n      jumpi\n      tag_207\n      tag_124\n      jump\t// in\n    tag_207:\n      sub\n        /* \"contracts/SycrowBarter.sol\":9295:9684  if (barterType == ISyCrowBarterType.ETH_FOR_TOKEN) {... */\n      tag_208\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":9369:9379  ethBalance */\n      dup4\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":9402:9422  expectedTokenBalance */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":9295:9684  if (barterType == ISyCrowBarterType.ETH_FOR_TOKEN) {... */\n      jump(tag_215)\n    tag_208:\n        /* \"contracts/SycrowBarter.sol\":9457:9490  ISyCrowBarterType.TOKEN_FOR_TOKEN */\n      0x02\n        /* \"contracts/SycrowBarter.sol\":9443:9453  barterType */\n      and(0xff, sload(0x04))\n        /* \"contracts/SycrowBarter.sol\":9443:9490  barterType == ISyCrowBarterType.TOKEN_FOR_TOKEN */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_213\n      jumpi\n      tag_213\n      tag_124\n      jump\t// in\n    tag_213:\n      sub\n        /* \"contracts/SycrowBarter.sol\":9439:9684  if (barterType == ISyCrowBarterType.TOKEN_FOR_TOKEN) {... */\n      tag_214\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":9515:9536  depositedTokenBalance */\n      dup2\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":9559:9579  expectedTokenBalance */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":9439:9684  if (barterType == ISyCrowBarterType.TOKEN_FOR_TOKEN) {... */\n      jump(tag_215)\n    tag_214:\n      pop\n        /* \"contracts/SycrowBarter.sol\":9619:9640  depositedTokenBalance */\n      dup2\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":9663:9673  ethBalance */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":9439:9684  if (barterType == ISyCrowBarterType.TOKEN_FOR_TOKEN) {... */\n    tag_215:\n        /* \"contracts/SycrowBarter.sol\":9777:9914  sycrFactory.notifyWithdrawFromBarter(... */\n      mload(0x40)\n      shl(0xe1, 0x19bcb507)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":9750:9757  factory */\n      immutable(\"0x26a975632f70533c9512e57b565b8ce8e2befee6b08dfbc27c4a897a20e2c1d6\")\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":9777:9813  sycrFactory.notifyWithdrawFromBarter */\n      dup3\n      and\n      swap1\n      0x33796a0e\n      swap1\n        /* \"contracts/SycrowBarter.sol\":9777:9914  sycrFactory.notifyWithdrawFromBarter(... */\n      tag_216\n      swap1\n        /* \"contracts/SycrowBarter.sol\":9835:9839  this */\n      address\n      swap1\n        /* \"contracts/SycrowBarter.sol\":9854:9864  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SycrowBarter.sol\":9878:9884  value1 */\n      dup9\n      swap1\n        /* \"contracts/SycrowBarter.sol\":9898:9904  value2 */\n      dup9\n      swap1\n        /* \"contracts/SycrowBarter.sol\":9777:9914  sycrFactory.notifyWithdrawFromBarter(... */\n      0x04\n      add\n      tag_217\n      jump\t// in\n    tag_216:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":8310:9921  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":8236:9921  function withdraw() external override checkInActive initialized onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":2856:3043  function getAmounts()... */\n    tag_47:\n        /* \"contracts/SycrowBarter.sol\":1484:1496  _initialized */\n      sload(0x04)\n        /* \"contracts/SycrowBarter.sol\":2962:2969  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n      shl(0xa8, 0x01)\n        /* \"contracts/SycrowBarter.sol\":1484:1496  _initialized */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1476:1530  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_112\n      jump\t// in\n    tag_222:\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":3002:3018  _depositedAmount */\n      sload(0x07)\n        /* \"contracts/SycrowBarter.sol\":3020:3035  _expectedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":2856:3043  function getAmounts()... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":4722:5118  function tradeEthForToken(uint256 inAmount)... */\n    tag_56:\n        /* \"contracts/SycrowBarter.sol\":966:981  block.timestamp */\n      timestamp\n        /* \"contracts/SycrowBarter.sol\":954:962  deadline */\n      sload(0x03)\n        /* \"contracts/SycrowBarter.sol\":954:981  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":954:1019  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":1004:1019  _expectedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":985:1001  totalTradeAmount */\n      sload(0x01)\n        /* \"contracts/SycrowBarter.sol\":985:1019  totalTradeAmount < _expectedAmount */\n      lt\n        /* \"contracts/SycrowBarter.sol\":954:1019  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n    tag_226:\n        /* \"contracts/SycrowBarter.sol\":933:1067  require(... */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_227:\n        /* \"contracts/SycrowBarter.sol\":1484:1496  _initialized */\n      sload(0x04)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1476:1530  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_112\n      jump\t// in\n    tag_230:\n        /* \"contracts/SycrowBarter.sol\":1587:1620  ISyCrowBarterFactory isycrFactory */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":1644:1651  factory */\n      immutable(\"0x26a975632f70533c9512e57b565b8ce8e2befee6b08dfbc27c4a897a20e2c1d6\")\n        /* \"contracts/SycrowBarter.sol\":1587:1652  ISyCrowBarterFactory isycrFactory = ISyCrowBarterFactory(factory) */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":1671:1683  isycrFactory */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":1671:1692  isycrFactory.isPaused */\n      and\n      0xb187bd26\n        /* \"contracts/SycrowBarter.sol\":1671:1694  isycrFactory.isPaused() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_234:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_235\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_235:\n        /* \"contracts/SycrowBarter.sol\":1670:1694  !isycrFactory.isPaused() */\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1662:1733  require(!isycrFactory.isPaused(), \"SyCrowBarter: Base Contract Paused\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_120\n      jump\t// in\n    tag_236:\n        /* \"contracts/SycrowBarter.sol\":1180:1190  barterType */\n      sload(0x04)\n        /* \"contracts/SycrowBarter.sol\":4900:4931  ISyCrowBarterType.TOKEN_FOR_ETH */\n      0x01\n      swap1\n        /* \"contracts/SycrowBarter.sol\":1180:1190  barterType */\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1165:1190  _barterType == barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_240\n      tag_124\n      jump\t// in\n    tag_240:\n        /* \"contracts/SycrowBarter.sol\":1165:1176  _barterType */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":1165:1190  _barterType == barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_242\n      jumpi\n      tag_242\n      tag_124\n      jump\t// in\n    tag_242:\n      eq\n        /* \"contracts/SycrowBarter.sol\":1157:1228  require(_barterType == barterType, \"SyCrowBarter: INVALID_BARTER_TYPE\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_129\n      jump\t// in\n    tag_243:\n        /* \"contracts/SycrowBarter.sol\":4951:4967  allowMultiBarter */\n      and(0xff, sload(0x02))\n        /* \"contracts/SycrowBarter.sol\":4947:5075  if(!allowMultiBarter){... */\n      tag_247\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":5003:5018  _expectedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":4990:4999  msg.value */\n      callvalue\n        /* \"contracts/SycrowBarter.sol\":4990:5018  msg.value >= _expectedAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":4982:5064  require(msg.value >= _expectedAmount, \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_134\n      jump\t// in\n    tag_247:\n        /* \"contracts/SycrowBarter.sol\":5084:5111  _tradeEthForToken(inAmount) */\n      tag_135\n        /* \"contracts/SycrowBarter.sol\":5102:5110  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":5084:5101  _tradeEthForToken */\n      tag_250\n        /* \"contracts/SycrowBarter.sol\":5084:5111  _tradeEthForToken(inAmount) */\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":1814:2850  function initialize(... */\n    tag_61:\n        /* \"contracts/SycrowBarter.sol\":2095:2099  bool */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":2119:2129  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":2133:2140  factory */\n      immutable(\"0x26a975632f70533c9512e57b565b8ce8e2befee6b08dfbc27c4a897a20e2c1d6\")\n        /* \"contracts/SycrowBarter.sol\":2119:2140  msg.sender == factory */\n      and\n      eq\n        /* \"contracts/SycrowBarter.sol\":2111:2168  require(msg.sender == factory, \"SyCrowBarter: FORBIDDEN\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8380:8382   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":2111:2168  require(msg.sender == factory, \"SyCrowBarter: FORBIDDEN\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8362:8383   */\n      mstore\n        /* \"#utility.yul\":8419:8421   */\n      0x17\n        /* \"#utility.yul\":8399:8417   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8392:8422   */\n      mstore\n        /* \"#utility.yul\":8458:8483   */\n      0x537943726f774261727465723a20464f5242494444454e000000000000000000\n        /* \"#utility.yul\":8438:8456   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8431:8484   */\n      mstore\n        /* \"#utility.yul\":8501:8519   */\n      0x64\n      add\n        /* \"contracts/SycrowBarter.sol\":2111:2168  require(msg.sender == factory, \"SyCrowBarter: FORBIDDEN\") */\n      tag_107\n        /* \"#utility.yul\":8178:8525   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":2111:2168  require(msg.sender == factory, \"SyCrowBarter: FORBIDDEN\") */\n    tag_252:\n        /* \"contracts/SycrowBarter.sol\":2188:2200  _initialized */\n      sload(0x04)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":2187:2200  !_initialized */\n      iszero\n        /* \"contracts/SycrowBarter.sol\":2179:2238  require(!_initialized, \"SyCrowBarter: ALREADY_INITIALIZED\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8732:8734   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":2179:2238  require(!_initialized, \"SyCrowBarter: ALREADY_INITIALIZED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8714:8735   */\n      mstore\n        /* \"#utility.yul\":8771:8773   */\n      0x21\n        /* \"#utility.yul\":8751:8769   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8744:8774   */\n      mstore\n        /* \"#utility.yul\":8810:8844   */\n      0x537943726f774261727465723a20414c52454144595f494e495449414c495a45\n        /* \"#utility.yul\":8790:8808   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8783:8845   */\n      mstore\n      shl(0xfa, 0x11)\n        /* \"#utility.yul\":8861:8879   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8854:8885   */\n      mstore\n        /* \"#utility.yul\":8902:8921   */\n      0x84\n      add\n        /* \"contracts/SycrowBarter.sol\":2179:2238  require(!_initialized, \"SyCrowBarter: ALREADY_INITIALIZED\") */\n      tag_107\n        /* \"#utility.yul\":8530:8927   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":2179:2238  require(!_initialized, \"SyCrowBarter: ALREADY_INITIALIZED\") */\n    tag_255:\n        /* \"contracts/SycrowBarter.sol\":2269:2284  block.timestamp */\n      timestamp\n        /* \"contracts/SycrowBarter.sol\":2256:2265  _deadline */\n      dup5\n        /* \"contracts/SycrowBarter.sol\":2256:2284  _deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":2248:2316  require(_deadline >= block.timestamp, \"SyCrowBarter: PAST_DEADLINE\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9134:9136   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":2248:2316  require(_deadline >= block.timestamp, \"SyCrowBarter: PAST_DEADLINE\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9116:9137   */\n      mstore\n        /* \"#utility.yul\":9173:9175   */\n      0x1b\n        /* \"#utility.yul\":9153:9171   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9146:9176   */\n      mstore\n        /* \"#utility.yul\":9212:9241   */\n      0x537943726f774261727465723a20504153545f444541444c494e450000000000\n        /* \"#utility.yul\":9192:9210   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9185:9242   */\n      mstore\n        /* \"#utility.yul\":9259:9277   */\n      0x64\n      add\n        /* \"contracts/SycrowBarter.sol\":2248:2316  require(_deadline >= block.timestamp, \"SyCrowBarter: PAST_DEADLINE\") */\n      tag_107\n        /* \"#utility.yul\":8932:9283   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":2248:2316  require(_deadline >= block.timestamp, \"SyCrowBarter: PAST_DEADLINE\") */\n    tag_258:\n        /* \"contracts/SycrowBarter.sol\":2348:2388  IERC20(inToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":2382:2386  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":2348:2388  IERC20(inToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":2392:2407  amountDeposited */\n      dup7\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":2348:2373  IERC20(inToken).balanceOf */\n      dup11\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":2348:2388  IERC20(inToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_264\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_264:\n        /* \"contracts/SycrowBarter.sol\":2348:2407  IERC20(inToken).balanceOf(address(this)) >= amountDeposited */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":2327:2467  require(... */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9490:9492   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":2327:2467  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9472:9493   */\n      mstore\n        /* \"#utility.yul\":9529:9531   */\n      0x22\n        /* \"#utility.yul\":9509:9527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9502:9532   */\n      mstore\n        /* \"#utility.yul\":9568:9602   */\n      0x537943726f774261727465723a20494e53554646494349454e545f4445504f53\n        /* \"#utility.yul\":9548:9566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9541:9603   */\n      mstore\n      shl(0xf2, 0x1255)\n        /* \"#utility.yul\":9619:9637   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9612:9644   */\n      mstore\n        /* \"#utility.yul\":9661:9680   */\n      0x84\n      add\n        /* \"contracts/SycrowBarter.sol\":2327:2467  require(... */\n      tag_107\n        /* \"#utility.yul\":9288:9686   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":2327:2467  require(... */\n    tag_265:\n        /* \"contracts/SycrowBarter.sol\":2478:2486  deadline */\n      0x03\n        /* \"contracts/SycrowBarter.sol\":2478:2498  deadline = _deadline */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2509:2531  _depositedTokenAddress */\n      0x05\n        /* \"contracts/SycrowBarter.sol\":2509:2541  _depositedTokenAddress = inToken */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup12\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2551:2572  _expectedTokenAddress */\n      0x06\n        /* \"contracts/SycrowBarter.sol\":2551:2583  _expectedTokenAddress = outToken */\n      dup1\n      sload\n      swap3\n      dup11\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2594:2610  _depositedAmount */\n      0x07\n        /* \"contracts/SycrowBarter.sol\":2594:2628  _depositedAmount = amountDeposited */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2638:2653  _expectedAmount */\n      0x08\n        /* \"contracts/SycrowBarter.sol\":2638:2670  _expectedAmount = amountExpected */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2681:2691  barterType */\n      0x04\n        /* \"contracts/SycrowBarter.sol\":2681:2705  barterType = _barterType */\n      dup1\n      sload\n        /* \"contracts/SycrowBarter.sol\":2694:2705  _barterType */\n      dup11\n      swap2\n        /* \"contracts/SycrowBarter.sol\":2681:2691  barterType */\n      swap1\n      not(0xff)\n        /* \"contracts/SycrowBarter.sol\":2681:2705  barterType = _barterType */\n      and\n        /* \"contracts/SycrowBarter.sol\":2509:2541  _depositedTokenAddress = inToken */\n      0x01\n        /* \"contracts/SycrowBarter.sol\":2694:2705  _barterType */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":2681:2705  barterType = _barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_269\n      jumpi\n      tag_269\n      tag_124\n      jump\t// in\n    tag_269:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":2716:2732  allowMultiBarter */\n      0x02\n        /* \"contracts/SycrowBarter.sol\":2716:2752  allowMultiBarter = _allowMultiBarter */\n      dup1\n      sload\n      dup4\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2771:2775  WETH */\n      0x04\n        /* \"contracts/SycrowBarter.sol\":2771:2783  WETH = _WETH */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n        /* \"contracts/SycrowBarter.sol\":2716:2752  allowMultiBarter = _allowMultiBarter */\n      0x0100\n        /* \"contracts/SycrowBarter.sol\":2771:2783  WETH = _WETH */\n      mul\n        /* \"contracts/SycrowBarter.sol\":2794:2813  _initialized = true */\n      and\n      not(sub(shl(0xb0, 0x01), 0x0100))\n      swap1\n      swap2\n      and\n      or\n      shl(0xa8, 0x01)\n      swap1\n      dup2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2831:2843  _initialized */\n      swap1\n      div\n        /* \"contracts/SycrowBarter.sol\":2716:2752  allowMultiBarter = _allowMultiBarter */\n      0xff\n        /* \"contracts/SycrowBarter.sol\":2831:2843  _initialized */\n      and\n        /* \"contracts/SycrowBarter.sol\":1814:2850  function initialize(... */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_177\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_276\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":3049:3247  function getTokens()... */\n    tag_78:\n        /* \"contracts/SycrowBarter.sol\":1484:1496  _initialized */\n      sload(0x04)\n        /* \"contracts/SycrowBarter.sol\":3154:3161  address */\n      0x00\n      swap1\n      dup2\n      swap1\n      shl(0xa8, 0x01)\n        /* \"contracts/SycrowBarter.sol\":1484:1496  _initialized */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1476:1530  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_112\n      jump\t// in\n    tag_280:\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":3194:3216  _depositedTokenAddress */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":3218:3239  _expectedTokenAddress */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":3194:3216  _depositedTokenAddress */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/SycrowBarter.sol\":3218:3239  _expectedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":3049:3247  function getTokens()... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":9927:10097  function getTradeOutAmount(uint256 amount)... */\n    tag_92:\n        /* \"contracts/SycrowBarter.sol\":10015:10022  uint256 */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":10075:10090  _expectedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":10055:10071  _depositedAmount */\n      sload(0x07)\n        /* \"contracts/SycrowBarter.sol\":10046:10052  amount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":10046:10071  amount * _depositedAmount */\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"contracts/SycrowBarter.sol\":10045:10090  (amount * _depositedAmount) / _expectedAmount */\n      tag_286\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"contracts/SycrowBarter.sol\":10038:10090  return (amount * _depositedAmount) / _expectedAmount */\n      swap3\n        /* \"contracts/SycrowBarter.sol\":9927:10097  function getTradeOutAmount(uint256 amount)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":3253:3939  function getTrades()... */\n    tag_96:\n        /* \"contracts/SycrowBarter.sol\":3371:3387  address[] memory */\n      0x60\n        /* \"contracts/SycrowBarter.sol\":3401:3417  uint256[] memory */\n      dup1\n        /* \"contracts/SycrowBarter.sol\":3431:3447  uint256[] memory */\n      0x60\n        /* \"contracts/SycrowBarter.sol\":1484:1496  _initialized */\n      0x04\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1476:1530  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_112\n      jump\t// in\n    tag_289:\n        /* \"contracts/SycrowBarter.sol\":3515:3522  _trades */\n      0x09\n        /* \"contracts/SycrowBarter.sol\":3515:3529  _trades.length */\n      sload\n        /* \"contracts/SycrowBarter.sol\":3472:3498  address[] memory addresses */\n      0x00\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3501:3530  new address[](_trades.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_293\n      jumpi\n      tag_293\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_295\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_295:\n      pop\n        /* \"contracts/SycrowBarter.sol\":3583:3590  _trades */\n      0x09\n        /* \"contracts/SycrowBarter.sol\":3583:3597  _trades.length */\n      sload\n        /* \"contracts/SycrowBarter.sol\":3472:3530  address[] memory addresses = new address[](_trades.length) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/SycrowBarter.sol\":3540:3566  uint256[] memory amountsIn */\n      0x00\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3569:3598  new uint256[](_trades.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_297\n      jumpi\n      tag_297\n      tag_294\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_298\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_298:\n      pop\n        /* \"contracts/SycrowBarter.sol\":3652:3659  _trades */\n      0x09\n        /* \"contracts/SycrowBarter.sol\":3652:3666  _trades.length */\n      sload\n        /* \"contracts/SycrowBarter.sol\":3540:3598  uint256[] memory amountsIn = new uint256[](_trades.length) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/SycrowBarter.sol\":3608:3635  uint256[] memory amountsOut */\n      0x00\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3638:3667  new uint256[](_trades.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_300\n      jumpi\n      tag_300\n      tag_294\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_301\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_301:\n      pop\n        /* \"contracts/SycrowBarter.sol\":3608:3667  uint256[] memory amountsOut = new uint256[](_trades.length) */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":3683:3692  uint256 i */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":3678:3881  for (uint256 i = 0; i < _trades.length; i++) {... */\n    tag_302:\n        /* \"contracts/SycrowBarter.sol\":3702:3709  _trades */\n      0x09\n        /* \"contracts/SycrowBarter.sol\":3702:3716  _trades.length */\n      sload\n        /* \"contracts/SycrowBarter.sol\":3698:3716  i < _trades.length */\n      dup2\n      lt\n        /* \"contracts/SycrowBarter.sol\":3678:3881  for (uint256 i = 0; i < _trades.length; i++) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":3752:3759  _trades */\n      0x09\n        /* \"contracts/SycrowBarter.sol\":3760:3761  i */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":3752:3762  _trades[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_306\n      tag_307\n      jump\t// in\n    tag_306:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/SycrowBarter.sol\":3752:3770  _trades[i]._trader */\n      sload\n        /* \"contracts/SycrowBarter.sol\":3737:3749  addresses[i] */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":3752:3770  _trades[i]._trader */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3737:3746  addresses */\n      dup6\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3747:3748  i */\n      dup4\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3737:3749  addresses[i] */\n      dup2\n      lt\n      tag_310\n      jumpi\n      tag_310\n      tag_307\n      jump\t// in\n    tag_310:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SycrowBarter.sol\":3737:3770  addresses[i] = _trades[i]._trader */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":3799:3806  _trades */\n      0x09\n        /* \"contracts/SycrowBarter.sol\":3807:3808  i */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":3799:3809  _trades[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_312\n      jumpi\n      tag_312\n      tag_307\n      jump\t// in\n    tag_312:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/SycrowBarter.sol\":3799:3819  _trades[i]._amountIn */\n      0x01\n      add\n      sload\n        /* \"contracts/SycrowBarter.sol\":3784:3793  amountsIn */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":3794:3795  i */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":3784:3796  amountsIn[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_315\n      jumpi\n      tag_315\n      tag_307\n      jump\t// in\n    tag_315:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SycrowBarter.sol\":3784:3819  amountsIn[i] = _trades[i]._amountIn */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":3849:3856  _trades */\n      0x09\n        /* \"contracts/SycrowBarter.sol\":3857:3858  i */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":3849:3859  _trades[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_317\n      jumpi\n      tag_317\n      tag_307\n      jump\t// in\n    tag_317:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/SycrowBarter.sol\":3849:3870  _trades[i]._amountOut */\n      0x02\n      add\n      sload\n        /* \"contracts/SycrowBarter.sol\":3833:3843  amountsOut */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":3844:3845  i */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":3833:3846  amountsOut[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_320\n      jumpi\n      tag_320\n      tag_307\n      jump\t// in\n    tag_320:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/SycrowBarter.sol\":3833:3870  amountsOut[i] = _trades[i]._amountOut */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":3718:3721  i++ */\n      dup1\n      tag_321\n      dup2\n      tag_322\n      jump\t// in\n    tag_321:\n      swap2\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":3678:3881  for (uint256 i = 0; i < _trades.length; i++) {... */\n      jump(tag_302)\n    tag_303:\n      pop\n        /* \"contracts/SycrowBarter.sol\":3899:3908  addresses */\n      swap2\n      swap5\n      pop\n        /* \"contracts/SycrowBarter.sol\":3910:3919  amountsIn */\n      swap3\n      pop\n        /* \"contracts/SycrowBarter.sol\":3921:3931  amountsOut */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":3253:3939  function getTrades()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_177\n      jump\t// in\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10824:10826   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10806:10827   */\n      mstore\n        /* \"#utility.yul\":10863:10865   */\n      0x26\n        /* \"#utility.yul\":10843:10861   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10836:10866   */\n      mstore\n        /* \"#utility.yul\":10902:10936   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10882:10900   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10875:10937   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":10953:10971   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10946:10982   */\n      mstore\n        /* \"#utility.yul\":10999:11018   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_107\n        /* \"#utility.yul\":10622:11024   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_329:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_332\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":6236:7313  function _tradeTokenForEth(uint256 inAmount) internal {... */\n    tag_136:\n        /* \"contracts/SycrowBarter.sol\":6328:6349  _expectedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":6321:6372  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6361:6371  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":6321:6372  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6376:6384  inAmount */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":6328:6349  _expectedTokenAddress */\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6321:6360  IERC20(_expectedTokenAddress).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":6321:6372  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_336:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_337\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_337:\n        /* \"contracts/SycrowBarter.sol\":6321:6384  IERC20(_expectedTokenAddress).balanceOf(msg.sender) >= inAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":6300:6444  require(... */\n      tag_338\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_340\n      jump\t// in\n    tag_338:\n        /* \"contracts/SycrowBarter.sol\":6455:6472  uint256 outAmount */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":6475:6502  getTradeOutAmount(inAmount) */\n      tag_341\n        /* \"contracts/SycrowBarter.sol\":6493:6501  inAmount */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":6475:6492  getTradeOutAmount */\n      tag_92\n        /* \"contracts/SycrowBarter.sol\":6475:6502  getTradeOutAmount(inAmount) */\n      jump\t// in\n    tag_341:\n        /* \"contracts/SycrowBarter.sol\":6540:6544  WETH */\n      0x04\n      dup1\n      sload\n        /* \"contracts/SycrowBarter.sol\":6577:6612  _wethErc20.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6606:6610  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":6577:6612  _wethErc20.balanceOf(address(this)) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":2609:2660   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6455:6502  uint256 outAmount = getTradeOutAmount(inAmount) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/SycrowBarter.sol\":6540:6544  WETH */\n      0x0100\n      swap1\n      swap2\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6455:6502  uint256 outAmount = getTradeOutAmount(inAmount) */\n      dup3\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6540:6544  WETH */\n      dup3\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6577:6597  _wethErc20.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":6577:6612  _wethErc20.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_344:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_345\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_345:\n        /* \"contracts/SycrowBarter.sol\":6577:6625  _wethErc20.balanceOf(address(this)) >= outAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":6556:6694  require(... */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_348\n      jump\t// in\n    tag_346:\n        /* \"contracts/SycrowBarter.sol\":6711:6715  WETH */\n      0x04\n      dup1\n      sload\n        /* \"contracts/SycrowBarter.sol\":6705:6736  IWETH(WETH).withdraw(outAmount) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":345:370   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6711:6715  WETH */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6705:6725  IWETH(WETH).withdraw */\n      0x2e1a7d4d\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":6705:6736  IWETH(WETH).withdraw(outAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_350\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_350:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_352\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_352:\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":6792:6813  _expectedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":6747:6896  TransferHelper.safeTransferFrom(... */\n      tag_353\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":6792:6813  _expectedTokenAddress */\n      and\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":6827:6837  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":6859:6863  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":6878:6886  inAmount */\n      dup7\n        /* \"contracts/SycrowBarter.sol\":6747:6778  TransferHelper.safeTransferFrom */\n      tag_354\n        /* \"contracts/SycrowBarter.sol\":6747:6896  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_353:\n        /* \"contracts/SycrowBarter.sol\":6906:6959  TransferHelper.safeTransferETH(msg.sender, outAmount) */\n      tag_355\n        /* \"contracts/SycrowBarter.sol\":6937:6947  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":6949:6958  outAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":6906:6936  TransferHelper.safeTransferETH */\n      tag_190\n        /* \"contracts/SycrowBarter.sol\":6906:6959  TransferHelper.safeTransferETH(msg.sender, outAmount) */\n      jump\t// in\n    tag_355:\n        /* \"contracts/SycrowBarter.sol\":6983:7026  BaterTrade(msg.sender, inAmount, outAmount) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6994:7004  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":6983:7026  BaterTrade(msg.sender, inAmount, outAmount) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup6\n      dup2\n      mstore\n      swap2\n      dup2\n      add\n      dup5\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6970:6977  _trades */\n      0x09\n        /* \"contracts/SycrowBarter.sol\":6970:7027  _trades.push(BaterTrade(msg.sender, inAmount, outAmount)) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      0x00\n      swap3\n      swap1\n      swap3\n      mstore\n      swap3\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n      0x03\n      swap1\n      swap5\n      mul\n      swap4\n      dup5\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      swap3\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0\n      dup4\n      add\n      sstore\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/SycrowBarter.sol\":7057:7073  totalTradeAmount */\n      sload\n        /* \"contracts/SycrowBarter.sol\":7057:7084  totalTradeAmount + inAmount */\n      tag_357\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6983:7026  BaterTrade(msg.sender, inAmount, outAmount) */\n      dup5\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7057:7084  totalTradeAmount + inAmount */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"contracts/SycrowBarter.sol\":7038:7054  totalTradeAmount */\n      0x01\n        /* \"contracts/SycrowBarter.sol\":7038:7084  totalTradeAmount = totalTradeAmount + inAmount */\n      sstore\n        /* \"contracts/SycrowBarter.sol\":7169:7306  sycrFactory.notifyTradeByBarter(... */\n      mload(0x40)\n      shl(0xe0, 0xf52701b7)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":7151:7158  factory */\n      immutable(\"0x26a975632f70533c9512e57b565b8ce8e2befee6b08dfbc27c4a897a20e2c1d6\")\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":7169:7200  sycrFactory.notifyTradeByBarter */\n      dup3\n      and\n      swap1\n      0xf52701b7\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7169:7306  sycrFactory.notifyTradeByBarter(... */\n      tag_359\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7222:7226  this */\n      address\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7241:7251  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7265:7273  inAmount */\n      dup10\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7287:7296  outAmount */\n      dup10\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7169:7306  sycrFactory.notifyTradeByBarter(... */\n      0x04\n      add\n      tag_217\n      jump\t// in\n    tag_359:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_360:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_362\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_362:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":6290:7313  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":6236:7313  function _tradeTokenForEth(uint256 inAmount) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":5124:6230  function _tradeTokenForToken(uint256 inAmount) internal {... */\n    tag_162:\n        /* \"contracts/SycrowBarter.sol\":5218:5239  _expectedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":5211:5262  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":5251:5261  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":5211:5262  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":5266:5274  inAmount */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":5218:5239  _expectedTokenAddress */\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":5211:5250  IERC20(_expectedTokenAddress).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":5211:5262  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_366\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_366:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_367\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_367:\n        /* \"contracts/SycrowBarter.sol\":5211:5274  IERC20(_expectedTokenAddress).balanceOf(msg.sender) >= inAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":5190:5334  require(... */\n      tag_368\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_340\n      jump\t// in\n    tag_368:\n        /* \"contracts/SycrowBarter.sol\":5345:5362  uint256 outAmount */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":5365:5392  getTradeOutAmount(inAmount) */\n      tag_370\n        /* \"contracts/SycrowBarter.sol\":5383:5391  inAmount */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":5365:5382  getTradeOutAmount */\n      tag_92\n        /* \"contracts/SycrowBarter.sol\":5365:5392  getTradeOutAmount(inAmount) */\n      jump\t// in\n    tag_370:\n        /* \"contracts/SycrowBarter.sol\":5431:5453  _depositedTokenAddress */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":5424:5479  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":5473:5477  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":5424:5479  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":5345:5392  uint256 outAmount = getTradeOutAmount(inAmount) */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":5431:5453  _depositedTokenAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":5424:5464  IERC20(_depositedTokenAddress).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":5424:5479  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_373\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_373:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_374\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_374:\n        /* \"contracts/SycrowBarter.sol\":5424:5508  IERC20(_depositedTokenAddress).balanceOf(address(this)) >=... */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":5403:5577  require(... */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_348\n      jump\t// in\n    tag_375:\n        /* \"contracts/SycrowBarter.sol\":5633:5654  _expectedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":5588:5737  TransferHelper.safeTransferFrom(... */\n      tag_377\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":5633:5654  _expectedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":5668:5678  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":5700:5704  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":5719:5727  inAmount */\n      dup6\n        /* \"contracts/SycrowBarter.sol\":5588:5619  TransferHelper.safeTransferFrom */\n      tag_354\n        /* \"contracts/SycrowBarter.sol\":5588:5737  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_377:\n        /* \"contracts/SycrowBarter.sol\":5788:5810  _depositedTokenAddress */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":5747:5867  TransferHelper.safeTransfer(... */\n      tag_378\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":5788:5810  _depositedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":5824:5834  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":5848:5857  outAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":5747:5774  TransferHelper.safeTransfer */\n      tag_197\n        /* \"contracts/SycrowBarter.sol\":5747:5867  TransferHelper.safeTransfer(... */\n      jump\t// in\n    tag_378:\n        /* \"contracts/SycrowBarter.sol\":5891:5934  BaterTrade(msg.sender, inAmount, outAmount) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/SycrowBarter.sol\":5902:5912  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":5891:5934  BaterTrade(msg.sender, inAmount, outAmount) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      dup2\n      mstore\n      swap2\n      dup2\n      add\n      dup4\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":5878:5885  _trades */\n      0x09\n        /* \"contracts/SycrowBarter.sol\":5878:5935  _trades.push(BaterTrade(msg.sender, inAmount, outAmount)) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      0x00\n      swap3\n      swap1\n      swap3\n      mstore\n      swap3\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n      0x03\n      swap1\n      swap5\n      mul\n      swap4\n      dup5\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      swap3\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0\n      dup4\n      add\n      sstore\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/SycrowBarter.sol\":5965:5981  totalTradeAmount */\n      sload\n        /* \"contracts/SycrowBarter.sol\":5965:5992  totalTradeAmount + inAmount */\n      tag_380\n      swap1\n        /* \"contracts/SycrowBarter.sol\":5891:5934  BaterTrade(msg.sender, inAmount, outAmount) */\n      dup4\n      swap1\n        /* \"contracts/SycrowBarter.sol\":5965:5992  totalTradeAmount + inAmount */\n      tag_358\n      jump\t// in\n    tag_380:\n        /* \"contracts/SycrowBarter.sol\":5946:5962  totalTradeAmount */\n      0x01\n        /* \"contracts/SycrowBarter.sol\":5946:5992  totalTradeAmount = totalTradeAmount + inAmount */\n      sstore\n        /* \"contracts/SycrowBarter.sol\":6086:6223  sycrFactory.notifyTradeByBarter(... */\n      mload(0x40)\n      shl(0xe0, 0xf52701b7)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6059:6066  factory */\n      immutable(\"0x26a975632f70533c9512e57b565b8ce8e2befee6b08dfbc27c4a897a20e2c1d6\")\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":6086:6117  sycrFactory.notifyTradeByBarter */\n      dup3\n      and\n      swap1\n      0xf52701b7\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6086:6223  sycrFactory.notifyTradeByBarter(... */\n      tag_381\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6139:6143  this */\n      address\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6158:6168  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6182:6190  inAmount */\n      dup9\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6204:6213  outAmount */\n      dup9\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6086:6223  sycrFactory.notifyTradeByBarter(... */\n      0x04\n      add\n      tag_217\n      jump\t// in\n    tag_381:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_382\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_382:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_384\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_384:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":5180:6230  {... */\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":5124:6230  function _tradeTokenForToken(uint256 inAmount) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TransferHelper.sol\":1333:1525  function safeTransferETH(address to, uint value) internal {... */\n    tag_190:\n        /* \"contracts/libraries/TransferHelper.sol\":1440:1452  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":1402:1414  bool success */\n      0x00\n        /* \"contracts/libraries/TransferHelper.sol\":1440:1452  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TransferHelper.sol\":1419:1426  to.call */\n      dup5\n      and\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1433:1438  value */\n      dup4\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1419:1453  to.call{value:value}(new bytes(0)) */\n      mload(0x40)\n      tag_390\n      swap2\n      swap1\n      tag_391\n      jump\t// in\n    tag_390:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_394\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_393)\n    tag_394:\n      0x60\n      swap2\n      pop\n    tag_393:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1401:1453  (bool success,) = to.call{value:value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1471:1478  success */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":1463:1518  require(success, 'TransferHelper: ETH_TRANSFER_FAILED') */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12610:12612   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":1463:1518  require(success, 'TransferHelper: ETH_TRANSFER_FAILED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12592:12613   */\n      mstore\n        /* \"#utility.yul\":12649:12651   */\n      0x23\n        /* \"#utility.yul\":12629:12647   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12622:12652   */\n      mstore\n        /* \"#utility.yul\":12688:12722   */\n      0x5472616e7366657248656c7065723a204554485f5452414e534645525f464149\n        /* \"#utility.yul\":12668:12686   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12661:12723   */\n      mstore\n      shl(0xea, 0x131151)\n        /* \"#utility.yul\":12739:12757   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12732:12765   */\n      mstore\n        /* \"#utility.yul\":12782:12801   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":1463:1518  require(success, 'TransferHelper: ETH_TRANSFER_FAILED') */\n      tag_107\n        /* \"#utility.yul\":12408:12807   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":566:923  function safeTransfer(address token, address to, uint value) internal {... */\n    tag_197:\n        /* \"contracts/libraries/TransferHelper.sol\":759:804  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13004:13036   */\n      dup5\n      dup2\n      and\n        /* \"contracts/libraries/TransferHelper.sol\":759:804  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":12986:13037   */\n      mstore\n        /* \"#utility.yul\":13053:13071   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":13046:13080   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":759:804  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":12959:12977   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":759:804  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":748:805  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":748:805  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_401\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":759:804  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":748:805  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_391\n      jump\t// in\n    tag_401:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_404\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_403)\n    tag_404:\n      0x60\n      swap2\n      pop\n    tag_403:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":712:805  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":823:830  success */\n      dup2\n        /* \"contracts/libraries/TransferHelper.sol\":823:880  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_407\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":835:846  data.length */\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":835:851  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":835:879  data.length == 0 || abi.decode(data, (bool)) */\n      tag_407\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":866:870  data */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":855:879  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_407\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_407:\n        /* \"contracts/libraries/TransferHelper.sol\":815:916  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      tag_408\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13293:13295   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":815:916  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13275:13296   */\n      mstore\n        /* \"#utility.yul\":13332:13334   */\n      0x1f\n        /* \"#utility.yul\":13312:13330   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13305:13335   */\n      mstore\n        /* \"#utility.yul\":13371:13404   */\n      0x5472616e7366657248656c7065723a205452414e534645525f4641494c454400\n        /* \"#utility.yul\":13351:13369   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13344:13405   */\n      mstore\n        /* \"#utility.yul\":13422:13440   */\n      0x64\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":815:916  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      tag_107\n        /* \"#utility.yul\":13091:13446   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":815:916  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n    tag_408:\n        /* \"contracts/libraries/TransferHelper.sol\":636:923  {... */\n      pop\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":566:923  function safeTransfer(address token, address to, uint value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":7319:8230  function _tradeEthForToken(uint256 inAmount) internal {... */\n    tag_250:\n        /* \"contracts/SycrowBarter.sol\":7403:7412  msg.value */\n      callvalue\n        /* \"contracts/SycrowBarter.sol\":7391:7399  inAmount */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":7391:7412  inAmount == msg.value */\n      eq\n        /* \"contracts/SycrowBarter.sol\":7383:7454  require(inAmount == msg.value, \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\") */\n      tag_412\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13653:13655   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":7383:7454  require(inAmount == msg.value, \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13635:13656   */\n      mstore\n        /* \"#utility.yul\":13692:13694   */\n      0x25\n        /* \"#utility.yul\":13672:13690   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13665:13695   */\n      mstore\n        /* \"#utility.yul\":13731:13765   */\n      0x537943726f774261727465723a204d554c54495f54524144455f4e4f545f454e\n        /* \"#utility.yul\":13711:13729   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13704:13766   */\n      mstore\n      shl(0xda, 0x1050931151)\n        /* \"#utility.yul\":13782:13800   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13775:13810   */\n      mstore\n        /* \"#utility.yul\":13827:13846   */\n      0x84\n      add\n        /* \"contracts/SycrowBarter.sol\":7383:7454  require(inAmount == msg.value, \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\") */\n      tag_107\n        /* \"#utility.yul\":13451:13852   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":7383:7454  require(inAmount == msg.value, \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\") */\n    tag_412:\n        /* \"contracts/SycrowBarter.sol\":7465:7482  uint256 outAmount */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":7485:7512  getTradeOutAmount(inAmount) */\n      tag_415\n        /* \"contracts/SycrowBarter.sol\":7503:7511  inAmount */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":7485:7502  getTradeOutAmount */\n      tag_92\n        /* \"contracts/SycrowBarter.sol\":7485:7512  getTradeOutAmount(inAmount) */\n      jump\t// in\n    tag_415:\n        /* \"contracts/SycrowBarter.sol\":7551:7573  _depositedTokenAddress */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":7544:7599  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":7593:7597  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":7544:7599  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":7465:7512  uint256 outAmount = getTradeOutAmount(inAmount) */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":7551:7573  _depositedTokenAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7544:7584  IERC20(_depositedTokenAddress).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":7544:7599  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_418\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_418:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_419\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_419:\n        /* \"contracts/SycrowBarter.sol\":7544:7628  IERC20(_depositedTokenAddress).balanceOf(address(this)) >=... */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":7523:7697  require(... */\n      tag_420\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_348\n      jump\t// in\n    tag_420:\n        /* \"contracts/SycrowBarter.sol\":7714:7718  WETH */\n      0x04\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":7708:7727  IWETH(WETH).deposit */\n      and\n      0xd0e30db0\n        /* \"contracts/SycrowBarter.sol\":7735:7743  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":7708:7746  IWETH(WETH).deposit{value: inAmount}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_422\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_422:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_424\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_424:\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":7798:7820  _depositedTokenAddress */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":7757:7877  TransferHelper.safeTransfer(... */\n      tag_378\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":7798:7820  _depositedTokenAddress */\n      and\n      swap2\n      pop\n        /* \"contracts/SycrowBarter.sol\":7834:7844  msg.sender */\n      caller\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":7858:7867  outAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":7757:7784  TransferHelper.safeTransfer */\n      tag_197\n        /* \"contracts/SycrowBarter.sol\":7757:7877  TransferHelper.safeTransfer(... */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TransferHelper.sol\":929:1327  function safeTransferFrom(address token, address from, address to, uint value) internal {... */\n    tag_354:\n        /* \"contracts/libraries/TransferHelper.sol\":1152:1203  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14115:14130   */\n      dup6\n      dup2\n      and\n        /* \"contracts/libraries/TransferHelper.sol\":1152:1203  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":14097:14131   */\n      mstore\n        /* \"#utility.yul\":14167:14182   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":14147:14165   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":14140:14183   */\n      mstore\n        /* \"#utility.yul\":14199:14217   */\n      0x64\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":14192:14226   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":1152:1203  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":14032:14050   */\n      0x84\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":1152:1203  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":1141:1204  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/libraries/TransferHelper.sol\":1141:1151  token.call */\n      swap1\n      dup9\n      and\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":1141:1204  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      tag_436\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":1152:1203  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1141:1204  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      tag_391\n      jump\t// in\n    tag_436:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_439\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_438)\n    tag_439:\n      0x60\n      swap2\n      pop\n    tag_438:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1105:1204  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1222:1229  success */\n      dup2\n        /* \"contracts/libraries/TransferHelper.sol\":1222:1279  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_442\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1234:1245  data.length */\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":1234:1250  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":1234:1278  data.length == 0 || abi.decode(data, (bool)) */\n      tag_442\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1265:1269  data */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":1254:1278  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_442\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_442:\n        /* \"contracts/libraries/TransferHelper.sol\":1214:1320  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      tag_443\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14439:14441   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":1214:1320  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14421:14442   */\n      mstore\n        /* \"#utility.yul\":14478:14480   */\n      0x24\n        /* \"#utility.yul\":14458:14476   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14451:14481   */\n      mstore\n        /* \"#utility.yul\":14517:14551   */\n      0x5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641\n        /* \"#utility.yul\":14497:14515   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14490:14552   */\n      mstore\n      shl(0xe2, 0x12531151)\n        /* \"#utility.yul\":14568:14586   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14561:14595   */\n      mstore\n        /* \"#utility.yul\":14612:14631   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":1214:1320  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      tag_107\n        /* \"#utility.yul\":14237:14637   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":1214:1320  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n    tag_443:\n        /* \"contracts/libraries/TransferHelper.sol\":1017:1327  {... */\n      pop\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":929:1327  function safeTransferFrom(address token, address from, address to, uint value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_26:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_452:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":826:999   */\n    tag_446:\n        /* \"#utility.yul\":894:914   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":943:974   */\n      dup2\n      and\n        /* \"#utility.yul\":933:975   */\n      dup2\n      eq\n        /* \"#utility.yul\":923:993   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":989:990   */\n      0x00\n        /* \"#utility.yul\":986:987   */\n      dup1\n        /* \"#utility.yul\":979:991   */\n      revert\n        /* \"#utility.yul\":923:993   */\n    tag_457:\n        /* \"#utility.yul\":826:999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1004:1122   */\n    tag_447:\n        /* \"#utility.yul\":1090:1095   */\n      dup1\n        /* \"#utility.yul\":1083:1096   */\n      iszero\n        /* \"#utility.yul\":1076:1097   */\n      iszero\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1098   */\n      eq\n        /* \"#utility.yul\":1056:1116   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1109:1110   */\n      dup1\n        /* \"#utility.yul\":1102:1114   */\n      revert\n        /* \"#utility.yul\":1127:1971   */\n    tag_60:\n        /* \"#utility.yul\":1268:1274   */\n      0x00\n        /* \"#utility.yul\":1276:1282   */\n      dup1\n        /* \"#utility.yul\":1284:1290   */\n      0x00\n        /* \"#utility.yul\":1292:1298   */\n      dup1\n        /* \"#utility.yul\":1300:1306   */\n      0x00\n        /* \"#utility.yul\":1308:1314   */\n      dup1\n        /* \"#utility.yul\":1316:1322   */\n      0x00\n        /* \"#utility.yul\":1324:1330   */\n      dup1\n        /* \"#utility.yul\":1377:1380   */\n      0x0100\n        /* \"#utility.yul\":1365:1374   */\n      dup10\n        /* \"#utility.yul\":1356:1363   */\n      dup12\n        /* \"#utility.yul\":1352:1375   */\n      sub\n        /* \"#utility.yul\":1348:1381   */\n      slt\n        /* \"#utility.yul\":1345:1398   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":1394:1395   */\n      0x00\n        /* \"#utility.yul\":1391:1392   */\n      dup1\n        /* \"#utility.yul\":1384:1396   */\n      revert\n        /* \"#utility.yul\":1345:1398   */\n    tag_461:\n        /* \"#utility.yul\":1433:1442   */\n      dup9\n        /* \"#utility.yul\":1420:1443   */\n      calldataload\n        /* \"#utility.yul\":1472:1473   */\n      0x03\n        /* \"#utility.yul\":1465:1470   */\n      dup2\n        /* \"#utility.yul\":1462:1474   */\n      lt\n        /* \"#utility.yul\":1452:1492   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":1488:1489   */\n      0x00\n        /* \"#utility.yul\":1485:1486   */\n      dup1\n        /* \"#utility.yul\":1478:1490   */\n      revert\n        /* \"#utility.yul\":1452:1492   */\n    tag_462:\n        /* \"#utility.yul\":1511:1516   */\n      swap8\n      pop\n        /* \"#utility.yul\":1535:1573   */\n      tag_463\n        /* \"#utility.yul\":1569:1571   */\n      0x20\n        /* \"#utility.yul\":1554:1572   */\n      dup11\n      add\n        /* \"#utility.yul\":1535:1573   */\n      tag_446\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":1525:1573   */\n      swap7\n      pop\n        /* \"#utility.yul\":1592:1630   */\n      tag_464\n        /* \"#utility.yul\":1626:1628   */\n      0x40\n        /* \"#utility.yul\":1615:1624   */\n      dup11\n        /* \"#utility.yul\":1611:1629   */\n      add\n        /* \"#utility.yul\":1592:1630   */\n      tag_446\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":1582:1630   */\n      swap6\n      pop\n        /* \"#utility.yul\":1677:1679   */\n      0x60\n        /* \"#utility.yul\":1666:1675   */\n      dup10\n        /* \"#utility.yul\":1662:1680   */\n      add\n        /* \"#utility.yul\":1649:1681   */\n      calldataload\n        /* \"#utility.yul\":1639:1681   */\n      swap5\n      pop\n        /* \"#utility.yul\":1728:1731   */\n      0x80\n        /* \"#utility.yul\":1717:1726   */\n      dup10\n        /* \"#utility.yul\":1713:1732   */\n      add\n        /* \"#utility.yul\":1700:1733   */\n      calldataload\n        /* \"#utility.yul\":1690:1733   */\n      swap4\n      pop\n        /* \"#utility.yul\":1780:1783   */\n      0xa0\n        /* \"#utility.yul\":1769:1778   */\n      dup10\n        /* \"#utility.yul\":1765:1784   */\n      add\n        /* \"#utility.yul\":1752:1785   */\n      calldataload\n        /* \"#utility.yul\":1742:1785   */\n      swap3\n      pop\n        /* \"#utility.yul\":1837:1840   */\n      0xc0\n        /* \"#utility.yul\":1826:1835   */\n      dup10\n        /* \"#utility.yul\":1822:1841   */\n      add\n        /* \"#utility.yul\":1809:1842   */\n      calldataload\n        /* \"#utility.yul\":1851:1881   */\n      tag_465\n        /* \"#utility.yul\":1873:1880   */\n      dup2\n        /* \"#utility.yul\":1851:1881   */\n      tag_447\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1900:1907   */\n      swap2\n      pop\n        /* \"#utility.yul\":1926:1965   */\n      tag_466\n        /* \"#utility.yul\":1960:1963   */\n      0xe0\n        /* \"#utility.yul\":1945:1964   */\n      dup11\n      add\n        /* \"#utility.yul\":1926:1965   */\n      tag_446\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":1916:1965   */\n      swap1\n      pop\n        /* \"#utility.yul\":1127:1971   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1976:2103   */\n    tag_124:\n        /* \"#utility.yul\":2037:2047   */\n      0x4e487b71\n        /* \"#utility.yul\":2032:2035   */\n      0xe0\n        /* \"#utility.yul\":2028:2048   */\n      shl\n        /* \"#utility.yul\":2025:2026   */\n      0x00\n        /* \"#utility.yul\":2018:2049   */\n      mstore\n        /* \"#utility.yul\":2068:2072   */\n      0x21\n        /* \"#utility.yul\":2065:2066   */\n      0x04\n        /* \"#utility.yul\":2058:2073   */\n      mstore\n        /* \"#utility.yul\":2092:2096   */\n      0x24\n        /* \"#utility.yul\":2089:2090   */\n      0x00\n        /* \"#utility.yul\":2082:2097   */\n      revert\n        /* \"#utility.yul\":2108:2458   */\n    tag_70:\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2247:2265   */\n      dup2\n      add\n        /* \"#utility.yul\":2295:2296   */\n      0x03\n        /* \"#utility.yul\":2284:2297   */\n      dup4\n      lt\n        /* \"#utility.yul\":2274:2418   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":2340:2350   */\n      0x4e487b71\n        /* \"#utility.yul\":2335:2338   */\n      0xe0\n        /* \"#utility.yul\":2331:2351   */\n      shl\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2321:2352   */\n      mstore\n        /* \"#utility.yul\":2375:2379   */\n      0x21\n        /* \"#utility.yul\":2372:2373   */\n      0x04\n        /* \"#utility.yul\":2365:2380   */\n      mstore\n        /* \"#utility.yul\":2403:2407   */\n      0x24\n        /* \"#utility.yul\":2400:2401   */\n      0x00\n        /* \"#utility.yul\":2393:2408   */\n      revert\n        /* \"#utility.yul\":2274:2418   */\n    tag_469:\n        /* \"#utility.yul\":2427:2452   */\n      swap2\n      swap1\n      mstore\n        /* \"#utility.yul\":2108:2458   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2980:3415   */\n    tag_448:\n        /* \"#utility.yul\":3033:3036   */\n      0x00\n        /* \"#utility.yul\":3071:3076   */\n      dup2\n        /* \"#utility.yul\":3065:3077   */\n      mload\n        /* \"#utility.yul\":3098:3104   */\n      dup1\n        /* \"#utility.yul\":3093:3096   */\n      dup5\n        /* \"#utility.yul\":3086:3105   */\n      mstore\n        /* \"#utility.yul\":3124:3128   */\n      0x20\n        /* \"#utility.yul\":3153:3155   */\n      dup1\n        /* \"#utility.yul\":3148:3151   */\n      dup6\n        /* \"#utility.yul\":3144:3156   */\n      add\n        /* \"#utility.yul\":3137:3156   */\n      swap5\n      pop\n        /* \"#utility.yul\":3190:3192   */\n      dup1\n        /* \"#utility.yul\":3183:3188   */\n      dup5\n        /* \"#utility.yul\":3179:3193   */\n      add\n        /* \"#utility.yul\":3211:3212   */\n      0x00\n        /* \"#utility.yul\":3221:3390   */\n    tag_473:\n        /* \"#utility.yul\":3235:3241   */\n      dup4\n        /* \"#utility.yul\":3232:3233   */\n      dup2\n        /* \"#utility.yul\":3229:3242   */\n      lt\n        /* \"#utility.yul\":3221:3390   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":3296:3309   */\n      dup2\n      mload\n        /* \"#utility.yul\":3284:3310   */\n      dup8\n      mstore\n        /* \"#utility.yul\":3330:3342   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":3365:3380   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3257:3258   */\n      0x01\n        /* \"#utility.yul\":3250:3259   */\n      add\n        /* \"#utility.yul\":3221:3390   */\n      jump(tag_473)\n    tag_475:\n      pop\n        /* \"#utility.yul\":3406:3409   */\n      swap5\n      swap6\n        /* \"#utility.yul\":2980:3415   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3420:4457   */\n    tag_98:\n        /* \"#utility.yul\":3766:3768   */\n      0x60\n        /* \"#utility.yul\":3778:3799   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3848:3861   */\n      dup5\n      mload\n        /* \"#utility.yul\":3751:3769   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3870:3892   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3718:3722   */\n      0x00\n      swap1\n        /* \"#utility.yul\":3946:3950   */\n      0x20\n      swap1\n        /* \"#utility.yul\":3923:3926   */\n      0x80\n        /* \"#utility.yul\":3908:3927   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":3973:3988   */\n      dup3\n      dup9\n      add\n        /* \"#utility.yul\":3718:3722   */\n      dup5\n        /* \"#utility.yul\":4016:4211   */\n    tag_477:\n        /* \"#utility.yul\":4030:4036   */\n      dup3\n        /* \"#utility.yul\":4027:4028   */\n      dup2\n        /* \"#utility.yul\":4024:4037   */\n      lt\n        /* \"#utility.yul\":4016:4211   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":4095:4108   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4091:4130   */\n      and\n        /* \"#utility.yul\":4079:4131   */\n      dup5\n      mstore\n        /* \"#utility.yul\":4151:4163   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4186:4201   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":4127:4128   */\n      0x01\n        /* \"#utility.yul\":4045:4054   */\n      add\n        /* \"#utility.yul\":4016:4211   */\n      jump(tag_477)\n    tag_479:\n        /* \"#utility.yul\":4020:4023   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4256:4265   */\n      dup4\n        /* \"#utility.yul\":4251:4254   */\n      dup2\n        /* \"#utility.yul\":4247:4266   */\n      sub\n        /* \"#utility.yul\":4242:4244   */\n      dup3\n        /* \"#utility.yul\":4231:4240   */\n      dup6\n        /* \"#utility.yul\":4227:4245   */\n      add\n        /* \"#utility.yul\":4220:4267   */\n      mstore\n        /* \"#utility.yul\":4290:4331   */\n      tag_480\n        /* \"#utility.yul\":4327:4330   */\n      dup2\n        /* \"#utility.yul\":4319:4325   */\n      dup8\n        /* \"#utility.yul\":4290:4331   */\n      tag_448\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":4276:4331   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4379:4388   */\n      dup3\n        /* \"#utility.yul\":4371:4377   */\n      dup2\n        /* \"#utility.yul\":4367:4389   */\n      sub\n        /* \"#utility.yul\":4362:4364   */\n      0x40\n        /* \"#utility.yul\":4351:4360   */\n      dup5\n        /* \"#utility.yul\":4347:4365   */\n      add\n        /* \"#utility.yul\":4340:4390   */\n      mstore\n        /* \"#utility.yul\":4407:4451   */\n      tag_481\n        /* \"#utility.yul\":4444:4450   */\n      dup2\n        /* \"#utility.yul\":4436:4442   */\n      dup6\n        /* \"#utility.yul\":4407:4451   */\n      tag_448\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":4399:4451   */\n      swap7\n        /* \"#utility.yul\":3420:4457   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4462:4648   */\n    tag_102:\n        /* \"#utility.yul\":4521:4527   */\n      0x00\n        /* \"#utility.yul\":4574:4576   */\n      0x20\n        /* \"#utility.yul\":4562:4571   */\n      dup3\n        /* \"#utility.yul\":4553:4560   */\n      dup5\n        /* \"#utility.yul\":4549:4572   */\n      sub\n        /* \"#utility.yul\":4545:4577   */\n      slt\n        /* \"#utility.yul\":4542:4594   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4542:4594   */\n    tag_483:\n        /* \"#utility.yul\":4613:4642   */\n      tag_484\n        /* \"#utility.yul\":4632:4641   */\n      dup3\n        /* \"#utility.yul\":4613:4642   */\n      tag_446\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":4603:4642   */\n      swap4\n        /* \"#utility.yul\":4462:4648   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4653:4999   */\n    tag_108:\n        /* \"#utility.yul\":4855:4857   */\n      0x20\n        /* \"#utility.yul\":4837:4858   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4894:4896   */\n      0x16\n        /* \"#utility.yul\":4874:4892   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4867:4897   */\n      mstore\n      shl(0x50, 0x537943726f774261727465723a20494e414354495645)\n        /* \"#utility.yul\":4928:4930   */\n      0x40\n        /* \"#utility.yul\":4913:4931   */\n      dup3\n      add\n        /* \"#utility.yul\":4906:4958   */\n      mstore\n        /* \"#utility.yul\":4990:4992   */\n      0x60\n        /* \"#utility.yul\":4975:4993   */\n      add\n      swap1\n        /* \"#utility.yul\":4653:4999   */\n      jump\t// out\n        /* \"#utility.yul\":5004:5357   */\n    tag_112:\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"#utility.yul\":5188:5209   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5245:5247   */\n      0x1d\n        /* \"#utility.yul\":5225:5243   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5218:5248   */\n      mstore\n        /* \"#utility.yul\":5284:5315   */\n      0x537943726f774261727465723a204e4f545f494e495449414c495a4544000000\n        /* \"#utility.yul\":5279:5281   */\n      0x40\n        /* \"#utility.yul\":5264:5282   */\n      dup3\n      add\n        /* \"#utility.yul\":5257:5316   */\n      mstore\n        /* \"#utility.yul\":5348:5350   */\n      0x60\n        /* \"#utility.yul\":5333:5351   */\n      add\n      swap1\n        /* \"#utility.yul\":5004:5357   */\n      jump\t// out\n        /* \"#utility.yul\":5362:5607   */\n    tag_117:\n        /* \"#utility.yul\":5429:5435   */\n      0x00\n        /* \"#utility.yul\":5482:5484   */\n      0x20\n        /* \"#utility.yul\":5470:5479   */\n      dup3\n        /* \"#utility.yul\":5461:5468   */\n      dup5\n        /* \"#utility.yul\":5457:5480   */\n      sub\n        /* \"#utility.yul\":5453:5485   */\n      slt\n        /* \"#utility.yul\":5450:5502   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":5498:5499   */\n      0x00\n        /* \"#utility.yul\":5495:5496   */\n      dup1\n        /* \"#utility.yul\":5488:5500   */\n      revert\n        /* \"#utility.yul\":5450:5502   */\n    tag_488:\n        /* \"#utility.yul\":5530:5539   */\n      dup2\n        /* \"#utility.yul\":5524:5540   */\n      mload\n        /* \"#utility.yul\":5549:5577   */\n      tag_484\n        /* \"#utility.yul\":5571:5576   */\n      dup2\n        /* \"#utility.yul\":5549:5577   */\n      tag_447\n      jump\t// in\n        /* \"#utility.yul\":5612:6010   */\n    tag_120:\n        /* \"#utility.yul\":5814:5816   */\n      0x20\n        /* \"#utility.yul\":5796:5817   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5853:5855   */\n      0x22\n        /* \"#utility.yul\":5833:5851   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5826:5856   */\n      mstore\n        /* \"#utility.yul\":5892:5926   */\n      0x537943726f774261727465723a204261736520436f6e74726163742050617573\n        /* \"#utility.yul\":5887:5889   */\n      0x40\n        /* \"#utility.yul\":5872:5890   */\n      dup3\n      add\n        /* \"#utility.yul\":5865:5927   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":5958:5960   */\n      0x60\n        /* \"#utility.yul\":5943:5961   */\n      dup3\n      add\n        /* \"#utility.yul\":5936:5968   */\n      mstore\n        /* \"#utility.yul\":6000:6003   */\n      0x80\n        /* \"#utility.yul\":5985:6004   */\n      add\n      swap1\n        /* \"#utility.yul\":5612:6010   */\n      jump\t// out\n        /* \"#utility.yul\":6015:6412   */\n    tag_129:\n        /* \"#utility.yul\":6217:6219   */\n      0x20\n        /* \"#utility.yul\":6199:6220   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6256:6258   */\n      0x21\n        /* \"#utility.yul\":6236:6254   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6229:6259   */\n      mstore\n        /* \"#utility.yul\":6295:6329   */\n      0x537943726f774261727465723a20494e56414c49445f4241525445525f545950\n        /* \"#utility.yul\":6290:6292   */\n      0x40\n        /* \"#utility.yul\":6275:6293   */\n      dup3\n      add\n        /* \"#utility.yul\":6268:6330   */\n      mstore\n      shl(0xf8, 0x45)\n        /* \"#utility.yul\":6361:6363   */\n      0x60\n        /* \"#utility.yul\":6346:6364   */\n      dup3\n      add\n        /* \"#utility.yul\":6339:6370   */\n      mstore\n        /* \"#utility.yul\":6402:6405   */\n      0x80\n        /* \"#utility.yul\":6387:6406   */\n      add\n      swap1\n        /* \"#utility.yul\":6015:6412   */\n      jump\t// out\n        /* \"#utility.yul\":6417:6822   */\n    tag_134:\n        /* \"#utility.yul\":6619:6621   */\n      0x20\n        /* \"#utility.yul\":6601:6622   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6658:6660   */\n      0x29\n        /* \"#utility.yul\":6638:6656   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6631:6661   */\n      mstore\n        /* \"#utility.yul\":6697:6731   */\n      0x537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f\n        /* \"#utility.yul\":6692:6694   */\n      0x40\n        /* \"#utility.yul\":6677:6695   */\n      dup3\n      add\n        /* \"#utility.yul\":6670:6732   */\n      mstore\n      shl(0xba, 0x149154555492549151)\n        /* \"#utility.yul\":6763:6765   */\n      0x60\n        /* \"#utility.yul\":6748:6766   */\n      dup3\n      add\n        /* \"#utility.yul\":6741:6780   */\n      mstore\n        /* \"#utility.yul\":6812:6815   */\n      0x80\n        /* \"#utility.yul\":6797:6816   */\n      add\n      swap1\n        /* \"#utility.yul\":6417:6822   */\n      jump\t// out\n        /* \"#utility.yul\":7176:7532   */\n    tag_177:\n        /* \"#utility.yul\":7378:7380   */\n      0x20\n        /* \"#utility.yul\":7360:7381   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7397:7415   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7390:7420   */\n      mstore\n        /* \"#utility.yul\":7456:7490   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7451:7453   */\n      0x40\n        /* \"#utility.yul\":7436:7454   */\n      dup3\n      add\n        /* \"#utility.yul\":7429:7491   */\n      mstore\n        /* \"#utility.yul\":7523:7525   */\n      0x60\n        /* \"#utility.yul\":7508:7526   */\n      add\n      swap1\n        /* \"#utility.yul\":7176:7532   */\n      jump\t// out\n        /* \"#utility.yul\":7537:7721   */\n    tag_183:\n        /* \"#utility.yul\":7607:7613   */\n      0x00\n        /* \"#utility.yul\":7660:7662   */\n      0x20\n        /* \"#utility.yul\":7648:7657   */\n      dup3\n        /* \"#utility.yul\":7639:7646   */\n      dup5\n        /* \"#utility.yul\":7635:7658   */\n      sub\n        /* \"#utility.yul\":7631:7663   */\n      slt\n        /* \"#utility.yul\":7628:7680   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":7676:7677   */\n      0x00\n        /* \"#utility.yul\":7673:7674   */\n      dup1\n        /* \"#utility.yul\":7666:7678   */\n      revert\n        /* \"#utility.yul\":7628:7680   */\n    tag_496:\n      pop\n        /* \"#utility.yul\":7699:7715   */\n      mload\n      swap2\n        /* \"#utility.yul\":7537:7721   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7726:8173   */\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8013:8028   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":7995:8029   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8065:8080   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":8060:8062   */\n      0x20\n        /* \"#utility.yul\":8045:8063   */\n      dup4\n      add\n        /* \"#utility.yul\":8038:8081   */\n      mstore\n        /* \"#utility.yul\":8112:8114   */\n      0x40\n        /* \"#utility.yul\":8097:8115   */\n      dup3\n      add\n        /* \"#utility.yul\":8090:8124   */\n      mstore\n        /* \"#utility.yul\":8155:8157   */\n      0x60\n        /* \"#utility.yul\":8140:8158   */\n      dup2\n      add\n        /* \"#utility.yul\":8133:8167   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7944:7947   */\n      0x80\n        /* \"#utility.yul\":7929:7948   */\n      add\n      swap1\n        /* \"#utility.yul\":7726:8173   */\n      jump\t// out\n        /* \"#utility.yul\":9691:9818   */\n    tag_449:\n        /* \"#utility.yul\":9752:9762   */\n      0x4e487b71\n        /* \"#utility.yul\":9747:9750   */\n      0xe0\n        /* \"#utility.yul\":9743:9763   */\n      shl\n        /* \"#utility.yul\":9740:9741   */\n      0x00\n        /* \"#utility.yul\":9733:9764   */\n      mstore\n        /* \"#utility.yul\":9783:9787   */\n      0x11\n        /* \"#utility.yul\":9780:9781   */\n      0x04\n        /* \"#utility.yul\":9773:9788   */\n      mstore\n        /* \"#utility.yul\":9807:9811   */\n      0x24\n        /* \"#utility.yul\":9804:9805   */\n      0x00\n        /* \"#utility.yul\":9797:9812   */\n      revert\n        /* \"#utility.yul\":9823:9991   */\n    tag_285:\n        /* \"#utility.yul\":9863:9870   */\n      0x00\n        /* \"#utility.yul\":9929:9930   */\n      dup2\n        /* \"#utility.yul\":9925:9926   */\n      0x00\n        /* \"#utility.yul\":9921:9927   */\n      not\n        /* \"#utility.yul\":9917:9931   */\n      div\n        /* \"#utility.yul\":9914:9915   */\n      dup4\n        /* \"#utility.yul\":9911:9932   */\n      gt\n        /* \"#utility.yul\":9906:9907   */\n      dup3\n        /* \"#utility.yul\":9899:9908   */\n      iszero\n        /* \"#utility.yul\":9892:9909   */\n      iszero\n        /* \"#utility.yul\":9888:9933   */\n      and\n        /* \"#utility.yul\":9885:9956   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":9936:9954   */\n      tag_505\n      tag_449\n      jump\t// in\n    tag_505:\n      pop\n        /* \"#utility.yul\":9976:9985   */\n      mul\n      swap1\n        /* \"#utility.yul\":9823:9991   */\n      jump\t// out\n        /* \"#utility.yul\":9996:10213   */\n    tag_287:\n        /* \"#utility.yul\":10036:10037   */\n      0x00\n        /* \"#utility.yul\":10062:10063   */\n      dup3\n        /* \"#utility.yul\":10052:10184   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":10106:10116   */\n      0x4e487b71\n        /* \"#utility.yul\":10101:10104   */\n      0xe0\n        /* \"#utility.yul\":10097:10117   */\n      shl\n        /* \"#utility.yul\":10094:10095   */\n      0x00\n        /* \"#utility.yul\":10087:10118   */\n      mstore\n        /* \"#utility.yul\":10141:10145   */\n      0x12\n        /* \"#utility.yul\":10138:10139   */\n      0x04\n        /* \"#utility.yul\":10131:10146   */\n      mstore\n        /* \"#utility.yul\":10169:10173   */\n      0x24\n        /* \"#utility.yul\":10166:10167   */\n      0x00\n        /* \"#utility.yul\":10159:10174   */\n      revert\n        /* \"#utility.yul\":10052:10184   */\n    tag_507:\n      pop\n        /* \"#utility.yul\":10198:10207   */\n      div\n      swap1\n        /* \"#utility.yul\":9996:10213   */\n      jump\t// out\n        /* \"#utility.yul\":10218:10345   */\n    tag_294:\n        /* \"#utility.yul\":10279:10289   */\n      0x4e487b71\n        /* \"#utility.yul\":10274:10277   */\n      0xe0\n        /* \"#utility.yul\":10270:10290   */\n      shl\n        /* \"#utility.yul\":10267:10268   */\n      0x00\n        /* \"#utility.yul\":10260:10291   */\n      mstore\n        /* \"#utility.yul\":10310:10314   */\n      0x41\n        /* \"#utility.yul\":10307:10308   */\n      0x04\n        /* \"#utility.yul\":10300:10315   */\n      mstore\n        /* \"#utility.yul\":10334:10338   */\n      0x24\n        /* \"#utility.yul\":10331:10332   */\n      0x00\n        /* \"#utility.yul\":10324:10339   */\n      revert\n        /* \"#utility.yul\":10350:10477   */\n    tag_307:\n        /* \"#utility.yul\":10411:10421   */\n      0x4e487b71\n        /* \"#utility.yul\":10406:10409   */\n      0xe0\n        /* \"#utility.yul\":10402:10422   */\n      shl\n        /* \"#utility.yul\":10399:10400   */\n      0x00\n        /* \"#utility.yul\":10392:10423   */\n      mstore\n        /* \"#utility.yul\":10442:10446   */\n      0x32\n        /* \"#utility.yul\":10439:10440   */\n      0x04\n        /* \"#utility.yul\":10432:10447   */\n      mstore\n        /* \"#utility.yul\":10466:10470   */\n      0x24\n        /* \"#utility.yul\":10463:10464   */\n      0x00\n        /* \"#utility.yul\":10456:10471   */\n      revert\n        /* \"#utility.yul\":10482:10617   */\n    tag_322:\n        /* \"#utility.yul\":10521:10524   */\n      0x00\n        /* \"#utility.yul\":10542:10559   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10539:10582   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":10562:10580   */\n      tag_512\n      tag_449\n      jump\t// in\n    tag_512:\n      pop\n        /* \"#utility.yul\":10609:10610   */\n      0x01\n        /* \"#utility.yul\":10598:10611   */\n      add\n      swap1\n        /* \"#utility.yul\":10482:10617   */\n      jump\t// out\n        /* \"#utility.yul\":11029:11427   */\n    tag_340:\n        /* \"#utility.yul\":11231:11233   */\n      0x20\n        /* \"#utility.yul\":11213:11234   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11270:11272   */\n      0x22\n        /* \"#utility.yul\":11250:11268   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11243:11273   */\n      mstore\n        /* \"#utility.yul\":11309:11343   */\n      0x537943726f774261727465723a20494e53554646494349454e545f42414c414e\n        /* \"#utility.yul\":11304:11306   */\n      0x40\n        /* \"#utility.yul\":11289:11307   */\n      dup3\n      add\n        /* \"#utility.yul\":11282:11344   */\n      mstore\n      shl(0xf0, 0x4345)\n        /* \"#utility.yul\":11375:11377   */\n      0x60\n        /* \"#utility.yul\":11360:11378   */\n      dup3\n      add\n        /* \"#utility.yul\":11353:11385   */\n      mstore\n        /* \"#utility.yul\":11417:11420   */\n      0x80\n        /* \"#utility.yul\":11402:11421   */\n      add\n      swap1\n        /* \"#utility.yul\":11029:11427   */\n      jump\t// out\n        /* \"#utility.yul\":11432:11839   */\n    tag_348:\n        /* \"#utility.yul\":11634:11636   */\n      0x20\n        /* \"#utility.yul\":11616:11637   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11673:11675   */\n      0x2b\n        /* \"#utility.yul\":11653:11671   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11646:11676   */\n      mstore\n        /* \"#utility.yul\":11712:11746   */\n      0x537943726f774261727465723a20494e53554646494349454e545f434f4e5452\n        /* \"#utility.yul\":11707:11709   */\n      0x40\n        /* \"#utility.yul\":11692:11710   */\n      dup3\n      add\n        /* \"#utility.yul\":11685:11747   */\n      mstore\n      shl(0xa8, 0x4143545f42414c414e4345)\n        /* \"#utility.yul\":11778:11780   */\n      0x60\n        /* \"#utility.yul\":11763:11781   */\n      dup3\n      add\n        /* \"#utility.yul\":11756:11797   */\n      mstore\n        /* \"#utility.yul\":11829:11832   */\n      0x80\n        /* \"#utility.yul\":11814:11833   */\n      add\n      swap1\n        /* \"#utility.yul\":11432:11839   */\n      jump\t// out\n        /* \"#utility.yul\":11844:11972   */\n    tag_358:\n        /* \"#utility.yul\":11884:11887   */\n      0x00\n        /* \"#utility.yul\":11915:11916   */\n      dup3\n        /* \"#utility.yul\":11911:11917   */\n      not\n        /* \"#utility.yul\":11908:11909   */\n      dup3\n        /* \"#utility.yul\":11905:11918   */\n      gt\n        /* \"#utility.yul\":11902:11941   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":11921:11939   */\n      tag_518\n      tag_449\n      jump\t// in\n    tag_518:\n      pop\n        /* \"#utility.yul\":11957:11966   */\n      add\n      swap1\n        /* \"#utility.yul\":11844:11972   */\n      jump\t// out\n        /* \"#utility.yul\":11977:12403   */\n    tag_391:\n        /* \"#utility.yul\":12106:12109   */\n      0x00\n        /* \"#utility.yul\":12144:12150   */\n      dup3\n        /* \"#utility.yul\":12138:12151   */\n      mload\n        /* \"#utility.yul\":12169:12170   */\n      0x00\n        /* \"#utility.yul\":12179:12308   */\n    tag_520:\n        /* \"#utility.yul\":12193:12199   */\n      dup2\n        /* \"#utility.yul\":12190:12191   */\n      dup2\n        /* \"#utility.yul\":12187:12200   */\n      lt\n        /* \"#utility.yul\":12179:12308   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":12291:12295   */\n      0x20\n        /* \"#utility.yul\":12275:12289   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":12271:12296   */\n      dup2\n      add\n        /* \"#utility.yul\":12265:12297   */\n      mload\n        /* \"#utility.yul\":12252:12263   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":12245:12298   */\n      mstore\n        /* \"#utility.yul\":12208:12220   */\n      add\n        /* \"#utility.yul\":12179:12308   */\n      jump(tag_520)\n    tag_522:\n        /* \"#utility.yul\":12326:12332   */\n      dup2\n        /* \"#utility.yul\":12323:12324   */\n      dup2\n        /* \"#utility.yul\":12320:12333   */\n      gt\n        /* \"#utility.yul\":12317:12365   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":12361:12362   */\n      0x00\n        /* \"#utility.yul\":12352:12358   */\n      dup3\n        /* \"#utility.yul\":12347:12350   */\n      dup6\n        /* \"#utility.yul\":12343:12359   */\n      add\n        /* \"#utility.yul\":12336:12363   */\n      mstore\n        /* \"#utility.yul\":12317:12365   */\n    tag_523:\n      pop\n        /* \"#utility.yul\":12381:12397   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":11977:12403   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122087f701c27149048d26ffa5636d71cb0062fb3148ae1ca6513d97004b66144d1664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 48,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040526004805460ff60a81b1916905534801561001d57600080fd5b5061002733610030565b33608052610080565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6080516121c96100cc600039600081816102e7015281816103ee0152818161056f0152818161099f01528181610ab701528181610be20152818161146d015261171a01526121c96000f3fe6080604052600436106101095760003560e01c8063715018a611610095578063c45a015511610064578063c45a0155146102d5578063c6ea703814610309578063dab5a8df14610323578063e43372e914610343578063f2fde38b1461036757600080fd5b8063715018a61461023257806389523742146102475780638da5cb5b1461026e578063aa6ca808146102a057600080fd5b80633ccfd60b116100dc5780633ccfd60b146101aa5780633d370b4e146101bf57806340a6f1ab146101e95780634341f920146101ff5780635f5780e51461021257600080fd5b80630d1826051461010e57806329dcb0cf146101305780632ffc6887146101595780633072cf6014610179575b600080fd5b34801561011a57600080fd5b5061012e610129366004611c73565b610387565b005b34801561013c57600080fd5b5061014660035481565b6040519081526020015b60405180910390f35b34801561016557600080fd5b5061012e610174366004611c73565b610511565b34801561018557600080fd5b5060045461019a90600160a81b900460ff1681565b6040519015158152602001610150565b3480156101b657600080fd5b5061012e61068c565b3480156101cb57600080fd5b506101d4610a1f565b60408051928352602083019190915201610150565b3480156101f557600080fd5b5061014660015481565b61012e61020d366004611c73565b610a59565b34801561021e57600080fd5b5061019a61022d366004611cb6565b610bd5565b34801561023e57600080fd5b5061012e610e7e565b34801561025357600080fd5b506004546102619060ff1681565b6040516101509190611d56565b34801561027a57600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610150565b3480156102ac57600080fd5b506102b5610eb4565b604080516001600160a01b03938416815292909116602083015201610150565b3480156102e157600080fd5b506102887f000000000000000000000000000000000000000000000000000000000000000081565b34801561031557600080fd5b5060025461019a9060ff1681565b34801561032f57600080fd5b5061014661033e366004611c73565b610efb565b34801561034f57600080fd5b50610358610f1e565b60405161015093929190611db9565b34801561037357600080fd5b5061012e610382366004611e2e565b611144565b426003541015801561039c5750600854600154105b6103c15760405162461bcd60e51b81526004016103b890611e50565b60405180910390fd5b600454600160a81b900460ff166103ea5760405162461bcd60e51b81526004016103b890611e80565b60007f00000000000000000000000000000000000000000000000000000000000000009050806001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104719190611eb7565b1561048e5760405162461bcd60e51b81526004016103b890611ed4565b60045460009060ff1660028111156104a8576104a8611d40565b8160028111156104ba576104ba611d40565b146104d75760405162461bcd60e51b81526004016103b890611f16565b60025460ff16610503576008548310156105035760405162461bcd60e51b81526004016103b890611f57565b61050c836111df565b505050565b42600354101580156105265750600854600154105b6105425760405162461bcd60e51b81526004016103b890611e50565b600454600160a81b900460ff1661056b5760405162461bcd60e51b81526004016103b890611e80565b60007f00000000000000000000000000000000000000000000000000000000000000009050806001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f29190611eb7565b1561060f5760405162461bcd60e51b81526004016103b890611ed4565b60045460029060ff168181111561062857610628611d40565b81600281111561063a5761063a611d40565b146106575760405162461bcd60e51b81526004016103b890611f16565b60025460ff16610683576008548310156106835760405162461bcd60e51b81526004016103b890611f57565b61050c836114ea565b4260035410806106a0575060085460015410155b6106e35760405162461bcd60e51b8152602060048201526014602482015273537943726f774261727465723a2041435449564560601b60448201526064016103b8565b600454600160a81b900460ff1661070c5760405162461bcd60e51b81526004016103b890611e80565b6000546001600160a01b031633146107365760405162461bcd60e51b81526004016103b890611fa0565b600480546040516370a0823160e01b8152309281019290925261010090046001600160a01b03169060009082906370a0823190602401602060405180830381865afa158015610789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ad9190611fd5565b905080156108205760048054604051632e1a7d4d60e01b815291820183905261010090046001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156107fe57600080fd5b505af1158015610812573d6000803e3d6000fd5b505050506108203382611796565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d9190611fd5565b905080156108ac576006546108ac906001600160a01b0316338361185f565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190611fd5565b9050801561093857600554610938906001600160a01b0316338361185f565b6000808060045460ff16600281111561095357610953611d40565b03610962575083905082610990565b600260045460ff16600281111561097b5761097b611d40565b0361098a575081905082610990565b50819050835b6040516319bcb50760e11b81527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038216906333796a0e906109e4903090339088908890600401611fee565b600060405180830381600087803b1580156109fe57600080fd5b505af1158015610a12573d6000803e3d6000fd5b5050505050505050505050565b6004546000908190600160a81b900460ff16610a4d5760405162461bcd60e51b81526004016103b890611e80565b50506007546008549091565b4260035410158015610a6e5750600854600154105b610a8a5760405162461bcd60e51b81526004016103b890611e50565b600454600160a81b900460ff16610ab35760405162461bcd60e51b81526004016103b890611e80565b60007f00000000000000000000000000000000000000000000000000000000000000009050806001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a9190611eb7565b15610b575760405162461bcd60e51b81526004016103b890611ed4565b60045460019060ff166002811115610b7157610b71611d40565b816002811115610b8357610b83611d40565b14610ba05760405162461bcd60e51b81526004016103b890611f16565b60025460ff16610bcc57600854341015610bcc5760405162461bcd60e51b81526004016103b890611f57565b61050c8361197a565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c4f5760405162461bcd60e51b815260206004820152601760248201527f537943726f774261727465723a20464f5242494444454e00000000000000000060448201526064016103b8565b600454600160a81b900460ff1615610cb35760405162461bcd60e51b815260206004820152602160248201527f537943726f774261727465723a20414c52454144595f494e495449414c495a456044820152601160fa1b60648201526084016103b8565b42841015610d035760405162461bcd60e51b815260206004820152601b60248201527f537943726f774261727465723a20504153545f444541444c494e45000000000060448201526064016103b8565b6040516370a0823160e01b815230600482015286906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6d9190611fd5565b1015610dc65760405162461bcd60e51b815260206004820152602260248201527f537943726f774261727465723a20494e53554646494349454e545f4445504f53604482015261125560f21b60648201526084016103b8565b6003849055600580546001600160a01b03808b166001600160a01b03199283161790925560068054928a169290911691909117905560078690556008859055600480548a919060ff19166001836002811115610e2457610e24611d40565b0217905550506002805483151560ff199091161790556004805460ff60a81b196001600160a01b0384166101000216610100600160b01b031990911617600160a81b90811791829055900460ff1698975050505050505050565b6000546001600160a01b03163314610ea85760405162461bcd60e51b81526004016103b890611fa0565b610eb26000611af3565b565b6004546000908190600160a81b900460ff16610ee25760405162461bcd60e51b81526004016103b890611e80565b50506005546006546001600160a01b0391821691169091565b600060085460075483610f0e919061202d565b610f18919061204c565b92915050565b6060806060600460159054906101000a900460ff16610f4f5760405162461bcd60e51b81526004016103b890611e80565b60095460009067ffffffffffffffff811115610f6d57610f6d61206e565b604051908082528060200260200182016040528015610f96578160200160208202803683370190505b5060095490915060009067ffffffffffffffff811115610fb857610fb861206e565b604051908082528060200260200182016040528015610fe1578160200160208202803683370190505b5060095490915060009067ffffffffffffffff8111156110035761100361206e565b60405190808252806020026020018201604052801561102c578160200160208202803683370190505b50905060005b600954811015611137576009818154811061104f5761104f612084565b600091825260209091206003909102015484516001600160a01b039091169085908390811061108057611080612084565b60200260200101906001600160a01b031690816001600160a01b031681525050600981815481106110b3576110b3612084565b9060005260206000209060030201600101548382815181106110d7576110d7612084565b602002602001018181525050600981815481106110f6576110f6612084565b90600052602060002090600302016002015482828151811061111a5761111a612084565b60209081029190910101528061112f8161209a565b915050611032565b5091945092509050909192565b6000546001600160a01b0316331461116e5760405162461bcd60e51b81526004016103b890611fa0565b6001600160a01b0381166111d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b8565b6111dc81611af3565b50565b6006546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611227573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124b9190611fd5565b10156112695760405162461bcd60e51b81526004016103b8906120b3565b600061127482610efb565b600480546040516370a0823160e01b815230928101929092529192506101009091046001600160a01b031690829082906370a0823190602401602060405180830381865afa1580156112ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ee9190611fd5565b101561130c5760405162461bcd60e51b81526004016103b8906120f5565b60048054604051632e1a7d4d60e01b815291820184905261010090046001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561135557600080fd5b505af1158015611369573d6000803e3d6000fd5b505060065461138692506001600160a01b03169050333086611b43565b6113903383611796565b6040805160608101825233815260208101858152918101848152600980546001808201835560009290925292517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af600390940293840180546001600160a01b0319166001600160a01b0390921691909117905592517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0830155517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1909101555461145b908490612140565b60015560405163f52701b760e01b81527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063f52701b7906114b2903090339089908990600401611fee565b600060405180830381600087803b1580156114cc57600080fd5b505af11580156114e0573d6000803e3d6000fd5b5050505050505050565b6006546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115569190611fd5565b10156115745760405162461bcd60e51b81526004016103b8906120b3565b600061157f82610efb565b6005546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156115cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f09190611fd5565b101561160e5760405162461bcd60e51b81526004016103b8906120f5565b600654611626906001600160a01b0316333085611b43565b60055461163d906001600160a01b0316338361185f565b6040805160608101825233815260208101848152918101838152600980546001808201835560009290925292517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af600390940293840180546001600160a01b0319166001600160a01b0390921691909117905592517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0830155517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b19091015554611708908390612140565b60015560405163f52701b760e01b81527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063f52701b79061175f903090339088908890600401611fee565b600060405180830381600087803b15801561177957600080fd5b505af115801561178d573d6000803e3d6000fd5b50505050505050565b604080516000808252602082019092526001600160a01b0384169083906040516117c09190612158565b60006040518083038185875af1925050503d80600081146117fd576040519150601f19603f3d011682016040523d82523d6000602084013e611802565b606091505b505090508061050c5760405162461bcd60e51b815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201526213115160ea1b60648201526084016103b8565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916118bb9190612158565b6000604051808303816000865af19150503d80600081146118f8576040519150601f19603f3d011682016040523d82523d6000602084013e6118fd565b606091505b50915091508180156119275750805115806119275750808060200190518101906119279190611eb7565b6119735760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c45440060448201526064016103b8565b5050505050565b3481146119d75760405162461bcd60e51b815260206004820152602560248201527f537943726f774261727465723a204d554c54495f54524144455f4e4f545f454e604482015264105093115160da1b60648201526084016103b8565b60006119e282610efb565b6005546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a539190611fd5565b1015611a715760405162461bcd60e51b81526004016103b8906120f5565b600460019054906101000a90046001600160a01b03166001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611ac157600080fd5b505af1158015611ad5573d6000803e3d6000fd5b505060055461163d93506001600160a01b031691503390508361185f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691611ba79190612158565b6000604051808303816000865af19150503d8060008114611be4576040519150601f19603f3d011682016040523d82523d6000602084013e611be9565b606091505b5091509150818015611c13575080511580611c13575080806020019051810190611c139190611eb7565b611c6b5760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b60648201526084016103b8565b505050505050565b600060208284031215611c8557600080fd5b5035919050565b80356001600160a01b0381168114611ca357600080fd5b919050565b80151581146111dc57600080fd5b600080600080600080600080610100898b031215611cd357600080fd5b883560038110611ce257600080fd5b9750611cf060208a01611c8c565b9650611cfe60408a01611c8c565b9550606089013594506080890135935060a0890135925060c0890135611d2381611ca8565b9150611d3160e08a01611c8c565b90509295985092959890939650565b634e487b7160e01b600052602160045260246000fd5b6020810160038310611d7857634e487b7160e01b600052602160045260246000fd5b91905290565b600081518084526020808501945080840160005b83811015611dae57815187529582019590820190600101611d92565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b82811015611dfb5781516001600160a01b031684529284019290840190600101611dd6565b50505083810382850152611e0f8187611d7e565b9150508281036040840152611e248185611d7e565b9695505050505050565b600060208284031215611e4057600080fd5b611e4982611c8c565b9392505050565b602080825260169082015275537943726f774261727465723a20494e41435449564560501b604082015260600190565b6020808252601d908201527f537943726f774261727465723a204e4f545f494e495449414c495a4544000000604082015260600190565b600060208284031215611ec957600080fd5b8151611e4981611ca8565b60208082526022908201527f537943726f774261727465723a204261736520436f6e74726163742050617573604082015261195960f21b606082015260800190565b60208082526021908201527f537943726f774261727465723a20494e56414c49445f4241525445525f5459506040820152604560f81b606082015260800190565b60208082526029908201527f537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f60408201526814915455549254915160ba1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611fe757600080fd5b5051919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561204757612047612017565b500290565b60008261206957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016120ac576120ac612017565b5060010190565b60208082526022908201527f537943726f774261727465723a20494e53554646494349454e545f42414c414e604082015261434560f01b606082015260800190565b6020808252602b908201527f537943726f774261727465723a20494e53554646494349454e545f434f4e545260408201526a4143545f42414c414e434560a81b606082015260800190565b6000821982111561215357612153612017565b500190565b6000825160005b81811015612179576020818601810151858301520161215f565b81811115612188576000828501525b50919091019291505056fea264697066735822122087f701c27149048d26ffa5636d71cb0062fb3148ae1ca6513d97004b66144d1664736f6c634300080d0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27 CALLER PUSH2 0x30 JUMP JUMPDEST CALLER PUSH1 0x80 MSTORE PUSH2 0x80 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x21C9 PUSH2 0xCC PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2E7 ADD MSTORE DUP2 DUP2 PUSH2 0x3EE ADD MSTORE DUP2 DUP2 PUSH2 0x56F ADD MSTORE DUP2 DUP2 PUSH2 0x99F ADD MSTORE DUP2 DUP2 PUSH2 0xAB7 ADD MSTORE DUP2 DUP2 PUSH2 0xBE2 ADD MSTORE DUP2 DUP2 PUSH2 0x146D ADD MSTORE PUSH2 0x171A ADD MSTORE PUSH2 0x21C9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xC6EA7038 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xDAB5A8DF EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xE43372E9 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x89523742 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x3D370B4E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x40A6F1AB EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x4341F920 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x5F5780E5 EQ PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD182605 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x2FFC6887 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x3072CF60 EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x19A SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x68C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB6 JUMP JUMPDEST PUSH2 0xBD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0xE7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x261 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x19A SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0xEFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2E JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x39C JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD LT JUMPDEST PUSH2 0x3C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST ISZERO PUSH2 0x48E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0x1D40 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4BA JUMPI PUSH2 0x4BA PUSH2 0x1D40 JUMP JUMPDEST EQ PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x503 JUMPI PUSH1 0x8 SLOAD DUP4 LT ISZERO PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH2 0x50C DUP4 PUSH2 0x11DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x526 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD LT JUMPDEST PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST ISZERO PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 SWAP1 PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x628 JUMPI PUSH2 0x628 PUSH2 0x1D40 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x63A JUMPI PUSH2 0x63A PUSH2 0x1D40 JUMP JUMPDEST EQ PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x683 JUMPI PUSH1 0x8 SLOAD DUP4 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH2 0x50C DUP4 PUSH2 0x14EA JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD LT DUP1 PUSH2 0x6A0 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD LT ISZERO JUMPDEST PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x537943726F774261727465723A20414354495645 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x789 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x820 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x812 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x820 CALLER DUP3 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x8AC JUMPI PUSH1 0x6 SLOAD PUSH2 0x8AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x938 JUMPI PUSH1 0x5 SLOAD PUSH2 0x938 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x953 JUMPI PUSH2 0x953 PUSH2 0x1D40 JUMP JUMPDEST SUB PUSH2 0x962 JUMPI POP DUP4 SWAP1 POP DUP3 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x97B JUMPI PUSH2 0x97B PUSH2 0x1D40 JUMP JUMPDEST SUB PUSH2 0x98A JUMPI POP DUP2 SWAP1 POP DUP3 PUSH2 0x990 JUMP JUMPDEST POP DUP2 SWAP1 POP DUP4 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19BCB507 PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x33796A0E SWAP1 PUSH2 0x9E4 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD SWAP1 SWAP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xA6E JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD LT JUMPDEST PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB71 JUMPI PUSH2 0xB71 PUSH2 0x1D40 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB83 JUMPI PUSH2 0xB83 PUSH2 0x1D40 JUMP JUMPDEST EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0xBCC JUMPI PUSH1 0x8 SLOAD CALLVALUE LT ISZERO PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH2 0x50C DUP4 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20464F5242494444454E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20414C52454144595F494E495449414C495A45 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20504153545F444541444C494E450000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD6D SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F4445504F53 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x7 DUP7 SWAP1 SSTORE PUSH1 0x8 DUP6 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP11 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE24 JUMPI PUSH2 0xE24 PUSH2 0x1D40 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x100 MUL AND PUSH2 0x100 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DUP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DIV PUSH1 0xFF AND SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH2 0xEB2 PUSH1 0x0 PUSH2 0x1AF3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD DUP4 PUSH2 0xF0E SWAP2 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x204C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x4 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF6D JUMPI PUSH2 0xF6D PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF96 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFB8 JUMPI PUSH2 0xFB8 PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFE1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1003 JUMPI PUSH2 0x1003 PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x102C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1137 JUMPI PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x104F JUMPI PUSH2 0x104F PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1080 JUMPI PUSH2 0x1080 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10B3 JUMPI PUSH2 0x10B3 PUSH2 0x2084 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10D7 JUMPI PUSH2 0x10D7 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10F6 JUMPI PUSH2 0x10F6 PUSH2 0x2084 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x111A JUMPI PUSH2 0x111A PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x112F DUP2 PUSH2 0x209A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1032 JUMP JUMPDEST POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0x11DC DUP2 PUSH2 0x1AF3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1227 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124B SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1274 DUP3 PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12EE SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP5 SWAP1 MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1369 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH2 0x1386 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER ADDRESS DUP7 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x1390 CALLER DUP4 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 DUP2 MSTORE SWAP2 DUP2 ADD DUP5 DUP2 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE SWAP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF PUSH1 0x3 SWAP1 SWAP5 MUL SWAP4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP4 ADD SSTORE MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH2 0x145B SWAP1 DUP5 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF52701B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF52701B7 SWAP1 PUSH2 0x14B2 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1556 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0x1574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157F DUP3 PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0x160E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1626 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x163D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP2 MSTORE SWAP2 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE SWAP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF PUSH1 0x3 SWAP1 SWAP5 MUL SWAP4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP4 ADD SSTORE MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH2 0x1708 SWAP1 DUP4 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF52701B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF52701B7 SWAP1 PUSH2 0x175F SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x178D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x17C0 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A204554485F5452414E534645525F464149 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x131151 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x18BB SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18F8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1927 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1927 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1927 SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0x1973 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP2 EQ PUSH2 0x19D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204D554C54495F54524144455F4E4F545F454E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1050931151 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E2 DUP3 PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A53 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0x1A71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH2 0x163D SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP CALLER SWAP1 POP DUP4 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x1BA7 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BE4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1C13 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1C13 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C13 SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0x1C6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1CE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP8 POP PUSH2 0x1CF0 PUSH1 0x20 DUP11 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP7 POP PUSH2 0x1CFE PUSH1 0x40 DUP11 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x1D23 DUP2 PUSH2 0x1CA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D31 PUSH1 0xE0 DUP11 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1D78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DAE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1D92 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DFB JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1DD6 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1E0F DUP2 DUP8 PUSH2 0x1D7E JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E24 DUP2 DUP6 PUSH2 0x1D7E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E49 DUP3 PUSH2 0x1C8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x537943726F774261727465723A20494E414354495645 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204E4F545F494E495449414C495A4544000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E49 DUP2 PUSH2 0x1CA8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204261736520436F6E74726163742050617573 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E56414C49445F4241525445525F545950 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20414D4F554E545F4C4F5745525F5448414E5F PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x149154555492549151 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2047 JUMPI PUSH2 0x2047 PUSH2 0x2017 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2069 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x20AC JUMPI PUSH2 0x20AC PUSH2 0x2017 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F42414C414E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x4345 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F434F4E5452 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x4143545F42414C414E4345 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2153 JUMPI PUSH2 0x2153 PUSH2 0x2017 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2179 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x215F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2188 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xF7 ADD 0xC2 PUSH18 0x49048D26FFA5636D71CB0062FB3148AE1CA6 MLOAD RETURNDATASIZE SWAP8 STOP 0x4B PUSH7 0x144D1664736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "269:9830:2:-:0;;;545:32;;;-1:-1:-1;;;;545:32:2;;;1757:51;;;;;;;;;-1:-1:-1;921:32:0;719:10:1;921:18:0;:32::i;:::-;1791:10:2;1781:20;;269:9830;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;269:9830:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_initialized_154": {
									"entryPoint": null,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_tradeEthForToken_876": {
									"entryPoint": 6522,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_tradeTokenForEth_787": {
									"entryPoint": 4575,
									"id": 787,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_tradeTokenForToken_677": {
									"entryPoint": 5354,
									"id": 677,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 6899,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowMultiBarter_144": {
									"entryPoint": null,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@barterType_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deadline_146": {
									"entryPoint": null,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@factory_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAmounts_369": {
									"entryPoint": 2591,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getTokens_384": {
									"entryPoint": 3764,
									"id": 384,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getTradeOutAmount_1056": {
									"entryPoint": 3835,
									"id": 1056,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTrades_481": {
									"entryPoint": 3870,
									"id": 481,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@initialize_354": {
									"entryPoint": 3029,
									"id": 354,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 3710,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferETH_1439": {
									"entryPoint": 6038,
									"id": 1439,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1414": {
									"entryPoint": 6979,
									"id": 1414,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1368": {
									"entryPoint": 6239,
									"id": 1368,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalTradeAmount_142": {
									"entryPoint": null,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradeEthForToken_578": {
									"entryPoint": 2649,
									"id": 578,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tradeTokenForEth_545": {
									"entryPoint": 903,
									"id": 545,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tradeTokenForToken_513": {
									"entryPoint": 1297,
									"id": 513,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 4420,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1041": {
									"entryPoint": 1676,
									"id": 1041,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_ISyCrowBarterType_$1073t_addresst_addresst_uint256t_uint256t_uint256t_boolt_address": {
									"entryPoint": 7350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8174,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7609,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_ISyCrowBarterType_$1073__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_08e3709bf4c0b831cf8bc5788c36b99c92ad6a02cff038f75ddd0795dadbe1e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_53c2ce6ed47c179816a9c6f0033c5d03f04949b869cef6fd14d5246b67912975__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a273cae0d429ffac620d41ddcccea1b71b9e6e453a8ce90983b3e22305b1505__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60471f58a070287600518638a3de995e7f8b72f058b8593fb94e6702bacc457b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79383cfc7011af228083c91a74f19d88be46e1e2713e67b50fb07b6b50771355__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b599e4ab958a4499af0e5f2ac52329fcb13f4955c7283e3523e952de95899b8c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c34f7dbf762d3d0b96bf148f8cc4593d2b9473ef3d73cd2c557f8a9dbd3100e5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd025a8b4dac45f94633765487ac16f8ad7e1a6ee7e724cd8d9bc6ef3ad676e1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e50a0ae171cffc9efca2ecf30038ab4bcc5d422964b87e2fe386b4e70f368d12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e99d902835ef330efdeb5defc7644c488a1d9bd398555c575e8f17cb2a43c8b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8215,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7488,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8324,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8302,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 7336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14639:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:8"
															},
															"nodeType": "YulIf",
															"src": "94:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:8",
														"type": ""
													}
												],
												"src": "14:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:8",
														"type": ""
													}
												],
												"src": "199:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "486:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "494:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "486:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "528:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "553:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "546:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "546:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "539:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "539:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "521:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "445:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "456:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "467:4:8",
														"type": ""
													}
												],
												"src": "381:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "702:119:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "712:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "724:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "720:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "720:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "712:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "754:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "765:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "792:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "803:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "808:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "781:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "781:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "663:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "674:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "682:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "693:4:8",
														"type": ""
													}
												],
												"src": "573:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "875:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "885:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "907:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "894:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "977:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "986:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "979:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "979:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "979:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "936:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "947:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "962:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "967:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "958:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "958:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "971:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "954:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "954:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "943:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "943:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "933:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "926:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:50:8"
															},
															"nodeType": "YulIf",
															"src": "923:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "854:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "865:5:8",
														"type": ""
													}
												],
												"src": "826:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1100:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1102:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1102:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1102:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1090:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1083:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1083:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1076:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:40:8"
															},
															"nodeType": "YulIf",
															"src": "1056:60:8"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1035:5:8",
														"type": ""
													}
												],
												"src": "1004:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:636:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1382:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1391:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1394:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1384:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1384:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1384:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1356:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1365:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1352:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1352:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:3:8",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:33:8"
															},
															"nodeType": "YulIf",
															"src": "1345:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1407:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1420:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1411:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1476:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1485:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1488:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1478:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1478:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1478:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1465:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1472:1:8",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1462:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1462:12:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1455:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:20:8"
															},
															"nodeType": "YulIf",
															"src": "1452:40:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1501:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1511:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1525:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1569:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1554:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1554:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1535:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1582:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1615:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1626:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1611:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1592:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:38:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1582:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1639:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1666:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1677:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1662:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1662:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1649:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1649:32:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1639:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1690:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1728:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1713:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1713:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1700:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:33:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1742:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1769:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1780:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1765:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1765:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1752:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:33:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1794:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1826:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1837:3:8",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1822:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:33:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1798:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1873:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1851:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1851:30:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1890:17:8",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1900:7:8"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "1890:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1916:49:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1949:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1960:3:8",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1945:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1945:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1926:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:39:8"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_ISyCrowBarterType_$1073t_addresst_addresst_uint256t_uint256t_uint256t_boolt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1245:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1256:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1268:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1276:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1284:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1292:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1300:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1308:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1316:6:8",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "1324:6:8",
														"type": ""
													}
												],
												"src": "1127:844:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2025:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2032:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2037:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2018:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2065:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2068:4:8",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2058:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2058:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2058:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2089:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2082:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2082:15:8"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1976:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2229:229:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2239:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2251:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2239:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2307:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2335:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2340:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2331:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2331:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2321:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2321:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2321:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2372:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:4:8",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2365:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2365:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2400:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2403:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2393:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2393:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2393:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2287:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2295:1:8",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2284:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2284:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:21:8"
															},
															"nodeType": "YulIf",
															"src": "2274:144:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2434:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2445:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2427:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_ISyCrowBarterType_$1073__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2198:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2209:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2220:4:8",
														"type": ""
													}
												],
												"src": "2108:350:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2564:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2574:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2586:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2574:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2616:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2631:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2647:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2652:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2643:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2643:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2656:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2639:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2639:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2609:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2609:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2544:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2555:4:8",
														"type": ""
													}
												],
												"src": "2463:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2800:175:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2810:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2822:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2818:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2818:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2810:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2845:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2863:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2868:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2859:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2859:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2855:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2849:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2890:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2905:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2913:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2901:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2901:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2883:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2937:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2948:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2933:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2957:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2965:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2953:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2953:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2926:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2926:43:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2761:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2772:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2780:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2791:4:8",
														"type": ""
													}
												],
												"src": "2671:304:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3041:374:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3071:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3065:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3055:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3093:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3098:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3086:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3086:19:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3114:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3124:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3118:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3137:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3148:3:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3153:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3144:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3137:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3165:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3183:5:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3190:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3179:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:14:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3169:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3202:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3211:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3206:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3270:120:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3291:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3302:6:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3296:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3296:13:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3284:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3284:26:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3284:26:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3323:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3334:3:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3339:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3330:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3323:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3355:25:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3369:6:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3377:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3365:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3365:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3355:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3232:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3235:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3229:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3243:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3245:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3254:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3257:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3250:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3245:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3225:3:8",
																"statements": []
															},
															"src": "3221:169:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3399:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3406:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3399:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3018:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3025:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3033:3:8",
														"type": ""
													}
												],
												"src": "2980:435:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3727:730:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3737:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3755:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3766:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3751:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:18:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3741:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3785:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3796:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3778:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3808:17:8",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3819:6:8"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3812:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3834:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3854:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3848:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3838:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3877:6:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3885:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3870:22:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3901:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3912:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3923:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:19:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3901:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3946:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3940:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3959:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3977:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3985:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3973:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3973:15:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3963:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3997:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4006:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4001:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4065:146:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4086:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4101:6:8"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4095:5:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4095:13:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4118:3:8",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4123:1:8",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4114:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4114:11:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4127:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4110:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4110:19:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4091:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4091:39:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4079:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4079:52:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4079:52:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4144:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4155:3:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4160:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4151:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4151:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4144:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4176:25:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4190:6:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4198:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4186:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4186:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4176:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4027:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4030:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4024:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4038:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4040:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4049:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4052:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4045:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4045:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4040:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4020:3:8",
																"statements": []
															},
															"src": "4016:195:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4231:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4242:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4227:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4227:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4251:3:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4256:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4247:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4247:19:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4220:47:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4276:55:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4319:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4327:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4290:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:41:8"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "4280:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4351:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4362:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "4371:6:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4379:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4367:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4367:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4340:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4340:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4340:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4399:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4436:6:8"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "4444:6:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4407:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:44:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4399:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3680:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3691:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3699:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3707:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3718:4:8",
														"type": ""
													}
												],
												"src": "3420:1037:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4532:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4578:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4553:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4562:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4574:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4545:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:32:8"
															},
															"nodeType": "YulIf",
															"src": "4542:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4603:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4632:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4613:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4498:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4509:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4521:6:8",
														"type": ""
													}
												],
												"src": "4462:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4827:172:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4844:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4837:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4837:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4878:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4889:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4874:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4874:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4894:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4867:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4867:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4867:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4917:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4928:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4913:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4913:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20494e414354495645",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4933:24:8",
																		"type": "",
																		"value": "SyCrowBarter: INACTIVE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4906:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4906:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4967:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4979:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4967:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c34f7dbf762d3d0b96bf148f8cc4593d2b9473ef3d73cd2c557f8a9dbd3100e5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4804:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4818:4:8",
														"type": ""
													}
												],
												"src": "4653:346:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5178:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5195:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5188:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5229:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5240:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5225:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5225:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5245:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5218:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5218:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5268:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5279:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5264:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a204e4f545f494e495449414c495a4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5284:31:8",
																		"type": "",
																		"value": "SyCrowBarter: NOT_INITIALIZED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5257:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5257:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5257:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5325:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5337:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5348:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5333:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5333:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5325:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_08e3709bf4c0b831cf8bc5788c36b99c92ad6a02cff038f75ddd0795dadbe1e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5155:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5169:4:8",
														"type": ""
													}
												],
												"src": "5004:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5440:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5486:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5495:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5498:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5488:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5488:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5488:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5461:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5470:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5457:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5457:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5482:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5453:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5453:32:8"
															},
															"nodeType": "YulIf",
															"src": "5450:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5511:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5530:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5524:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5515:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5571:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5549:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:28:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5549:28:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5586:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5596:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5406:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5417:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5429:6:8",
														"type": ""
													}
												],
												"src": "5362:245:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5786:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5803:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5814:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5796:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5796:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5796:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5837:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5848:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5833:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5833:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5853:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5826:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5826:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5826:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5876:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5887:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5872:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5872:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a204261736520436f6e74726163742050617573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5892:34:8",
																		"type": "",
																		"value": "SyCrowBarter: Base Contract Paus"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5865:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5865:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5947:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5958:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5943:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5943:18:8"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5963:4:8",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5936:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5936:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5936:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5977:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5989:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5985:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5985:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5977:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79383cfc7011af228083c91a74f19d88be46e1e2713e67b50fb07b6b50771355__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5763:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5777:4:8",
														"type": ""
													}
												],
												"src": "5612:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6189:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6206:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6217:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6199:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6199:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6240:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6251:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6236:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6236:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6256:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6229:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6229:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6279:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6290:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6275:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6275:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20494e56414c49445f4241525445525f545950",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6295:34:8",
																		"type": "",
																		"value": "SyCrowBarter: INVALID_BARTER_TYP"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6268:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6268:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6268:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6350:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6361:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6346:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6346:18:8"
																	},
																	{
																		"hexValue": "45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6366:3:8",
																		"type": "",
																		"value": "E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6339:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6339:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6379:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6391:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6402:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6387:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6387:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6379:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e50a0ae171cffc9efca2ecf30038ab4bcc5d422964b87e2fe386b4e70f368d12__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6166:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6180:4:8",
														"type": ""
													}
												],
												"src": "6015:397:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:231:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6608:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6619:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6638:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6658:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6631:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6631:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6631:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6681:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6692:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6677:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6677:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6697:34:8",
																		"type": "",
																		"value": "SyCrowBarter: AMOUNT_LOWER_THAN_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6670:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6670:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6670:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6752:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6763:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6748:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6748:18:8"
																	},
																	{
																		"hexValue": "524551555249524544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6768:11:8",
																		"type": "",
																		"value": "REQURIRED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6741:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6741:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6789:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6801:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6812:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6797:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6797:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6789:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6568:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6582:4:8",
														"type": ""
													}
												],
												"src": "6417:405:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7001:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7018:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7029:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7011:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7011:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7011:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7052:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7063:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7048:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7048:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7068:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7041:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7041:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7041:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7091:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7102:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7087:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7087:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414354495645",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7107:22:8",
																		"type": "",
																		"value": "SyCrowBarter: ACTIVE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7080:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7080:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7080:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7139:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7151:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7162:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7147:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7147:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7139:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b599e4ab958a4499af0e5f2ac52329fcb13f4955c7283e3523e952de95899b8c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6978:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6992:4:8",
														"type": ""
													}
												],
												"src": "6827:344:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7350:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7367:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7378:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7360:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7360:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7360:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7401:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7412:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7397:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7397:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7417:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7440:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7451:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7436:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7436:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7456:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7429:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7429:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7429:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7500:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7512:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7523:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7508:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7500:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7327:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7341:4:8",
														"type": ""
													}
												],
												"src": "7176:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7618:103:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7664:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7673:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7676:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7666:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7666:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7666:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7639:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7648:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7635:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7635:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7660:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7631:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7631:32:8"
															},
															"nodeType": "YulIf",
															"src": "7628:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7689:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7705:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7699:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7699:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7689:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7584:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7595:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7607:6:8",
														"type": ""
													}
												],
												"src": "7537:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7911:262:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7921:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7933:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7944:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7929:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7929:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7921:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7957:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7975:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7980:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7971:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7971:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7984:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7967:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7967:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7961:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8002:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8017:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8025:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8013:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8013:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7995:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8049:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8060:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8045:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8045:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8069:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8077:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8065:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8065:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8038:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8038:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8038:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8101:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8112:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8097:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8097:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8117:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8090:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8090:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8090:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8144:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8155:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8140:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8140:18:8"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8160:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8133:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8133:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8133:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7856:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7867:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7875:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7883:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7891:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7902:4:8",
														"type": ""
													}
												],
												"src": "7726:447:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8352:173:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8369:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8380:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8362:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8362:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8403:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8414:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8399:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8419:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8392:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8392:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8392:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8442:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8453:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8438:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8438:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20464f5242494444454e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8458:25:8",
																		"type": "",
																		"value": "SyCrowBarter: FORBIDDEN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8431:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8431:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8431:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8493:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8505:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8516:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8501:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8493:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e99d902835ef330efdeb5defc7644c488a1d9bd398555c575e8f17cb2a43c8b2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8329:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8343:4:8",
														"type": ""
													}
												],
												"src": "8178:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8704:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8721:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8732:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8714:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8714:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8714:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8755:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8766:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8751:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8751:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8771:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8744:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8744:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8744:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8794:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8805:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8790:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8790:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414c52454144595f494e495449414c495a45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8810:34:8",
																		"type": "",
																		"value": "SyCrowBarter: ALREADY_INITIALIZE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8783:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8783:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8783:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8865:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8876:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8861:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8861:18:8"
																	},
																	{
																		"hexValue": "44",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8881:3:8",
																		"type": "",
																		"value": "D"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8854:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8854:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8854:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8894:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8906:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8917:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8902:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8902:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8894:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_53c2ce6ed47c179816a9c6f0033c5d03f04949b869cef6fd14d5246b67912975__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8681:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8695:4:8",
														"type": ""
													}
												],
												"src": "8530:397:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9106:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9123:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9134:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9116:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9116:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9157:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9168:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9153:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9153:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9173:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9146:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9146:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9146:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9196:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9207:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9192:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9192:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20504153545f444541444c494e45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9212:29:8",
																		"type": "",
																		"value": "SyCrowBarter: PAST_DEADLINE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9185:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9185:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9185:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9251:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9263:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9274:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9259:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9259:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9251:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a273cae0d429ffac620d41ddcccea1b71b9e6e453a8ce90983b3e22305b1505__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9083:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9097:4:8",
														"type": ""
													}
												],
												"src": "8932:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9462:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9479:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9490:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9472:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9472:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9472:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9513:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9524:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9509:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9509:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9529:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9502:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9502:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9502:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9552:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9563:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9548:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9548:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20494e53554646494349454e545f4445504f53",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9568:34:8",
																		"type": "",
																		"value": "SyCrowBarter: INSUFFICIENT_DEPOS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9541:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9541:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9541:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9623:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9634:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9619:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9619:18:8"
																	},
																	{
																		"hexValue": "4954",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9639:4:8",
																		"type": "",
																		"value": "IT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9612:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9612:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9612:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9653:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9665:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9676:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9661:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9661:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9653:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60471f58a070287600518638a3de995e7f8b72f058b8593fb94e6702bacc457b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9439:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9453:4:8",
														"type": ""
													}
												],
												"src": "9288:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9723:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9740:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9747:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9752:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9743:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9743:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9733:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9733:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9780:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9783:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9773:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9773:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9773:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9804:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9807:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9797:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9797:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9797:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9691:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9875:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9934:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9936:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9936:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9936:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9906:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9899:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9899:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9892:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9892:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9914:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9925:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9921:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9921:6:8"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9929:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9917:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9917:14:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9911:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9911:21:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9888:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9888:45:8"
															},
															"nodeType": "YulIf",
															"src": "9885:71:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9965:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9980:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9983:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9976:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9976:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9965:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9854:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9857:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9863:7:8",
														"type": ""
													}
												],
												"src": "9823:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10042:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10073:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10094:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10101:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10106:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10097:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10097:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10087:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10087:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10087:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10138:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10141:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10131:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10131:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10131:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10166:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10169:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10159:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10159:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10159:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10062:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10055:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10055:9:8"
															},
															"nodeType": "YulIf",
															"src": "10052:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10193:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10202:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10205:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10198:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10198:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10193:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10027:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10030:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10036:1:8",
														"type": ""
													}
												],
												"src": "9996:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10250:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10267:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10274:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10279:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10270:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10270:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10260:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10260:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10260:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10307:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10310:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10300:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10331:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10334:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10324:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10324:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10324:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10218:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10382:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10399:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10406:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10411:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10402:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10402:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10392:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10392:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10392:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10439:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10442:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10432:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10432:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10432:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10463:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10466:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10456:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10456:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10456:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10350:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10529:88:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10560:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10562:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10562:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10562:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10545:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10556:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10552:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10552:6:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10542:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10542:17:8"
															},
															"nodeType": "YulIf",
															"src": "10539:43:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10591:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10602:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10609:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10598:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10598:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10591:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10511:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10521:3:8",
														"type": ""
													}
												],
												"src": "10482:135:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10796:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10813:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10824:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10806:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10806:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10806:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10847:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10858:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10843:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10843:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10863:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10836:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10836:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10836:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10886:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10897:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10882:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10882:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10902:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10875:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10875:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10875:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10957:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10968:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10953:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10953:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10973:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10946:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10946:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10946:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10991:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11003:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11014:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10999:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10999:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10991:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10773:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10787:4:8",
														"type": ""
													}
												],
												"src": "10622:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11203:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11220:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11231:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11213:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11213:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11213:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11254:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11265:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11250:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11270:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11243:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11243:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11243:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11293:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11304:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11289:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11289:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20494e53554646494349454e545f42414c414e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11309:34:8",
																		"type": "",
																		"value": "SyCrowBarter: INSUFFICIENT_BALAN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11282:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11282:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11282:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11364:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11375:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11360:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11360:18:8"
																	},
																	{
																		"hexValue": "4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11380:4:8",
																		"type": "",
																		"value": "CE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11353:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11353:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11353:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11394:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11406:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11417:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11402:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11402:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11394:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11180:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11194:4:8",
														"type": ""
													}
												],
												"src": "11029:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11606:233:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11623:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11634:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11616:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11616:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11616:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11657:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11668:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11653:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11653:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11673:2:8",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11646:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11646:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11646:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11696:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11707:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11692:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11692:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20494e53554646494349454e545f434f4e5452",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11712:34:8",
																		"type": "",
																		"value": "SyCrowBarter: INSUFFICIENT_CONTR"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11685:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11685:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11685:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11767:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11778:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11763:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11763:18:8"
																	},
																	{
																		"hexValue": "4143545f42414c414e4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11783:13:8",
																		"type": "",
																		"value": "ACT_BALANCE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11756:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11756:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11756:41:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11806:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11818:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11829:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11814:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11814:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11806:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11583:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11597:4:8",
														"type": ""
													}
												],
												"src": "11432:407:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11892:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11919:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11921:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11921:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11921:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11908:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11915:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11911:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11911:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11905:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11905:13:8"
															},
															"nodeType": "YulIf",
															"src": "11902:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11950:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11961:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11964:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11957:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11957:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11950:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11875:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11878:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11884:3:8",
														"type": ""
													}
												],
												"src": "11844:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12114:289:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12124:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12144:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12138:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12128:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12160:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12169:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12164:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12231:77:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "12256:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12261:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12252:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12252:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "12279:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "12287:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "12275:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12275:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12291:4:8",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12271:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12271:25:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12265:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12265:32:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12245:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12245:53:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12245:53:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12190:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12193:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12187:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12187:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12201:21:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12203:17:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12212:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12215:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12208:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12208:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12203:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12183:3:8",
																"statements": []
															},
															"src": "12179:129:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12334:31:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "12347:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12352:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12343:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12343:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12361:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12336:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12336:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12336:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12323:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12326:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12320:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12320:13:8"
															},
															"nodeType": "YulIf",
															"src": "12317:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12374:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12385:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12390:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12381:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12381:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12374:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12090:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12095:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12106:3:8",
														"type": ""
													}
												],
												"src": "11977:426:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12582:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12599:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12610:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12592:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12592:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12592:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12633:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12644:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12629:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12629:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12649:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12622:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12622:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12622:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12672:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12683:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12668:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12668:18:8"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a204554485f5452414e534645525f464149",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12688:34:8",
																		"type": "",
																		"value": "TransferHelper: ETH_TRANSFER_FAI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12661:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12661:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12661:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12743:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12754:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12739:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12739:18:8"
																	},
																	{
																		"hexValue": "4c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12759:5:8",
																		"type": "",
																		"value": "LED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12732:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12732:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12732:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12774:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12786:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12797:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12782:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12782:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12774:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12559:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12573:4:8",
														"type": ""
													}
												],
												"src": "12408:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12941:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12951:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12963:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12974:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12959:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12959:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12951:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12993:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13008:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13024:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13029:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13020:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13020:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13033:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13016:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13016:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13004:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13004:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12986:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12986:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12986:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13057:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13068:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13053:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13053:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13073:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13046:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13046:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13046:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12902:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12913:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12921:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12932:4:8",
														"type": ""
													}
												],
												"src": "12812:274:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13265:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13282:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13293:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13275:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13275:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13275:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13316:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13327:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13312:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13312:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13332:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13305:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13305:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13305:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13355:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13366:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13351:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13351:18:8"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13371:33:8",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13344:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13344:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13344:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13414:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13426:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13437:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13422:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13422:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13414:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13242:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13256:4:8",
														"type": ""
													}
												],
												"src": "13091:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13625:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13642:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13653:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13635:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13635:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13635:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13676:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13687:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13672:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13672:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13692:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13665:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13665:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13665:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13715:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13726:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13711:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13711:18:8"
																	},
																	{
																		"hexValue": "537943726f774261727465723a204d554c54495f54524144455f4e4f545f454e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13731:34:8",
																		"type": "",
																		"value": "SyCrowBarter: MULTI_TRADE_NOT_EN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13704:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13704:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13704:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13786:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13797:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13782:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13782:18:8"
																	},
																	{
																		"hexValue": "41424c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13802:7:8",
																		"type": "",
																		"value": "ABLED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13775:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13775:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13775:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13819:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13831:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13842:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13827:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13827:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13819:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd025a8b4dac45f94633765487ac16f8ad7e1a6ee7e724cd8d9bc6ef3ad676e1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13602:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13616:4:8",
														"type": ""
													}
												],
												"src": "13451:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14014:218:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14024:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14036:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14047:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14032:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14032:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14024:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14059:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14077:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14082:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14073:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14073:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14086:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14069:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14069:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14063:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14104:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14119:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14127:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14115:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14115:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14097:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14097:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14097:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14151:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14162:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14147:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14147:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14171:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14179:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14167:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14167:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14140:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14140:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14140:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14203:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14214:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14199:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14199:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14219:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14192:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14192:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14192:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13967:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13978:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13986:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13994:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14005:4:8",
														"type": ""
													}
												],
												"src": "13857:375:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14411:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14428:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14439:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14421:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14421:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14421:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14462:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14473:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14458:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14458:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14478:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14451:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14451:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14451:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14501:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14512:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14497:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14497:18:8"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14517:34:8",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FROM_FA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14490:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14490:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14490:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14572:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14583:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14568:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14568:18:8"
																	},
																	{
																		"hexValue": "494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14588:6:8",
																		"type": "",
																		"value": "ILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14561:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14561:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14561:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14604:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14616:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14627:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14612:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14612:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14604:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14388:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14402:4:8",
														"type": ""
													}
												],
												"src": "14237:400:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_enum$_ISyCrowBarterType_$1073t_addresst_addresst_uint256t_uint256t_uint256t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        let value_1 := calldataload(add(headStart, 192))\n        validator_revert_bool(value_1)\n        value6 := value_1\n        value7 := abi_decode_address(add(headStart, 224))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_ISyCrowBarterType_$1073__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, 96)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value1, pos)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_array_uint256_dyn(value2, tail_2)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_c34f7dbf762d3d0b96bf148f8cc4593d2b9473ef3d73cd2c557f8a9dbd3100e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"SyCrowBarter: INACTIVE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_08e3709bf4c0b831cf8bc5788c36b99c92ad6a02cff038f75ddd0795dadbe1e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"SyCrowBarter: NOT_INITIALIZED\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_79383cfc7011af228083c91a74f19d88be46e1e2713e67b50fb07b6b50771355__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"SyCrowBarter: Base Contract Paus\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e50a0ae171cffc9efca2ecf30038ab4bcc5d422964b87e2fe386b4e70f368d12__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SyCrowBarter: INVALID_BARTER_TYP\")\n        mstore(add(headStart, 96), \"E\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"SyCrowBarter: AMOUNT_LOWER_THAN_\")\n        mstore(add(headStart, 96), \"REQURIRED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b599e4ab958a4499af0e5f2ac52329fcb13f4955c7283e3523e952de95899b8c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"SyCrowBarter: ACTIVE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e99d902835ef330efdeb5defc7644c488a1d9bd398555c575e8f17cb2a43c8b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"SyCrowBarter: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_53c2ce6ed47c179816a9c6f0033c5d03f04949b869cef6fd14d5246b67912975__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SyCrowBarter: ALREADY_INITIALIZE\")\n        mstore(add(headStart, 96), \"D\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5a273cae0d429ffac620d41ddcccea1b71b9e6e453a8ce90983b3e22305b1505__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SyCrowBarter: PAST_DEADLINE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60471f58a070287600518638a3de995e7f8b72f058b8593fb94e6702bacc457b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"SyCrowBarter: INSUFFICIENT_DEPOS\")\n        mstore(add(headStart, 96), \"IT\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"SyCrowBarter: INSUFFICIENT_BALAN\")\n        mstore(add(headStart, 96), \"CE\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"SyCrowBarter: INSUFFICIENT_CONTR\")\n        mstore(add(headStart, 96), \"ACT_BALANCE\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TransferHelper: ETH_TRANSFER_FAI\")\n        mstore(add(headStart, 96), \"LED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"TransferHelper: TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dd025a8b4dac45f94633765487ac16f8ad7e1a6ee7e724cd8d9bc6ef3ad676e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"SyCrowBarter: MULTI_TRADE_NOT_EN\")\n        mstore(add(headStart, 96), \"ABLED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"TransferHelper: TRANSFER_FROM_FA\")\n        mstore(add(headStart, 96), \"ILED\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"140": [
									{
										"length": 32,
										"start": 743
									},
									{
										"length": 32,
										"start": 1006
									},
									{
										"length": 32,
										"start": 1391
									},
									{
										"length": 32,
										"start": 2463
									},
									{
										"length": 32,
										"start": 2743
									},
									{
										"length": 32,
										"start": 3042
									},
									{
										"length": 32,
										"start": 5229
									},
									{
										"length": 32,
										"start": 5914
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xC6EA7038 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xDAB5A8DF EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xE43372E9 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x89523742 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x3D370B4E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x40A6F1AB EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x4341F920 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x5F5780E5 EQ PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD182605 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x2FFC6887 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x3072CF60 EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x19A SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x68C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB6 JUMP JUMPDEST PUSH2 0xBD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0xE7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x261 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x19A SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0xEFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2E JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x39C JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD LT JUMPDEST PUSH2 0x3C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST ISZERO PUSH2 0x48E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0x1D40 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4BA JUMPI PUSH2 0x4BA PUSH2 0x1D40 JUMP JUMPDEST EQ PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x503 JUMPI PUSH1 0x8 SLOAD DUP4 LT ISZERO PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH2 0x50C DUP4 PUSH2 0x11DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x526 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD LT JUMPDEST PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST ISZERO PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 SWAP1 PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x628 JUMPI PUSH2 0x628 PUSH2 0x1D40 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x63A JUMPI PUSH2 0x63A PUSH2 0x1D40 JUMP JUMPDEST EQ PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x683 JUMPI PUSH1 0x8 SLOAD DUP4 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH2 0x50C DUP4 PUSH2 0x14EA JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD LT DUP1 PUSH2 0x6A0 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD LT ISZERO JUMPDEST PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x537943726F774261727465723A20414354495645 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x789 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x820 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x812 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x820 CALLER DUP3 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x8AC JUMPI PUSH1 0x6 SLOAD PUSH2 0x8AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x938 JUMPI PUSH1 0x5 SLOAD PUSH2 0x938 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x953 JUMPI PUSH2 0x953 PUSH2 0x1D40 JUMP JUMPDEST SUB PUSH2 0x962 JUMPI POP DUP4 SWAP1 POP DUP3 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x97B JUMPI PUSH2 0x97B PUSH2 0x1D40 JUMP JUMPDEST SUB PUSH2 0x98A JUMPI POP DUP2 SWAP1 POP DUP3 PUSH2 0x990 JUMP JUMPDEST POP DUP2 SWAP1 POP DUP4 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19BCB507 PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x33796A0E SWAP1 PUSH2 0x9E4 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD SWAP1 SWAP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xA6E JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD LT JUMPDEST PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB71 JUMPI PUSH2 0xB71 PUSH2 0x1D40 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB83 JUMPI PUSH2 0xB83 PUSH2 0x1D40 JUMP JUMPDEST EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0xBCC JUMPI PUSH1 0x8 SLOAD CALLVALUE LT ISZERO PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH2 0x50C DUP4 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20464F5242494444454E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20414C52454144595F494E495449414C495A45 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20504153545F444541444C494E450000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD6D SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F4445504F53 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x7 DUP7 SWAP1 SSTORE PUSH1 0x8 DUP6 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP11 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE24 JUMPI PUSH2 0xE24 PUSH2 0x1D40 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x100 MUL AND PUSH2 0x100 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DUP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DIV PUSH1 0xFF AND SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH2 0xEB2 PUSH1 0x0 PUSH2 0x1AF3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD DUP4 PUSH2 0xF0E SWAP2 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x204C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x4 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF6D JUMPI PUSH2 0xF6D PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF96 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFB8 JUMPI PUSH2 0xFB8 PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFE1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1003 JUMPI PUSH2 0x1003 PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x102C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1137 JUMPI PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x104F JUMPI PUSH2 0x104F PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1080 JUMPI PUSH2 0x1080 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10B3 JUMPI PUSH2 0x10B3 PUSH2 0x2084 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10D7 JUMPI PUSH2 0x10D7 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10F6 JUMPI PUSH2 0x10F6 PUSH2 0x2084 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x111A JUMPI PUSH2 0x111A PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x112F DUP2 PUSH2 0x209A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1032 JUMP JUMPDEST POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0x11DC DUP2 PUSH2 0x1AF3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1227 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124B SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1274 DUP3 PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12EE SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP5 SWAP1 MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1369 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH2 0x1386 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER ADDRESS DUP7 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x1390 CALLER DUP4 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 DUP2 MSTORE SWAP2 DUP2 ADD DUP5 DUP2 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE SWAP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF PUSH1 0x3 SWAP1 SWAP5 MUL SWAP4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP4 ADD SSTORE MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH2 0x145B SWAP1 DUP5 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF52701B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF52701B7 SWAP1 PUSH2 0x14B2 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1556 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0x1574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157F DUP3 PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0x160E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1626 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x163D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP2 MSTORE SWAP2 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE SWAP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF PUSH1 0x3 SWAP1 SWAP5 MUL SWAP4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP4 ADD SSTORE MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH2 0x1708 SWAP1 DUP4 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF52701B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF52701B7 SWAP1 PUSH2 0x175F SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x178D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x17C0 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A204554485F5452414E534645525F464149 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x131151 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x18BB SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18F8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1927 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1927 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1927 SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0x1973 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP2 EQ PUSH2 0x19D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204D554C54495F54524144455F4E4F545F454E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1050931151 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E2 DUP3 PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A53 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST LT ISZERO PUSH2 0x1A71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH2 0x163D SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP CALLER SWAP1 POP DUP4 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x1BA7 SWAP2 SWAP1 PUSH2 0x2158 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BE4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1C13 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1C13 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C13 SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0x1C6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1CE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP8 POP PUSH2 0x1CF0 PUSH1 0x20 DUP11 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP7 POP PUSH2 0x1CFE PUSH1 0x40 DUP11 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x1D23 DUP2 PUSH2 0x1CA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D31 PUSH1 0xE0 DUP11 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1D78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DAE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1D92 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DFB JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1DD6 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1E0F DUP2 DUP8 PUSH2 0x1D7E JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E24 DUP2 DUP6 PUSH2 0x1D7E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E49 DUP3 PUSH2 0x1C8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x537943726F774261727465723A20494E414354495645 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204E4F545F494E495449414C495A4544000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E49 DUP2 PUSH2 0x1CA8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204261736520436F6E74726163742050617573 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E56414C49445F4241525445525F545950 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20414D4F554E545F4C4F5745525F5448414E5F PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x149154555492549151 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2047 JUMPI PUSH2 0x2047 PUSH2 0x2017 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2069 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x20AC JUMPI PUSH2 0x20AC PUSH2 0x2017 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F42414C414E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x4345 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F434F4E5452 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x4143545F42414C414E4345 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2153 JUMPI PUSH2 0x2153 PUSH2 0x2017 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2179 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x215F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2188 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xF7 ADD 0xC2 PUSH18 0x49048D26FFA5636D71CB0062FB3148AE1CA6 MLOAD RETURNDATASIZE SWAP8 STOP 0x4B PUSH7 0x144D1664736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "269:9830:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4336:380;;;;;;;;;;-1:-1:-1;4336:380:2;;;;;:::i;:::-;;:::i;:::-;;442:23;;;;;;;;;;;;;;;;;;;345:25:8;;;333:2;318:18;442:23:2;;;;;;;;3945:385;;;;;;;;;;-1:-1:-1;3945:385:2;;;;;:::i;:::-;;:::i;545:32::-;;;;;;;;;;-1:-1:-1;545:32:2;;;;-1:-1:-1;;;545:32:2;;;;;;;;;546:14:8;;539:22;521:41;;509:2;494:18;545:32:2;381:187:8;8236:1685:2;;;;;;;;;;;;;:::i;2856:187::-;;;;;;;;;;;;;:::i;:::-;;;;747:25:8;;;803:2;788:18;;781:34;;;;720:18;2856:187:2;573:248:8;370:31:2;;;;;;;;;;;;;;;;4722:396;;;;;;:::i;:::-;;:::i;1814:1036::-;;;;;;;;;;-1:-1:-1;1814:1036:2;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;472:35:2:-;;;;;;;;;;-1:-1:-1;472:35:2;;;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;2627:32:8;;;2609:51;;2597:2;2582:18;1036:85:0;2463:203:8;3049:198:2;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2901:15:8;;;2883:34;;2953:15;;;;2948:2;2933:18;;2926:43;2818:18;3049:198:2;2671:304:8;323:41:2;;;;;;;;;;;;;;;407:28;;;;;;;;;;-1:-1:-1;407:28:2;;;;;;;;9927:170;;;;;;;;;;-1:-1:-1;9927:170:2;;;;;:::i;:::-;;:::i;3253:686::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;4336:380:2:-;966:15;954:8;;:27;;:65;;;;;1004:15;;985:16;;:34;954:65;933:134;;;;-1:-1:-1;;;933:134:2;;;;;;;:::i;:::-;;;;;;;;;1484:12:::1;::::0;-1:-1:-1;;;1484:12:2;::::1;;;1476:54;;;;-1:-1:-1::0;;;1476:54:2::1;;;;;;;:::i;:::-;1587:33:::2;1644:7;1587:65;;1671:12;-1:-1:-1::0;;;;;1671:21:2::2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1670:24;1662:71;;;;-1:-1:-1::0;;;1662:71:2::2;;;;;;;:::i;:::-;1180:10:::3;::::0;4498:31:::3;::::0;1180:10:::3;;1165:25;::::0;::::3;;;;;;:::i;:::-;:11;:25;;;;;;;;:::i;:::-;;1157:71;;;;-1:-1:-1::0;;;1157:71:2::3;;;;;;;:::i;:::-;4550:16:::4;::::0;::::4;;4545:128;;4601:15;;4589:8;:27;;4581:81;;;;-1:-1:-1::0;;;4581:81:2::4;;;;;;;:::i;:::-;4682:27;4700:8;4682:17;:27::i;:::-;1743:1:::3;1577:174:::2;4336:380:::0;:::o;3945:385::-;966:15;954:8;;:27;;:65;;;;;1004:15;;985:16;;:34;954:65;933:134;;;;-1:-1:-1;;;933:134:2;;;;;;;:::i;:::-;1484:12:::1;::::0;-1:-1:-1;;;1484:12:2;::::1;;;1476:54;;;;-1:-1:-1::0;;;1476:54:2::1;;;;;;;:::i;:::-;1587:33:::2;1644:7;1587:65;;1671:12;-1:-1:-1::0;;;;;1671:21:2::2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1670:24;1662:71;;;;-1:-1:-1::0;;;1662:71:2::2;;;;;;;:::i;:::-;1180:10:::3;::::0;4109:33:::3;::::0;1180:10:::3;;1165:25:::0;;::::3;;;;;;:::i;:::-;:11;:25;;;;;;;;:::i;:::-;;1157:71;;;;-1:-1:-1::0;;;1157:71:2::3;;;;;;;:::i;:::-;4162:16:::4;::::0;::::4;;4158:127;;4213:15;;4201:8;:27;;4193:81;;;;-1:-1:-1::0;;;4193:81:2::4;;;;;;;:::i;:::-;4294:29;4314:8;4294:19;:29::i;8236:1685::-:0;1319:15;1308:8;;:26;:65;;;;1358:15;;1338:16;;:35;;1308:65;1287:132;;;;-1:-1:-1;;;1287:132:2;;7029:2:8;1287:132:2;;;7011:21:8;7068:2;7048:18;;;7041:30;-1:-1:-1;;;7087:18:8;;;7080:50;7147:18;;1287:132:2;6827:344:8;1287:132:2;1484:12:::1;::::0;-1:-1:-1;;;1484:12:2;::::1;;;1476:54;;;;-1:-1:-1::0;;;1476:54:2::1;;;;;;;:::i;:::-;1082:7:0::0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0::2;1240:68;;;;-1:-1:-1::0;;;1240:68:0::2;;;;;;;:::i;:::-;8347:4:2::3;::::0;;8384:35:::3;::::0;-1:-1:-1;;;8384:35:2;;8413:4:::3;8384:35:::0;;::::3;2609:51:8::0;;;;8347:4:2::3;::::0;::::3;-1:-1:-1::0;;;;;8347:4:2::3;::::0;8320:17:::3;::::0;8347:4;;8384:20:::3;::::0;2582:18:8;;8384:35:2::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8363:56:::0;-1:-1:-1;8434:14:2;;8430:145:::3;;8470:4;::::0;;8464:32:::3;::::0;-1:-1:-1;;;8464:32:2;;;;::::3;345:25:8::0;;;8470:4:2::3;::::0;::::3;-1:-1:-1::0;;;;;8470:4:2::3;::::0;8464:20:::3;::::0;318:18:8;;8464:32:2::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;8510:54;8541:10;8553;8510:30;:54::i;:::-;8623:21;::::0;8616:76:::3;::::0;-1:-1:-1;;;8616:76:2;;8677:4:::3;8616:76;::::0;::::3;2609:51:8::0;8585:28:2::3;::::0;-1:-1:-1;;;;;8623:21:2::3;::::0;8616:39:::3;::::0;2582:18:8;;8616:76:2::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8585:107:::0;-1:-1:-1;8707:24:2;;8703:201:::3;;8792:21;::::0;8747:146:::3;::::0;-1:-1:-1;;;;;8792:21:2::3;8831:10;8859:20:::0;8747:27:::3;:146::i;:::-;8953:22;::::0;8946:68:::3;::::0;-1:-1:-1;;;8946:68:2;;9008:4:::3;8946:68;::::0;::::3;2609:51:8::0;8914:29:2::3;::::0;-1:-1:-1;;;;;8953:22:2::3;::::0;8946:53:::3;::::0;2582:18:8;;8946:68:2::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8914:100:::0;-1:-1:-1;9029:25:2;;9025:204:::3;;9115:22;::::0;9070:148:::3;::::0;-1:-1:-1;;;;;9115:22:2::3;9155:10;9183:21:::0;9070:27:::3;:148::i;:::-;9238:14;::::0;;9299:10:::3;::::0;::::3;;:45;::::0;::::3;;;;;;:::i;:::-;::::0;9295:389:::3;;-1:-1:-1::0;9369:10:2;;-1:-1:-1;9402:20:2;9295:389:::3;;;9457:33;9443:10;::::0;::::3;;:47;::::0;::::3;;;;;;:::i;:::-;::::0;9439:245:::3;;-1:-1:-1::0;9515:21:2;;-1:-1:-1;9559:20:2;9439:245:::3;;;-1:-1:-1::0;9619:21:2;;-1:-1:-1;9663:10:2;9439:245:::3;9777:137;::::0;-1:-1:-1;;;9777:137:2;;9750:7:::3;::::0;-1:-1:-1;;;;;9777:36:2;::::3;::::0;::::3;::::0;:137:::3;::::0;9835:4:::3;::::0;9854:10:::3;::::0;9878:6;;9898;;9777:137:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;8310:1611;;;;;;;8236:1685::o:0;2856:187::-;1484:12;;2962:7;;;;-1:-1:-1;;;1484:12:2;;;;1476:54;;;;-1:-1:-1;;;1476:54:2;;;;;;;:::i;:::-;-1:-1:-1;;3002:16:2::1;::::0;3020:15:::1;::::0;2856:187;;:::o;4722:396::-;966:15;954:8;;:27;;:65;;;;;1004:15;;985:16;;:34;954:65;933:134;;;;-1:-1:-1;;;933:134:2;;;;;;;:::i;:::-;1484:12:::1;::::0;-1:-1:-1;;;1484:12:2;::::1;;;1476:54;;;;-1:-1:-1::0;;;1476:54:2::1;;;;;;;:::i;:::-;1587:33:::2;1644:7;1587:65;;1671:12;-1:-1:-1::0;;;;;1671:21:2::2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1670:24;1662:71;;;;-1:-1:-1::0;;;1662:71:2::2;;;;;;;:::i;:::-;1180:10:::3;::::0;4900:31:::3;::::0;1180:10:::3;;1165:25;::::0;::::3;;;;;;:::i;:::-;:11;:25;;;;;;;;:::i;:::-;;1157:71;;;;-1:-1:-1::0;;;1157:71:2::3;;;;;;;:::i;:::-;4951:16:::4;::::0;::::4;;4947:128;;5003:15;;4990:9;:28;;4982:82;;;;-1:-1:-1::0;;;4982:82:2::4;;;;;;;:::i;:::-;5084:27;5102:8;5084:17;:27::i;1814:1036::-:0;2095:4;2119:10;-1:-1:-1;;;;;2133:7:2;2119:21;;2111:57;;;;-1:-1:-1;;;2111:57:2;;8380:2:8;2111:57:2;;;8362:21:8;8419:2;8399:18;;;8392:30;8458:25;8438:18;;;8431:53;8501:18;;2111:57:2;8178:347:8;2111:57:2;2188:12;;-1:-1:-1;;;2188:12:2;;;;2187:13;2179:59;;;;-1:-1:-1;;;2179:59:2;;8732:2:8;2179:59:2;;;8714:21:8;8771:2;8751:18;;;8744:30;8810:34;8790:18;;;8783:62;-1:-1:-1;;;8861:18:8;;;8854:31;8902:19;;2179:59:2;8530:397:8;2179:59:2;2269:15;2256:9;:28;;2248:68;;;;-1:-1:-1;;;2248:68:2;;9134:2:8;2248:68:2;;;9116:21:8;9173:2;9153:18;;;9146:30;9212:29;9192:18;;;9185:57;9259:18;;2248:68:2;8932:351:8;2248:68:2;2348:40;;-1:-1:-1;;;2348:40:2;;2382:4;2348:40;;;2609:51:8;2392:15:2;;-1:-1:-1;;;;;2348:25:2;;;;;2582:18:8;;2348:40:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;2327:140;;;;-1:-1:-1;;;2327:140:2;;9490:2:8;2327:140:2;;;9472:21:8;9529:2;9509:18;;;9502:30;9568:34;9548:18;;;9541:62;-1:-1:-1;;;9619:18:8;;;9612:32;9661:19;;2327:140:2;9288:398:8;2327:140:2;2478:8;:20;;;2509:22;:32;;-1:-1:-1;;;;;2509:32:2;;;-1:-1:-1;;;;;;2509:32:2;;;;;;;2551:21;:32;;;;;;;;;;;;;;;2594:16;:34;;;2638:15;:32;;;2681:10;:24;;2694:11;;2681:10;-1:-1:-1;;2681:24:2;2509:32;2694:11;2681:24;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;2716:16:2;:36;;;;;-1:-1:-1;;2716:36:2;;;;;;2771:4;:12;;-1:-1:-1;;;;;;;;;2771:12:2;;2716:36;2771:12;2794:19;-1:-1:-1;;;;;;2794:19:2;;;;-1:-1:-1;;;2794:19:2;;;;;;;2831:12;;2716:36;2831:12;1814:1036;;;;;;;;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3049:198:2:-;1484:12;;3154:7;;;;-1:-1:-1;;;1484:12:2;;;;1476:54;;;;-1:-1:-1;;;1476:54:2;;;;;;;:::i;:::-;-1:-1:-1;;3194:22:2::1;::::0;3218:21:::1;::::0;-1:-1:-1;;;;;3194:22:2;;::::1;::::0;3218:21:::1;3049:198:::0;;:::o;9927:170::-;10015:7;10075:15;;10055:16;;10046:6;:25;;;;:::i;:::-;10045:45;;;;:::i;:::-;10038:52;9927:170;-1:-1:-1;;9927:170:2:o;3253:686::-;3371:16;3401;3431;1484:12;;;;;;;;;;;1476:54;;;;-1:-1:-1;;;1476:54:2;;;;;;;:::i;:::-;3515:7:::1;:14:::0;3472:26:::1;::::0;3501:29:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3501:29:2::1;-1:-1:-1::0;3583:7:2::1;:14:::0;3472:58;;-1:-1:-1;3540:26:2::1;::::0;3569:29:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3569:29:2::1;-1:-1:-1::0;3652:7:2::1;:14:::0;3540:58;;-1:-1:-1;3608:27:2::1;::::0;3638:29:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3638:29:2::1;;3608:59;;3683:9;3678:203;3702:7;:14:::0;3698:18;::::1;3678:203;;;3752:7;3760:1;3752:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:18:::0;3737:12;;-1:-1:-1;;;;;3752:18:2;;::::1;::::0;3737:9;;3747:1;;3737:12;::::1;;;;;:::i;:::-;;;;;;:33;-1:-1:-1::0;;;;;3737:33:2::1;;;-1:-1:-1::0;;;;;3737:33:2::1;;;::::0;::::1;3799:7;3807:1;3799:10;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;3784:9;3794:1;3784:12;;;;;;;;:::i;:::-;;;;;;:35;;;::::0;::::1;3849:7;3857:1;3849:10;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;3833:10;3844:1;3833:13;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:37;3718:3;::::1;::::0;::::1;:::i;:::-;;;;3678:203;;;-1:-1:-1::0;3899:9:2;;-1:-1:-1;3910:9:2;-1:-1:-1;3921:10:2;-1:-1:-1;3253:686:2;;;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;10824:2:8;1998:73:0::1;::::0;::::1;10806:21:8::0;10863:2;10843:18;;;10836:30;10902:34;10882:18;;;10875:62;-1:-1:-1;;;10953:18:8;;;10946:36;10999:19;;1998:73:0::1;10622:402:8::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6236:1077:2:-;6328:21;;6321:51;;-1:-1:-1;;;6321:51:2;;6361:10;6321:51;;;2609::8;6376:8:2;;-1:-1:-1;;;;;6328:21:2;;6321:39;;2582:18:8;;6321:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;6300:144;;;;-1:-1:-1;;;6300:144:2;;;;;;;:::i;:::-;6455:17;6475:27;6493:8;6475:17;:27::i;:::-;6540:4;;;6577:35;;-1:-1:-1;;;6577:35:2;;6606:4;6577:35;;;2609:51:8;;;;6455:47:2;;-1:-1:-1;6540:4:2;;;;-1:-1:-1;;;;;6540:4:2;;6455:47;;6540:4;;6577:20;;2582:18:8;;6577:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;6556:138;;;;-1:-1:-1;;;6556:138:2;;;;;;;:::i;:::-;6711:4;;;6705:31;;-1:-1:-1;;;6705:31:2;;;;;345:25:8;;;6711:4:2;;;-1:-1:-1;;;;;6711:4:2;;6705:20;;318:18:8;;6705:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6792:21:2;;6747:149;;-1:-1:-1;;;;;;6792:21:2;;-1:-1:-1;6827:10:2;6859:4;6878:8;6747:31;:149::i;:::-;6906:53;6937:10;6949:9;6906:30;:53::i;:::-;6983:43;;;;;;;;6994:10;6983:43;;;;;;;;;;;;;;6970:7;:57;;;;;;;;-1:-1:-1;6970:57:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6970:57:2;-1:-1:-1;;;;;6970:57:2;;;;;;;;;;;;;;;;;;;;;7057:16;:27;;6983:43;;7057:27;:::i;:::-;7038:16;:46;7169:137;;-1:-1:-1;;;7169:137:2;;7151:7;;-1:-1:-1;;;;;7169:31:2;;;;;:137;;7222:4;;7241:10;;7265:8;;7287:9;;7169:137;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6290:1023;;;6236:1077;:::o;5124:1106::-;5218:21;;5211:51;;-1:-1:-1;;;5211:51:2;;5251:10;5211:51;;;2609::8;5266:8:2;;-1:-1:-1;;;;;5218:21:2;;5211:39;;2582:18:8;;5211:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;5190:144;;;;-1:-1:-1;;;5190:144:2;;;;;;;:::i;:::-;5345:17;5365:27;5383:8;5365:17;:27::i;:::-;5431:22;;5424:55;;-1:-1:-1;;;5424:55:2;;5473:4;5424:55;;;2609:51:8;5345:47:2;;-1:-1:-1;5345:47:2;;-1:-1:-1;;;;;5431:22:2;;;;5424:40;;2582:18:8;;5424:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:84;;5403:174;;;;-1:-1:-1;;;5403:174:2;;;;;;;:::i;:::-;5633:21;;5588:149;;-1:-1:-1;;;;;5633:21:2;5668:10;5700:4;5719:8;5588:31;:149::i;:::-;5788:22;;5747:120;;-1:-1:-1;;;;;5788:22:2;5824:10;5848:9;5747:27;:120::i;:::-;5891:43;;;;;;;;5902:10;5891:43;;;;;;;;;;;;;;5878:7;:57;;;;;;;;-1:-1:-1;5878:57:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5878:57:2;-1:-1:-1;;;;;5878:57:2;;;;;;;;;;;;;;;;;;;;;5965:16;:27;;5891:43;;5965:27;:::i;:::-;5946:16;:46;6086:137;;-1:-1:-1;;;6086:137:2;;6059:7;;-1:-1:-1;;;;;6086:31:2;;;;;:137;;6139:4;;6158:10;;6182:8;;6204:9;;6086:137;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5180:1050;;5124:1106;:::o;1333:192:7:-;1440:12;;;1402;1440;;;;;;;;;-1:-1:-1;;;;;1419:7:7;;;1433:5;;1419:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1401:52;;;1471:7;1463:55;;;;-1:-1:-1;;;1463:55:7;;12610:2:8;1463:55:7;;;12592:21:8;12649:2;12629:18;;;12622:30;12688:34;12668:18;;;12661:62;-1:-1:-1;;;12739:18:8;;;12732:33;12782:19;;1463:55:7;12408:399:8;566:357:7;759:45;;;-1:-1:-1;;;;;13004:32:8;;;759:45:7;;;12986:51:8;13053:18;;;;13046:34;;;759:45:7;;;;;;;;;;12959:18:8;;;;759:45:7;;;;;;;-1:-1:-1;;;;;759:45:7;-1:-1:-1;;;759:45:7;;;748:57;;-1:-1:-1;;;;748:10:7;;;;:57;;759:45;748:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:93;;;;823:7;:57;;;;-1:-1:-1;835:11:7;;:16;;:44;;;866:4;855:24;;;;;;;;;;;;:::i;:::-;815:101;;;;-1:-1:-1;;;815:101:7;;13293:2:8;815:101:7;;;13275:21:8;13332:2;13312:18;;;13305:30;13371:33;13351:18;;;13344:61;13422:18;;815:101:7;13091:355:8;815:101:7;636:287;;566:357;;;:::o;7319:911:2:-;7403:9;7391:8;:21;7383:71;;;;-1:-1:-1;;;7383:71:2;;13653:2:8;7383:71:2;;;13635:21:8;13692:2;13672:18;;;13665:30;13731:34;13711:18;;;13704:62;-1:-1:-1;;;13782:18:8;;;13775:35;13827:19;;7383:71:2;13451:401:8;7383:71:2;7465:17;7485:27;7503:8;7485:17;:27::i;:::-;7551:22;;7544:55;;-1:-1:-1;;;7544:55:2;;7593:4;7544:55;;;2609:51:8;7465:47:2;;-1:-1:-1;7465:47:2;;-1:-1:-1;;;;;7551:22:2;;;;7544:40;;2582:18:8;;7544:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:84;;7523:174;;;;-1:-1:-1;;;7523:174:2;;;;;;;:::i;:::-;7714:4;;;;;;;;;-1:-1:-1;;;;;7714:4:2;-1:-1:-1;;;;;7708:19:2;;7735:8;7708:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7798:22:2;;7757:120;;-1:-1:-1;;;;;;7798:22:2;;-1:-1:-1;7834:10:2;;-1:-1:-1;7858:9:2;7757:27;:120::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;929:398:7:-;1152:51;;;-1:-1:-1;;;;;14115:15:8;;;1152:51:7;;;14097:34:8;14167:15;;;14147:18;;;14140:43;14199:18;;;;14192:34;;;1152:51:7;;;;;;;;;;14032:18:8;;;;1152:51:7;;;;;;;-1:-1:-1;;;;;1152:51:7;-1:-1:-1;;;1152:51:7;;;1141:63;;-1:-1:-1;;;;1141:10:7;;;;:63;;1152:51;1141:63;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1105:99;;;;1222:7;:57;;;;-1:-1:-1;1234:11:7;;:16;;:44;;;1265:4;1254:24;;;;;;;;;;;;:::i;:::-;1214:106;;;;-1:-1:-1;;;1214:106:7;;14439:2:8;1214:106:7;;;14421:21:8;14478:2;14458:18;;;14451:30;14517:34;14497:18;;;14490:62;-1:-1:-1;;;14568:18:8;;;14561:34;14612:19;;1214:106:7;14237:400:8;1214:106:7;1017:310;;929:398;;;;:::o;14:180:8:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:8;;14:180;-1:-1:-1;14:180:8:o;826:173::-;894:20;;-1:-1:-1;;;;;943:31:8;;933:42;;923:70;;989:1;986;979:12;923:70;826:173;;;:::o;1004:118::-;1090:5;1083:13;1076:21;1069:5;1066:32;1056:60;;1112:1;1109;1102:12;1127:844;1268:6;1276;1284;1292;1300;1308;1316;1324;1377:3;1365:9;1356:7;1352:23;1348:33;1345:53;;;1394:1;1391;1384:12;1345:53;1433:9;1420:23;1472:1;1465:5;1462:12;1452:40;;1488:1;1485;1478:12;1452:40;1511:5;-1:-1:-1;1535:38:8;1569:2;1554:18;;1535:38;:::i;:::-;1525:48;;1592:38;1626:2;1615:9;1611:18;1592:38;:::i;:::-;1582:48;;1677:2;1666:9;1662:18;1649:32;1639:42;;1728:3;1717:9;1713:19;1700:33;1690:43;;1780:3;1769:9;1765:19;1752:33;1742:43;;1837:3;1826:9;1822:19;1809:33;1851:30;1873:7;1851:30;:::i;:::-;1900:7;-1:-1:-1;1926:39:8;1960:3;1945:19;;1926:39;:::i;:::-;1916:49;;1127:844;;;;;;;;;;;:::o;1976:127::-;2037:10;2032:3;2028:20;2025:1;2018:31;2068:4;2065:1;2058:15;2092:4;2089:1;2082:15;2108:350;2262:2;2247:18;;2295:1;2284:13;;2274:144;;2340:10;2335:3;2331:20;2328:1;2321:31;2375:4;2372:1;2365:15;2403:4;2400:1;2393:15;2274:144;2427:25;;;2108:350;:::o;2980:435::-;3033:3;3071:5;3065:12;3098:6;3093:3;3086:19;3124:4;3153:2;3148:3;3144:12;3137:19;;3190:2;3183:5;3179:14;3211:1;3221:169;3235:6;3232:1;3229:13;3221:169;;;3296:13;;3284:26;;3330:12;;;;3365:15;;;;3257:1;3250:9;3221:169;;;-1:-1:-1;3406:3:8;;2980:435;-1:-1:-1;;;;;2980:435:8:o;3420:1037::-;3766:2;3778:21;;;3848:13;;3751:18;;;3870:22;;;3718:4;;3946;;3923:3;3908:19;;;3973:15;;;3718:4;4016:195;4030:6;4027:1;4024:13;4016:195;;;4095:13;;-1:-1:-1;;;;;4091:39:8;4079:52;;4151:12;;;;4186:15;;;;4127:1;4045:9;4016:195;;;4020:3;;;4256:9;4251:3;4247:19;4242:2;4231:9;4227:18;4220:47;4290:41;4327:3;4319:6;4290:41;:::i;:::-;4276:55;;;4379:9;4371:6;4367:22;4362:2;4351:9;4347:18;4340:50;4407:44;4444:6;4436;4407:44;:::i;:::-;4399:52;3420:1037;-1:-1:-1;;;;;;3420:1037:8:o;4462:186::-;4521:6;4574:2;4562:9;4553:7;4549:23;4545:32;4542:52;;;4590:1;4587;4580:12;4542:52;4613:29;4632:9;4613:29;:::i;:::-;4603:39;4462:186;-1:-1:-1;;;4462:186:8:o;4653:346::-;4855:2;4837:21;;;4894:2;4874:18;;;4867:30;-1:-1:-1;;;4928:2:8;4913:18;;4906:52;4990:2;4975:18;;4653:346::o;5004:353::-;5206:2;5188:21;;;5245:2;5225:18;;;5218:30;5284:31;5279:2;5264:18;;5257:59;5348:2;5333:18;;5004:353::o;5362:245::-;5429:6;5482:2;5470:9;5461:7;5457:23;5453:32;5450:52;;;5498:1;5495;5488:12;5450:52;5530:9;5524:16;5549:28;5571:5;5549:28;:::i;5612:398::-;5814:2;5796:21;;;5853:2;5833:18;;;5826:30;5892:34;5887:2;5872:18;;5865:62;-1:-1:-1;;;5958:2:8;5943:18;;5936:32;6000:3;5985:19;;5612:398::o;6015:397::-;6217:2;6199:21;;;6256:2;6236:18;;;6229:30;6295:34;6290:2;6275:18;;6268:62;-1:-1:-1;;;6361:2:8;6346:18;;6339:31;6402:3;6387:19;;6015:397::o;6417:405::-;6619:2;6601:21;;;6658:2;6638:18;;;6631:30;6697:34;6692:2;6677:18;;6670:62;-1:-1:-1;;;6763:2:8;6748:18;;6741:39;6812:3;6797:19;;6417:405::o;7176:356::-;7378:2;7360:21;;;7397:18;;;7390:30;7456:34;7451:2;7436:18;;7429:62;7523:2;7508:18;;7176:356::o;7537:184::-;7607:6;7660:2;7648:9;7639:7;7635:23;7631:32;7628:52;;;7676:1;7673;7666:12;7628:52;-1:-1:-1;7699:16:8;;7537:184;-1:-1:-1;7537:184:8:o;7726:447::-;-1:-1:-1;;;;;8013:15:8;;;7995:34;;8065:15;;;;8060:2;8045:18;;8038:43;8112:2;8097:18;;8090:34;8155:2;8140:18;;8133:34;;;;7944:3;7929:19;;7726:447::o;9691:127::-;9752:10;9747:3;9743:20;9740:1;9733:31;9783:4;9780:1;9773:15;9807:4;9804:1;9797:15;9823:168;9863:7;9929:1;9925;9921:6;9917:14;9914:1;9911:21;9906:1;9899:9;9892:17;9888:45;9885:71;;;9936:18;;:::i;:::-;-1:-1:-1;9976:9:8;;9823:168::o;9996:217::-;10036:1;10062;10052:132;;10106:10;10101:3;10097:20;10094:1;10087:31;10141:4;10138:1;10131:15;10169:4;10166:1;10159:15;10052:132;-1:-1:-1;10198:9:8;;9996:217::o;10218:127::-;10279:10;10274:3;10270:20;10267:1;10260:31;10310:4;10307:1;10300:15;10334:4;10331:1;10324:15;10350:127;10411:10;10406:3;10402:20;10399:1;10392:31;10442:4;10439:1;10432:15;10466:4;10463:1;10456:15;10482:135;10521:3;10542:17;;;10539:43;;10562:18;;:::i;:::-;-1:-1:-1;10609:1:8;10598:13;;10482:135::o;11029:398::-;11231:2;11213:21;;;11270:2;11250:18;;;11243:30;11309:34;11304:2;11289:18;;11282:62;-1:-1:-1;;;11375:2:8;11360:18;;11353:32;11417:3;11402:19;;11029:398::o;11432:407::-;11634:2;11616:21;;;11673:2;11653:18;;;11646:30;11712:34;11707:2;11692:18;;11685:62;-1:-1:-1;;;11778:2:8;11763:18;;11756:41;11829:3;11814:19;;11432:407::o;11844:128::-;11884:3;11915:1;11911:6;11908:1;11905:13;11902:39;;;11921:18;;:::i;:::-;-1:-1:-1;11957:9:8;;11844:128::o;11977:426::-;12106:3;12144:6;12138:13;12169:1;12179:129;12193:6;12190:1;12187:13;12179:129;;;12291:4;12275:14;;;12271:25;;12265:32;12252:11;;;12245:53;12208:12;12179:129;;;12326:6;12323:1;12320:13;12317:48;;;12361:1;12352:6;12347:3;12343:16;12336:27;12317:48;-1:-1:-1;12381:16:8;;;;;11977:426;-1:-1:-1;;11977:426:8:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1729800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_initialized()": "2417",
								"allowMultiBarter()": "2354",
								"barterType()": "2396",
								"deadline()": "2330",
								"factory()": "infinite",
								"getAmounts()": "6638",
								"getTokens()": "6736",
								"getTradeOutAmount(uint256)": "4707",
								"getTrades()": "infinite",
								"initialize(uint8,address,address,uint256,uint256,uint256,bool,address)": "infinite",
								"owner()": "2387",
								"renounceOwnership()": "28137",
								"totalTradeAmount()": "2351",
								"tradeEthForToken(uint256)": "infinite",
								"tradeTokenForEth(uint256)": "infinite",
								"tradeTokenForToken(uint256)": "infinite",
								"transferOwnership(address)": "28419",
								"withdraw()": "infinite"
							},
							"internal": {
								"_tradeEthForToken(uint256)": "infinite",
								"_tradeTokenForEth(uint256)": "infinite",
								"_tradeTokenForToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 269,
									"end": 10099,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 545,
									"end": 577,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 545,
									"end": 577,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 577,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 545,
									"end": 577,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 545,
									"end": 577,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 577,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1757,
									"end": 1808,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1757,
									"end": 1808,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1757,
									"end": 1808,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1757,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1757,
									"end": 1808,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1757,
									"end": 1808,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1757,
									"end": 1808,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1757,
									"end": 1808,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1757,
									"end": 1808,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1757,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1791,
									"end": 1801,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1781,
									"end": 1801,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1781,
									"end": 1801,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 10099,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122087f701c27149048d26ffa5636d71cb0062fb3148ae1ca6513d97004b66144d1664736f6c634300080d0033",
									".code": [
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "C45A0155"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "C45A0155"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "C6EA7038"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "DAB5A8DF"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "E43372E9"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "89523742"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "AA6CA808"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "3CCFD60B"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "3CCFD60B"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "3D370B4E"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "40A6F1AB"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "4341F920"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "5F5780E5"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "D182605"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "29DCB0CF"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "2FFC6887"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "3072CF60"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 10099,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 442,
											"end": 465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 442,
											"end": 465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 442,
											"end": 465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 442,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 442,
											"end": 465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 442,
											"end": 465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 442,
											"end": 465,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 442,
											"end": 465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 545,
											"end": 577,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 545,
											"end": 577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 545,
											"end": 577,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 545,
											"end": 577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 545,
											"end": 577,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 577,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 545,
											"end": 577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 545,
											"end": 577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 545,
											"end": 577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 545,
											"end": 577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 577,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 577,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 546,
											"end": 560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 546,
											"end": 560,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 539,
											"end": 561,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 521,
											"end": 562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 521,
											"end": 562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 509,
											"end": 511,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 545,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 381,
											"end": 568,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 772,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 747,
											"end": 772,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 747,
											"end": 772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 803,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 806,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 788,
											"end": 806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 781,
											"end": 815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 781,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 781,
											"end": 815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 781,
											"end": 815,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 720,
											"end": 738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 573,
											"end": 821,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 370,
											"end": 401,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 370,
											"end": 401,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 370,
											"end": 401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 370,
											"end": 401,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 401,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 370,
											"end": 401,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 472,
											"end": 507,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2463,
											"end": 2666,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 2916,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 2916,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 2916,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 2917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 2917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 2968,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 2968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 2968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 2968,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2948,
											"end": 2950,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2836,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2671,
											"end": 2975,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 323,
											"end": 364,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 323,
											"end": 364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 364,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 323,
											"end": 364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 323,
											"end": 364,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 323,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 323,
											"end": 364,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 323,
											"end": 364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 323,
											"end": 364,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 323,
											"end": 364,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 323,
											"end": 364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 323,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 323,
											"end": 364,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 323,
											"end": 364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 323,
											"end": 364,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 407,
											"end": 435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 407,
											"end": 435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 407,
											"end": 435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 407,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 407,
											"end": 435,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 407,
											"end": 435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 407,
											"end": 435,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 407,
											"end": 435,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 966,
											"end": 981,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 954,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 954,
											"end": 962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 954,
											"end": 981,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 954,
											"end": 981,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1019,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1004,
											"end": 1019,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1019,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1651,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1587,
											"end": 1652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1671,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "B187BD26"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4498,
											"end": 4529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4550,
											"end": 4566,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4550,
											"end": 4566,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4550,
											"end": 4566,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4550,
											"end": 4566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4545,
											"end": 4673,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4601,
											"end": 4616,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4601,
											"end": 4616,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4597,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4616,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4581,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4682,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4700,
											"end": 4708,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4682,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4682,
											"end": 4709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4682,
											"end": 4709,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4682,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4716,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3945,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 966,
											"end": 981,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 954,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 954,
											"end": 962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 954,
											"end": 981,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 954,
											"end": 981,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1019,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1004,
											"end": 1019,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1019,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1651,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1587,
											"end": 1652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1671,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "B187BD26"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4109,
											"end": 4142,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4109,
											"end": 4142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4162,
											"end": 4178,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4162,
											"end": 4178,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4162,
											"end": 4178,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4162,
											"end": 4178,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4158,
											"end": 4285,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4213,
											"end": 4228,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4213,
											"end": 4228,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4201,
											"end": 4209,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4201,
											"end": 4228,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4201,
											"end": 4228,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4193,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4294,
											"end": 4323,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1334,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1316,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1308,
											"end": 1316,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1334,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1308,
											"end": 1373,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1373,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1373,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1358,
											"end": 1373,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1354,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1338,
											"end": 1354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1373,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1373,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1373,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1308,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7011,
											"end": 7032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7070,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7048,
											"end": 7066,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7048,
											"end": 7066,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7048,
											"end": 7066,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7041,
											"end": 7071,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "537943726F774261727465723A20414354495645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7080,
											"end": 7130,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 6827,
											"end": 7171,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1287,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8413,
											"end": 8417,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8320,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8404,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 8384,
											"end": 8404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 8384,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8363,
											"end": 8419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8434,
											"end": 8448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8434,
											"end": 8448,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8430,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 8430,
											"end": 8575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 2,
											"value": "2E1A7D4D"
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8510,
											"end": 8564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 8541,
											"end": 8551,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8553,
											"end": 8563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8510,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 8510,
											"end": 8564,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8510,
											"end": 8564,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 8510,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8644,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8623,
											"end": 8644,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8677,
											"end": 8681,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8623,
											"end": 8644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8655,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 8616,
											"end": 8655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 8616,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8707,
											"end": 8731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8731,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8703,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 8703,
											"end": 8904,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 8747,
											"end": 8893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8831,
											"end": 8841,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8859,
											"end": 8879,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 8747,
											"end": 8893,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8747,
											"end": 8893,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 8747,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9008,
											"end": 9012,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8914,
											"end": 8943,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8953,
											"end": 8975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8999,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 8946,
											"end": 8999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8946,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8914,
											"end": 9014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9029,
											"end": 9054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9029,
											"end": 9054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9025,
											"end": 9229,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9115,
											"end": 9137,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 9115,
											"end": 9137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9070,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9070,
											"end": 9218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9115,
											"end": 9137,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9155,
											"end": 9165,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 9183,
											"end": 9204,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9070,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9070,
											"end": 9218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9070,
											"end": 9218,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9070,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9238,
											"end": 9252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9299,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9299,
											"end": 9309,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9299,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 9299,
											"end": 9309,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9299,
											"end": 9344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9295,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9295,
											"end": 9684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9369,
											"end": 9379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9369,
											"end": 9379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9402,
											"end": 9422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9295,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 9295,
											"end": 9684,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9295,
											"end": 9684,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9295,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9457,
											"end": 9490,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9443,
											"end": 9453,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9443,
											"end": 9453,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9443,
											"end": 9453,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 9443,
											"end": 9453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9443,
											"end": 9490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 9439,
											"end": 9684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9515,
											"end": 9536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9559,
											"end": 9579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 9439,
											"end": 9684,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9684,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 9439,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9619,
											"end": 9640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9619,
											"end": 9640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9663,
											"end": 9673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9684,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 9439,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19BCB507"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9750,
											"end": 9757,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9750,
											"end": 9757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9777,
											"end": 9813,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "33796A0E"
										},
										{
											"begin": 9777,
											"end": 9813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9835,
											"end": 9839,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 9835,
											"end": 9839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9878,
											"end": 9884,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9878,
											"end": 9884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9898,
											"end": 9904,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9898,
											"end": 9904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9777,
											"end": 9914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 9921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 9921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 9921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 9921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 9921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 9921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 9921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 9921,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3018,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3020,
											"end": 3035,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 3043,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4722,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 966,
											"end": 981,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 954,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 954,
											"end": 962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 954,
											"end": 981,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 954,
											"end": 981,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1019,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1004,
											"end": 1019,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1019,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 954,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 933,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1651,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1587,
											"end": 1652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1671,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "B187BD26"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 1662,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4900,
											"end": 4931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1190,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 1157,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4951,
											"end": 4967,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4951,
											"end": 4967,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4947,
											"end": 5075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5018,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5003,
											"end": 5018,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 5018,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 5018,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4982,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5102,
											"end": 5110,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5084,
											"end": 5111,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2129,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2133,
											"end": 2140,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2119,
											"end": 2140,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2140,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8380,
											"end": 8382,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8362,
											"end": 8383,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8419,
											"end": 8421,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8392,
											"end": 8422,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8458,
											"end": 8483,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A20464F5242494444454E000000000000000000"
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8484,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8501,
											"end": 8519,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8501,
											"end": 8519,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8178,
											"end": 8525,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2111,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8732,
											"end": 8734,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8735,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8771,
											"end": 8773,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 8751,
											"end": 8769,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8751,
											"end": 8769,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8751,
											"end": 8769,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8744,
											"end": 8774,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8810,
											"end": 8844,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A20414C52454144595F494E495449414C495A45"
										},
										{
											"begin": 8790,
											"end": 8808,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8790,
											"end": 8808,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8790,
											"end": 8808,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8783,
											"end": 8845,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8854,
											"end": 8885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8902,
											"end": 8921,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8902,
											"end": 8921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8530,
											"end": 8927,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2179,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2284,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2284,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2284,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9134,
											"end": 9136,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9116,
											"end": 9137,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9173,
											"end": 9175,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9153,
											"end": 9171,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9146,
											"end": 9176,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9212,
											"end": 9241,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A20504153545F444541444C494E450000000000"
										},
										{
											"begin": 9192,
											"end": 9210,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9192,
											"end": 9210,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9192,
											"end": 9210,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9259,
											"end": 9277,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9259,
											"end": 9277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8932,
											"end": 9283,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2248,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2386,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2407,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2373,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2373,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2348,
											"end": 2373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2407,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2407,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9490,
											"end": 9492,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9472,
											"end": 9493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9529,
											"end": 9531,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9509,
											"end": 9527,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9509,
											"end": 9527,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9532,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9568,
											"end": 9602,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A20494E53554646494349454E545F4445504F53"
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9541,
											"end": 9603,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9619,
											"end": 9637,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9619,
											"end": 9637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9619,
											"end": 9637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 9644,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9661,
											"end": 9680,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9661,
											"end": 9680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 9288,
											"end": 9686,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2327,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2486,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2583,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2610,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2594,
											"end": 2628,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2628,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2653,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2638,
											"end": 2670,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2670,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 2705,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 2705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2694,
											"end": 2705,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2771,
											"end": 2783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2771,
											"end": 2783,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2771,
											"end": 2783,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "OR",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2752,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 2850,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3239,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3218,
											"end": 3239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3247,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10015,
											"end": 10022,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10075,
											"end": 10090,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 10075,
											"end": 10090,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10071,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 10055,
											"end": 10071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10046,
											"end": 10052,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10046,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10046,
											"end": 10071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10046,
											"end": 10071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10046,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10046,
											"end": 10071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10046,
											"end": 10071,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10046,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10045,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10045,
											"end": 10090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10045,
											"end": 10090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10045,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10045,
											"end": 10090,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10045,
											"end": 10090,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10045,
											"end": 10090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10090,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9927,
											"end": 10097,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3387,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3401,
											"end": 3417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 1476,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3515,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3515,
											"end": 3529,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 3501,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3590,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3530,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3540,
											"end": 3566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3652,
											"end": 3659,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3652,
											"end": 3666,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3598,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3678,
											"end": 3881,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 3678,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3702,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3702,
											"end": 3716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 3678,
											"end": 3881,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3760,
											"end": 3761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 3748,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 3748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3806,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3807,
											"end": 3808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3809,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3793,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3794,
											"end": 3795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3856,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3849,
											"end": 3870,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3870,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3844,
											"end": 3845,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3870,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 3678,
											"end": 3881,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3881,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 3678,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3899,
											"end": 3908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3899,
											"end": 3908,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10824,
											"end": 10826,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10827,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10863,
											"end": 10865,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 10843,
											"end": 10861,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10843,
											"end": 10861,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10843,
											"end": 10861,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10836,
											"end": 10866,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10902,
											"end": 10936,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10882,
											"end": 10900,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10882,
											"end": 10900,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10882,
											"end": 10900,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10875,
											"end": 10937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10953,
											"end": 10971,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10953,
											"end": 10971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10946,
											"end": 10982,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10999,
											"end": 11018,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10999,
											"end": 11018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10622,
											"end": 11024,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6236,
											"end": 7313,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6236,
											"end": 7313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6328,
											"end": 6349,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6328,
											"end": 6349,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6371,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6328,
											"end": 6349,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6328,
											"end": 6349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6360,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 6321,
											"end": 6360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6321,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6384,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6384,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6300,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6455,
											"end": 6472,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6493,
											"end": 6501,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6475,
											"end": 6502,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6475,
											"end": 6502,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6475,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6606,
											"end": 6610,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6455,
											"end": 6502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6455,
											"end": 6502,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6455,
											"end": 6502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6455,
											"end": 6502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6597,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 6577,
											"end": 6597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 6577,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6625,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6577,
											"end": 6625,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 6556,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "PUSH",
											"source": 2,
											"value": "2E1A7D4D"
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 6705,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6792,
											"end": 6813,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6792,
											"end": 6813,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6747,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 6747,
											"end": 6896,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6792,
											"end": 6813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6827,
											"end": 6837,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6859,
											"end": 6863,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 6878,
											"end": 6886,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6747,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6747,
											"end": 6896,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6747,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 6747,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6937,
											"end": 6947,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6949,
											"end": 6958,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6906,
											"end": 6959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6906,
											"end": 6959,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6906,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7004,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 6977,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "PUSH",
											"source": 2,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "PUSH",
											"source": 2,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0"
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "PUSH",
											"source": 2,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1"
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6970,
											"end": 7027,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7057,
											"end": 7073,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7054,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7038,
											"end": 7084,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F52701B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7158,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7151,
											"end": 7158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7169,
											"end": 7200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7200,
											"name": "PUSH",
											"source": 2,
											"value": "F52701B7"
										},
										{
											"begin": 7169,
											"end": 7200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7241,
											"end": 7251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7241,
											"end": 7251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7265,
											"end": 7273,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7265,
											"end": 7273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7296,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 7313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 7313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 7313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6236,
											"end": 7313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6236,
											"end": 7313,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5124,
											"end": 6230,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5124,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5239,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5218,
											"end": 5239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5261,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5266,
											"end": 5274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5218,
											"end": 5239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 5211,
											"end": 5250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 5211,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5274,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 5190,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5345,
											"end": 5362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 5383,
											"end": 5391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5365,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5365,
											"end": 5392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5365,
											"end": 5392,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 5365,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5431,
											"end": 5453,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5431,
											"end": 5453,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5477,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5345,
											"end": 5392,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5345,
											"end": 5392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5345,
											"end": 5392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5431,
											"end": 5453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5431,
											"end": 5453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5431,
											"end": 5453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5431,
											"end": 5453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5464,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 5424,
											"end": 5464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 5424,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5508,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5508,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "tag",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 5403,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5633,
											"end": 5654,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5633,
											"end": 5654,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 5588,
											"end": 5737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5633,
											"end": 5654,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5678,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5700,
											"end": 5704,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5719,
											"end": 5727,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 5588,
											"end": 5737,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5588,
											"end": 5737,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 5588,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5788,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5788,
											"end": 5810,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 5747,
											"end": 5867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5788,
											"end": 5810,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5834,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5747,
											"end": 5867,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5747,
											"end": 5867,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 5747,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5912,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5885,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "PUSH",
											"source": 2,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "PUSH",
											"source": 2,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0"
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "PUSH",
											"source": 2,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1"
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5935,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5965,
											"end": 5981,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5965,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 5965,
											"end": 5992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5965,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 5965,
											"end": 5992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5965,
											"end": 5992,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 5965,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5946,
											"end": 5992,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F52701B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6059,
											"end": 6066,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6059,
											"end": 6066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6086,
											"end": 6117,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6117,
											"name": "PUSH",
											"source": 2,
											"value": "F52701B7"
										},
										{
											"begin": 6086,
											"end": 6117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6139,
											"end": 6143,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 6139,
											"end": 6143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6158,
											"end": 6168,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6158,
											"end": 6168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6182,
											"end": 6190,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6182,
											"end": 6190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6213,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6086,
											"end": 6223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5180,
											"end": 6230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5180,
											"end": 6230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5124,
											"end": 6230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5124,
											"end": 6230,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1333,
											"end": 1525,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1333,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1402,
											"end": 1414,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1401,
											"end": 1453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1401,
											"end": 1453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1401,
											"end": 1453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 12612,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12592,
											"end": 12613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12649,
											"end": 12651,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 12629,
											"end": 12647,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12629,
											"end": 12647,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12622,
											"end": 12652,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12688,
											"end": 12722,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E7366657248656C7065723A204554485F5452414E534645525F464149"
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 12723,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12732,
											"end": 12765,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12782,
											"end": 12801,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 12782,
											"end": 12801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 12408,
											"end": 12807,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 566,
											"end": 923,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 566,
											"end": 923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13004,
											"end": 13036,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13004,
											"end": 13036,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13004,
											"end": 13036,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12986,
											"end": 13037,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13046,
											"end": 13080,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13046,
											"end": 13080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13046,
											"end": 13080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12959,
											"end": 12977,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12959,
											"end": 12977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 12977,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 12977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 759,
											"end": 804,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 759,
											"end": 804,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 748,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 748,
											"end": 758,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 748,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 759,
											"end": 804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 748,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 712,
											"end": 805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 712,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 712,
											"end": 805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 712,
											"end": 805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 823,
											"end": 830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 823,
											"end": 880,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 823,
											"end": 880,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 823,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 823,
											"end": 880,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 835,
											"end": 846,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 835,
											"end": 846,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 835,
											"end": 851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 835,
											"end": 851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 835,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 835,
											"end": 879,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 835,
											"end": 879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 866,
											"end": 870,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 855,
											"end": 879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 855,
											"end": 879,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 879,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 855,
											"end": 879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 815,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 815,
											"end": 916,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 815,
											"end": 916,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 815,
											"end": 916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 815,
											"end": 916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13295,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 916,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 815,
											"end": 916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 815,
											"end": 916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13332,
											"end": 13334,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13312,
											"end": 13330,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13312,
											"end": 13330,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13312,
											"end": 13330,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13335,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13371,
											"end": 13404,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E7366657248656C7065723A205452414E534645525F4641494C454400"
										},
										{
											"begin": 13351,
											"end": 13369,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13351,
											"end": 13369,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13351,
											"end": 13369,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13344,
											"end": 13405,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13422,
											"end": 13440,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13422,
											"end": 13440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 815,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 13091,
											"end": 13446,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 815,
											"end": 916,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 815,
											"end": 916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 636,
											"end": 923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 636,
											"end": 923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 566,
											"end": 923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 566,
											"end": 923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 566,
											"end": 923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 566,
											"end": 923,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7319,
											"end": 8230,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7319,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7403,
											"end": 7412,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7391,
											"end": 7399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7391,
											"end": 7412,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13653,
											"end": 13655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13635,
											"end": 13656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13692,
											"end": 13694,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 13672,
											"end": 13690,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13672,
											"end": 13690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13672,
											"end": 13690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13665,
											"end": 13695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13731,
											"end": 13765,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A204D554C54495F54524144455F4E4F545F454E"
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13704,
											"end": 13766,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1050931151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13775,
											"end": 13810,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13827,
											"end": 13846,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 13827,
											"end": 13846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 13451,
											"end": 13852,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "tag",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 7383,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7465,
											"end": 7482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 7503,
											"end": 7511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 7485,
											"end": 7512,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7485,
											"end": 7512,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 7485,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7551,
											"end": 7573,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7551,
											"end": 7573,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7551,
											"end": 7573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7551,
											"end": 7573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7551,
											"end": 7573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7551,
											"end": 7573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7584,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 7544,
											"end": 7584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 7544,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7628,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "tag",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 7523,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7708,
											"end": 7727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7727,
											"name": "PUSH",
											"source": 2,
											"value": "D0E30DB0"
										},
										{
											"begin": 7735,
											"end": 7743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "tag",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 7708,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7798,
											"end": 7820,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7798,
											"end": 7820,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7757,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 7757,
											"end": 7877,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7798,
											"end": 7820,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7798,
											"end": 7820,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7834,
											"end": 7844,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7834,
											"end": 7844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7858,
											"end": 7867,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7757,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7757,
											"end": 7877,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14115,
											"end": 14130,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14115,
											"end": 14130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14115,
											"end": 14130,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14097,
											"end": 14131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14167,
											"end": 14182,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14167,
											"end": 14182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14167,
											"end": 14182,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14140,
											"end": 14183,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14199,
											"end": 14217,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14199,
											"end": 14217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14199,
											"end": 14217,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14199,
											"end": 14217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14192,
											"end": 14226,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14192,
											"end": 14226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14192,
											"end": 14226,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1279,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 1222,
											"end": 1279,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1234,
											"end": 1245,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1234,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 1234,
											"end": 1278,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1234,
											"end": 1278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14439,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14421,
											"end": 14442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14478,
											"end": 14480,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14458,
											"end": 14476,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14458,
											"end": 14476,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14458,
											"end": 14476,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14451,
											"end": 14481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14517,
											"end": 14551,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641"
										},
										{
											"begin": 14497,
											"end": 14515,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 14497,
											"end": 14515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14497,
											"end": 14515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14490,
											"end": 14552,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14568,
											"end": 14586,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14568,
											"end": 14586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14568,
											"end": 14586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14561,
											"end": 14595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14612,
											"end": 14631,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 14612,
											"end": 14631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 14237,
											"end": 14637,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 826,
											"end": 999,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 826,
											"end": 999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 894,
											"end": 914,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 894,
											"end": 914,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 943,
											"end": 974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 943,
											"end": 974,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 933,
											"end": 975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 933,
											"end": 975,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 923,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 923,
											"end": 993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 989,
											"end": 990,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 979,
											"end": 991,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 923,
											"end": 993,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 923,
											"end": 993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 999,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 826,
											"end": 999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 826,
											"end": 999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 826,
											"end": 999,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1004,
											"end": 1122,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 1004,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1096,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1097,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1066,
											"end": 1098,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1056,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 1056,
											"end": 1116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1300,
											"end": 1306,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1314,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1380,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1356,
											"end": 1363,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1375,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1381,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1398,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 1345,
											"end": 1398,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1394,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1392,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1384,
											"end": 1396,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1398,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 1345,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1442,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1474,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1478,
											"end": 1490,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1516,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1535,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1535,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 1535,
											"end": 1573,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1535,
											"end": 1573,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 1535,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1573,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1592,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 1626,
											"end": 1628,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1592,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 1592,
											"end": 1630,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1630,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 1592,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1630,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1681,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1728,
											"end": 1731,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1733,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1690,
											"end": 1733,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1690,
											"end": 1733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1780,
											"end": 1783,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 1769,
											"end": 1778,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1785,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1840,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1841,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1842,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1851,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1873,
											"end": 1880,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1851,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 1851,
											"end": 1881,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1881,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1851,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1907,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 1960,
											"end": 1963,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 1926,
											"end": 1965,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1926,
											"end": 1965,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 1926,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1976,
											"end": 2103,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1976,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2047,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2028,
											"end": 2048,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2058,
											"end": 2073,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2096,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2458,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2108,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2296,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2284,
											"end": 2297,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2297,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 2274,
											"end": 2418,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2350,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2335,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2331,
											"end": 2351,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2375,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2407,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2418,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 2274,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2452,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2458,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2458,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3415,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 2980,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3077,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3104,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3096,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3105,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3155,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3190,
											"end": 3192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3188,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3179,
											"end": 3193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3211,
											"end": 3212,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3232,
											"end": 3233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3242,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3257,
											"end": 3258,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2980,
											"end": 3415,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2980,
											"end": 3415,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3420,
											"end": 4457,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3420,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3768,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3778,
											"end": 3799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3751,
											"end": 3769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3751,
											"end": 3769,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3751,
											"end": 3769,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 3722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 3950,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3946,
											"end": 3950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3926,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 3988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 3988,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 3988,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 3722,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4030,
											"end": 4036,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4037,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4108,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4131,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4128,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4256,
											"end": 4265,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4251,
											"end": 4254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4247,
											"end": 4266,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4242,
											"end": 4244,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4240,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4267,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 4327,
											"end": 4330,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 4290,
											"end": 4331,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4290,
											"end": 4331,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 4290,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4331,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4331,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4331,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4379,
											"end": 4388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4364,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4340,
											"end": 4390,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4436,
											"end": 4442,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4451,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 4457,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3420,
											"end": 4457,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4462,
											"end": 4648,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4462,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4553,
											"end": 4560,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4545,
											"end": 4577,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 4632,
											"end": 4641,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4642,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4462,
											"end": 4648,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4462,
											"end": 4648,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4653,
											"end": 4999,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4653,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4855,
											"end": 4857,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4858,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4837,
											"end": 4858,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4837,
											"end": 4858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4894,
											"end": 4896,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4867,
											"end": 4897,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "537943726F774261727465723A20494E414354495645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4928,
											"end": 4930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 4958,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4999,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5004,
											"end": 5357,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5004,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5188,
											"end": 5209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5209,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5209,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5218,
											"end": 5248,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5284,
											"end": 5315,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A204E4F545F494E495449414C495A4544000000"
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5257,
											"end": 5316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5348,
											"end": 5350,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5004,
											"end": 5357,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5362,
											"end": 5607,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5362,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5429,
											"end": 5435,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5482,
											"end": 5484,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5461,
											"end": 5468,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5457,
											"end": 5480,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5453,
											"end": 5485,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5498,
											"end": 5499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5496,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5500,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5524,
											"end": 5540,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5549,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 5571,
											"end": 5576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5549,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 5549,
											"end": 5577,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5612,
											"end": 6010,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 5612,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5814,
											"end": 5816,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5817,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5796,
											"end": 5817,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5796,
											"end": 5817,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5853,
											"end": 5855,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5892,
											"end": 5926,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A204261736520436F6E74726163742050617573"
										},
										{
											"begin": 5887,
											"end": 5889,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5872,
											"end": 5890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5865,
											"end": 5927,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5958,
											"end": 5960,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5943,
											"end": 5961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5968,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6003,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5985,
											"end": 6004,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5985,
											"end": 6004,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5612,
											"end": 6010,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6015,
											"end": 6412,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6015,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6219,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 6220,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6220,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6220,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6256,
											"end": 6258,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6229,
											"end": 6259,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6295,
											"end": 6329,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A20494E56414C49445F4241525445525F545950"
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6275,
											"end": 6293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6275,
											"end": 6293,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6330,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6361,
											"end": 6363,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6346,
											"end": 6364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6346,
											"end": 6364,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6339,
											"end": 6370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6405,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6387,
											"end": 6406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6387,
											"end": 6406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6412,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6417,
											"end": 6822,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 6417,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6619,
											"end": 6621,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6601,
											"end": 6622,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6622,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6658,
											"end": 6660,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6631,
											"end": 6661,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6697,
											"end": 6731,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A20414D4F554E545F4C4F5745525F5448414E5F"
										},
										{
											"begin": 6692,
											"end": 6694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6670,
											"end": 6732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149154555492549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6763,
											"end": 6765,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6748,
											"end": 6766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6748,
											"end": 6766,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6780,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6812,
											"end": 6815,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6797,
											"end": 6816,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6797,
											"end": 6816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6822,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7176,
											"end": 7532,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 7176,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7360,
											"end": 7381,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7381,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7381,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7420,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7456,
											"end": 7490,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7451,
											"end": 7453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7436,
											"end": 7454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7454,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7491,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7525,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7508,
											"end": 7526,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7526,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7176,
											"end": 7532,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7537,
											"end": 7721,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 7537,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7607,
											"end": 7613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7660,
											"end": 7662,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7648,
											"end": 7657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7639,
											"end": 7646,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7631,
											"end": 7663,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 7680,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 7628,
											"end": 7680,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7676,
											"end": 7677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7673,
											"end": 7674,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7666,
											"end": 7678,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 7680,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 7628,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7537,
											"end": 7721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7537,
											"end": 7721,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7726,
											"end": 8173,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 7726,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8013,
											"end": 8028,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8028,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8013,
											"end": 8028,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7995,
											"end": 8029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8080,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8080,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8080,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8045,
											"end": 8063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8038,
											"end": 8081,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8112,
											"end": 8114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8097,
											"end": 8115,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8097,
											"end": 8115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8090,
											"end": 8124,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8155,
											"end": 8157,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8167,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7944,
											"end": 7947,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7929,
											"end": 7948,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7948,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7726,
											"end": 8173,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9691,
											"end": 9818,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 9691,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9752,
											"end": 9762,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 9747,
											"end": 9750,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9743,
											"end": 9763,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9733,
											"end": 9764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9783,
											"end": 9787,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 9780,
											"end": 9781,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9773,
											"end": 9788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9807,
											"end": 9811,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9804,
											"end": 9805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9797,
											"end": 9812,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9991,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 9823,
											"end": 9991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9863,
											"end": 9870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9930,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9921,
											"end": 9927,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9917,
											"end": 9931,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 9915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9906,
											"end": 9907,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9899,
											"end": 9908,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9892,
											"end": 9909,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9888,
											"end": 9933,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 9956,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 9885,
											"end": 9956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9976,
											"end": 9985,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9976,
											"end": 9985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9991,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9996,
											"end": 10213,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 9996,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10062,
											"end": 10063,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 10052,
											"end": 10184,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10106,
											"end": 10116,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10101,
											"end": 10104,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10097,
											"end": 10117,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10094,
											"end": 10095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10087,
											"end": 10118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10141,
											"end": 10145,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10138,
											"end": 10139,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10131,
											"end": 10146,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10169,
											"end": 10173,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10166,
											"end": 10167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10174,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10184,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 10052,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10198,
											"end": 10207,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10198,
											"end": 10207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9996,
											"end": 10213,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10218,
											"end": 10345,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10218,
											"end": 10345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10289,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10274,
											"end": 10277,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10270,
											"end": 10290,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10267,
											"end": 10268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10260,
											"end": 10291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10310,
											"end": 10314,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 10307,
											"end": 10308,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10300,
											"end": 10315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10338,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10331,
											"end": 10332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10324,
											"end": 10339,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10477,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 10350,
											"end": 10477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10411,
											"end": 10421,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10406,
											"end": 10409,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10402,
											"end": 10422,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10399,
											"end": 10400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10442,
											"end": 10446,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 10439,
											"end": 10440,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10432,
											"end": 10447,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10463,
											"end": 10464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10456,
											"end": 10471,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10482,
											"end": 10617,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 10482,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10521,
											"end": 10524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10542,
											"end": 10559,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10542,
											"end": 10559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10542,
											"end": 10559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10539,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 10539,
											"end": 10582,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10562,
											"end": 10580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 10562,
											"end": 10580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 10562,
											"end": 10580,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10562,
											"end": 10580,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 10562,
											"end": 10580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10609,
											"end": 10610,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10598,
											"end": 10611,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10598,
											"end": 10611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10482,
											"end": 10617,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11029,
											"end": 11427,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 11029,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11231,
											"end": 11233,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11213,
											"end": 11234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11213,
											"end": 11234,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11213,
											"end": 11234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11270,
											"end": 11272,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 11250,
											"end": 11268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11250,
											"end": 11268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11250,
											"end": 11268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11243,
											"end": 11273,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11343,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A20494E53554646494349454E545F42414C414E"
										},
										{
											"begin": 11304,
											"end": 11306,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11289,
											"end": 11307,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11282,
											"end": 11344,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11375,
											"end": 11377,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11353,
											"end": 11385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11417,
											"end": 11420,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11402,
											"end": 11421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11402,
											"end": 11421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11029,
											"end": 11427,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11432,
											"end": 11839,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 11432,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11634,
											"end": 11636,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11616,
											"end": 11637,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11616,
											"end": 11637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11616,
											"end": 11637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11673,
											"end": 11675,
											"name": "PUSH",
											"source": 8,
											"value": "2B"
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11653,
											"end": 11671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11646,
											"end": 11676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 11746,
											"name": "PUSH",
											"source": 8,
											"value": "537943726F774261727465723A20494E53554646494349454E545F434F4E5452"
										},
										{
											"begin": 11707,
											"end": 11709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11692,
											"end": 11710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11692,
											"end": 11710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11685,
											"end": 11747,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4143545F42414C414E4345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11778,
											"end": 11780,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11763,
											"end": 11781,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11763,
											"end": 11781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11756,
											"end": 11797,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11829,
											"end": 11832,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11814,
											"end": 11833,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11814,
											"end": 11833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11432,
											"end": 11839,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11844,
											"end": 11972,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 11844,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11884,
											"end": 11887,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11915,
											"end": 11916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11911,
											"end": 11917,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11908,
											"end": 11909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11905,
											"end": 11918,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11902,
											"end": 11941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11902,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 11902,
											"end": 11941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11957,
											"end": 11966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11957,
											"end": 11966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11844,
											"end": 11972,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11977,
											"end": 12403,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11977,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12106,
											"end": 12109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12144,
											"end": 12150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12138,
											"end": 12151,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12169,
											"end": 12170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12179,
											"end": 12308,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 12179,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12199,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12187,
											"end": 12200,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12179,
											"end": 12308,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12179,
											"end": 12308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 12179,
											"end": 12308,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12291,
											"end": 12295,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12275,
											"end": 12289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12275,
											"end": 12289,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12275,
											"end": 12289,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12271,
											"end": 12296,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12271,
											"end": 12296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12265,
											"end": 12297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12252,
											"end": 12263,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12252,
											"end": 12263,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12252,
											"end": 12263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12245,
											"end": 12298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12208,
											"end": 12220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12179,
											"end": 12308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 12179,
											"end": 12308,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12179,
											"end": 12308,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 12179,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12323,
											"end": 12324,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12320,
											"end": 12333,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12317,
											"end": 12365,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12317,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 12317,
											"end": 12365,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12361,
											"end": 12362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12352,
											"end": 12358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12347,
											"end": 12350,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12343,
											"end": 12359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12336,
											"end": 12363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12317,
											"end": 12365,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 12317,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12381,
											"end": 12397,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12381,
											"end": 12397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12381,
											"end": 12397,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12381,
											"end": 12397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12381,
											"end": 12397,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 12403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11977,
											"end": 12403,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_initialized()": "3072cf60",
							"allowMultiBarter()": "c6ea7038",
							"barterType()": "89523742",
							"deadline()": "29dcb0cf",
							"factory()": "c45a0155",
							"getAmounts()": "3d370b4e",
							"getTokens()": "aa6ca808",
							"getTradeOutAmount(uint256)": "dab5a8df",
							"getTrades()": "e43372e9",
							"initialize(uint8,address,address,uint256,uint256,uint256,bool,address)": "5f5780e5",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"totalTradeAmount()": "40a6f1ab",
							"tradeEthForToken(uint256)": "4341f920",
							"tradeTokenForEth(uint256)": "0d182605",
							"tradeTokenForToken(uint256)": "2ffc6887",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMultiBarter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"barterType\",\"outputs\":[{\"internalType\":\"enum ISyCrowBarterType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTradeOutAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrades\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ISyCrowBarterType\",\"name\":\"_barterType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"inToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountExpected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_allowMultiBarter\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTradeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeEthForToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeTokenForEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeTokenForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SycrowBarter.sol\":\"SyCrowBarter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/SycrowBarter.sol\":{\"keccak256\":\"0xbbe658c0232342834c25abe51bdf31ca80179af0d71b0d49ecd7b4ee62a8fcf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb49b5c174d63a3b19c4c61060e9fb2464c0ebbbc50e13fc27284d690e0dcbae\",\"dweb:/ipfs/QmXu69NwRskgXRdpRe85nRAYNceNFPv3yh3zWh6ikM9bUG\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6a893389aeb9cf9b279b402c7d4b56196c6cdcc13dcb1802dfcf6e29559d3ba3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d554598212ea1aa0c0fccee4b9b469df5d938bafa5c42c2a67a93f3b715fd63\",\"dweb:/ipfs/QmVbvYR5QFtpY39fzwTWKk1ghpXusizgz62wbpf75GLXkn\"]},\"contracts/interfaces/ISyCrowBarter.sol\":{\"keccak256\":\"0xfda4532f79218f318917a7e6eead42c9b8304ae2198009951a8f015d6f1f7fd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d4becdae792a02fe9fc65aa7805565943ffde6cae75653df6571ee2327d35e\",\"dweb:/ipfs/QmVw3JBK8zztQ1aPbfSHASfwh2sN9ceSXen1Vo5cteahV4\"]},\"contracts/interfaces/ISyCrowBarterFactory.sol\":{\"keccak256\":\"0x1d6104a443c5f17b423dce3651cf126294036e8392b1d3b413e42372c574294c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a2ae6a25a5fcedf4e00b35757a1505608a4bac82fd0d69c5ca31ce8586c017\",\"dweb:/ipfs/QmZEm9BDYBxhxX4v13zYoKbsEJDHuEsZXR9ow9nCnfTGDu\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x48429d7752165439258d8d6a26ea29150d5af05374b9182de97982a544ef35d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b09b55a8331e9de6a903b319e3e0a89e2fafb38bdce098ca14aa05b08723c792\",\"dweb:/ipfs/QmdQtkqgCdwAfVFWX1cAGi8urTS7D23ax3ETs4ykLXFYNT\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x4d076df1676fb5f85d7dda5ef0b5610c3aebd2729a7c32a1bf3bad105f1aac7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://354e47ea2ac17432f862c476e95a7e504607c1829a125e9f4257c4ec99fcb4e6\",\"dweb:/ipfs/Qme2sV3FsSvN3uALvpN1tbQkTpUgFEjg2gHXSrwEkGjgCZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 142,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "totalTradeAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 144,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "allowMultiBarter",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 146,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "deadline",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 149,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "barterType",
								"offset": 0,
								"slot": "4",
								"type": "t_enum(ISyCrowBarterType)1073"
							},
							{
								"astId": 151,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "WETH",
								"offset": 1,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 154,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_initialized",
								"offset": 21,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 156,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_depositedTokenAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_expectedTokenAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 160,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_depositedAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 162,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_expectedAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 166,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_trades",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_struct(BaterTrade)173_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(BaterTrade)173_storage)dyn_storage": {
								"base": "t_struct(BaterTrade)173_storage",
								"encoding": "dynamic_array",
								"label": "struct SyCrowBarter.BaterTrade[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(ISyCrowBarterType)1073": {
								"encoding": "inplace",
								"label": "enum ISyCrowBarterType",
								"numberOfBytes": "1"
							},
							"t_struct(BaterTrade)173_storage": {
								"encoding": "inplace",
								"label": "struct SyCrowBarter.BaterTrade",
								"members": [
									{
										"astId": 168,
										"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
										"label": "_trader",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 170,
										"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
										"label": "_amountIn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 172,
										"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
										"label": "_amountOut",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6a893389aeb9cf9b279b402c7d4b56196c6cdcc13dcb1802dfcf6e29559d3ba3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d554598212ea1aa0c0fccee4b9b469df5d938bafa5c42c2a67a93f3b715fd63\",\"dweb:/ipfs/QmVbvYR5QFtpY39fzwTWKk1ghpXusizgz62wbpf75GLXkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ISyCrowBarter.sol": {
				"ISyCrowBarter": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrades",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeEthForToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeTokenForEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeTokenForToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"getAmounts()": "3d370b4e",
							"getTokens()": "aa6ca808",
							"getTrades()": "e43372e9",
							"tradeEthForToken(uint256)": "4341f920",
							"tradeTokenForEth(uint256)": "0d182605",
							"tradeTokenForToken(uint256)": "2ffc6887",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrades\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeEthForToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeTokenForEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeTokenForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISyCrowBarter.sol\":\"ISyCrowBarter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISyCrowBarter.sol\":{\"keccak256\":\"0xfda4532f79218f318917a7e6eead42c9b8304ae2198009951a8f015d6f1f7fd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d4becdae792a02fe9fc65aa7805565943ffde6cae75653df6571ee2327d35e\",\"dweb:/ipfs/QmVw3JBK8zztQ1aPbfSHASfwh2sN9ceSXen1Vo5cteahV4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ISyCrowBarterFactory.sol": {
				"ISyCrowBarterFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "enum ISyCrowBarterType",
									"name": "_barterType",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_createdBy",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_barter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_inToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_outToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_deadline",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_shouldList",
									"type": "bool"
								}
							],
							"name": "SyCrowBarterCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_barter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_inAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "outAmount",
									"type": "uint256"
								}
							],
							"name": "SyCrowTradeByBarter",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_barter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value2",
									"type": "uint256"
								}
							],
							"name": "SyCrowWithdrawFromBater",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allBarters",
							"outputs": [
								{
									"internalType": "address",
									"name": "barter",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allBartersLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_inToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_outToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_deposited",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_expected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deadline",
									"type": "uint256"
								},
								{
									"internalType": "enum ISyCrowBarterType",
									"name": "_type",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "_shouldList",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_allowMultiBarter",
									"type": "bool"
								}
							],
							"name": "createBarter",
							"outputs": [
								{
									"internalType": "address",
									"name": "barter",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeCollector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "baseFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "listingFee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserBarters",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "barters",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_barter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_trader",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_inAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "outAmount",
									"type": "uint256"
								}
							],
							"name": "notifyTradeByBarter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_barter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_trader",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value2",
									"type": "uint256"
								}
							],
							"name": "notifyWithdrawFromBarter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeCollector",
									"type": "address"
								}
							],
							"name": "setFeeCollector",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "pause",
									"type": "bool"
								}
							],
							"name": "setPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_baseFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_listingFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "enable",
									"type": "bool"
								}
							],
							"name": "setUsePriceFeeds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBarterDeployed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allBarters(uint256)": "e55ef116",
							"allBartersLength()": "5c56559f",
							"createBarter(address,address,uint256,uint256,uint256,uint8,bool,bool)": "40939a6d",
							"feeCollector()": "c415b95c",
							"getFees()": "db8d55f1",
							"getUserBarters(address)": "e71a76c9",
							"isPaused()": "b187bd26",
							"notifyTradeByBarter(address,address,uint256,uint256)": "f52701b7",
							"notifyWithdrawFromBarter(address,address,uint256,uint256)": "33796a0e",
							"setFeeCollector(address)": "a42dce80",
							"setPause(bool)": "bedb86fb",
							"setUsePriceFeeds(uint256,uint256,bool)": "ccfd592d",
							"totalBarterDeployed()": "be931a41"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum ISyCrowBarterType\",\"name\":\"_barterType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_createdBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_barter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_inToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_outToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_shouldList\",\"type\":\"bool\"}],\"name\":\"SyCrowBarterCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_barter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_inAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outAmount\",\"type\":\"uint256\"}],\"name\":\"SyCrowTradeByBarter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_barter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value2\",\"type\":\"uint256\"}],\"name\":\"SyCrowWithdrawFromBater\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allBarters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"barter\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allBartersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_inToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_outToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"enum ISyCrowBarterType\",\"name\":\"_type\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"_shouldList\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_allowMultiBarter\",\"type\":\"bool\"}],\"name\":\"createBarter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"barter\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserBarters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"barters\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_barter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_inAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outAmount\",\"type\":\"uint256\"}],\"name\":\"notifyTradeByBarter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_barter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value2\",\"type\":\"uint256\"}],\"name\":\"notifyWithdrawFromBarter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_listingFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setUsePriceFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBarterDeployed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISyCrowBarterFactory.sol\":\"ISyCrowBarterFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISyCrowBarter.sol\":{\"keccak256\":\"0xfda4532f79218f318917a7e6eead42c9b8304ae2198009951a8f015d6f1f7fd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d4becdae792a02fe9fc65aa7805565943ffde6cae75653df6571ee2327d35e\",\"dweb:/ipfs/QmVw3JBK8zztQ1aPbfSHASfwh2sN9ceSXen1Vo5cteahV4\"]},\"contracts/interfaces/ISyCrowBarterFactory.sol\":{\"keccak256\":\"0x1d6104a443c5f17b423dce3651cf126294036e8392b1d3b413e42372c574294c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a2ae6a25a5fcedf4e00b35757a1505608a4bac82fd0d69c5ca31ce8586c017\",\"dweb:/ipfs/QmZEm9BDYBxhxX4v13zYoKbsEJDHuEsZXR9ow9nCnfTGDu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x48429d7752165439258d8d6a26ea29150d5af05374b9182de97982a544ef35d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b09b55a8331e9de6a903b319e3e0a89e2fafb38bdce098ca14aa05b08723c792\",\"dweb:/ipfs/QmdQtkqgCdwAfVFWX1cAGi8urTS7D23ax3ETs4ykLXFYNT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/TransferHelper.sol\":177:1527  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/TransferHelper.sol\":177:1527  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e6b81340e295accd9367be2d091dac8ac0f2f3a9d762e70d05c726ed1c9006064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e6b81340e295accd9367be2d091dac8ac0f2f3a9d762e70d05c726ed1c9006064736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY PUSH12 0x81340E295ACCD9367BE2D091 0xDA 0xC8 0xAC 0xF 0x2F GASPRICE SWAP14 PUSH23 0x2E70D05C726ED1C9006064736F6C634300080D00330000 ",
							"sourceMap": "177:1350:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;177:1350:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e6b81340e295accd9367be2d091dac8ac0f2f3a9d762e70d05c726ed1c9006064736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY PUSH12 0x81340E295ACCD9367BE2D091 0xDA 0xC8 0xAC 0xF 0x2F GASPRICE SWAP14 PUSH23 0x2E70D05C726ED1C9006064736F6C634300080D00330000 ",
							"sourceMap": "177:1350:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e6b81340e295accd9367be2d091dac8ac0f2f3a9d762e70d05c726ed1c9006064736f6c634300080d0033",
									".code": [
										{
											"begin": 177,
											"end": 1527,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x4d076df1676fb5f85d7dda5ef0b5610c3aebd2729a7c32a1bf3bad105f1aac7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://354e47ea2ac17432f862c476e95a7e504607c1829a125e9f4257c4ec99fcb4e6\",\"dweb:/ipfs/Qme2sV3FsSvN3uALvpN1tbQkTpUgFEjg2gHXSrwEkGjgCZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/SycrowBarter.sol": {
				"ast": {
					"absolutePath": "contracts/SycrowBarter.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"IERC20": [
							1067
						],
						"ISyCrowBarter": [
							1123
						],
						"ISyCrowBarterFactory": [
							1269
						],
						"ISyCrowBarterType": [
							1073
						],
						"IWETH": [
							1280
						],
						"Ownable": [
							104
						],
						"SyCrowBarter": [
							1057
						],
						"TransferHelper": [
							1440
						]
					},
					"id": 1058,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 105,
							"src": "59:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ISyCrowBarterFactory.sol",
							"file": "./interfaces/ISyCrowBarterFactory.sol",
							"id": 130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1270,
							"src": "112:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1068,
							"src": "160:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TransferHelper.sol",
							"file": "./libraries/TransferHelper.sol",
							"id": 132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1441,
							"src": "194:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IWETH.sol",
							"file": "./interfaces/IWETH.sol",
							"id": 133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1281,
							"src": "235:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 134,
										"name": "ISyCrowBarter",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1123,
										"src": "294:13:2"
									},
									"id": 135,
									"nodeType": "InheritanceSpecifier",
									"src": "294:13:2"
								},
								{
									"baseName": {
										"id": 136,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "309:7:2"
									},
									"id": 137,
									"nodeType": "InheritanceSpecifier",
									"src": "309:7:2"
								}
							],
							"canonicalName": "SyCrowBarter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1057,
							"linearizedBaseContracts": [
								1057,
								104,
								126,
								1123
							],
							"name": "SyCrowBarter",
							"nameLocation": "278:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1078
									],
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 140,
									"mutability": "immutable",
									"name": "factory",
									"nameLocation": "357:7:2",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 139,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "348:8:2"
									},
									"scope": 1057,
									"src": "323:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 138,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "323:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "40a6f1ab",
									"id": 142,
									"mutability": "mutable",
									"name": "totalTradeAmount",
									"nameLocation": "385:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "370:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 141,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "370:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6ea7038",
									"id": 144,
									"mutability": "mutable",
									"name": "allowMultiBarter",
									"nameLocation": "419:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "407:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 143,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "407:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "29dcb0cf",
									"id": 146,
									"mutability": "mutable",
									"name": "deadline",
									"nameLocation": "457:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "442:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "442:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89523742",
									"id": 149,
									"mutability": "mutable",
									"name": "barterType",
									"nameLocation": "497:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "472:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
										"typeString": "enum ISyCrowBarterType"
									},
									"typeName": {
										"id": 148,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 147,
											"name": "ISyCrowBarterType",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1073,
											"src": "472:17:2"
										},
										"referencedDeclaration": 1073,
										"src": "472:17:2",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
											"typeString": "enum ISyCrowBarterType"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 151,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "530:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "513:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 150,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "513:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3072cf60",
									"id": 154,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "557:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "545:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 152,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "545:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 153,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "572:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 156,
									"mutability": "mutable",
									"name": "_depositedTokenAddress",
									"nameLocation": "599:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "583:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 155,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "583:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_expectedTokenAddress",
									"nameLocation": "643:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "627:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 157,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "627:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 160,
									"mutability": "mutable",
									"name": "_depositedAmount",
									"nameLocation": "686:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "670:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "670:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 162,
									"mutability": "mutable",
									"name": "_expectedAmount",
									"nameLocation": "724:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "708:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 166,
									"mutability": "mutable",
									"name": "_trades",
									"nameLocation": "775:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "754:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
										"typeString": "struct SyCrowBarter.BaterTrade[]"
									},
									"typeName": {
										"baseType": {
											"id": 164,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 163,
												"name": "BaterTrade",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 173,
												"src": "754:10:2"
											},
											"referencedDeclaration": 173,
											"src": "754:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BaterTrade_$173_storage_ptr",
												"typeString": "struct SyCrowBarter.BaterTrade"
											}
										},
										"id": 165,
										"nodeType": "ArrayTypeName",
										"src": "754:12:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage_ptr",
											"typeString": "struct SyCrowBarter.BaterTrade[]"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "SyCrowBarter.BaterTrade",
									"id": 173,
									"members": [
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "_trader",
											"nameLocation": "825:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 173,
											"src": "817:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 167,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "817:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 170,
											"mutability": "mutable",
											"name": "_amountIn",
											"nameLocation": "850:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 173,
											"src": "842:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 169,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "842:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "_amountOut",
											"nameLocation": "877:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 173,
											"src": "869:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 171,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "869:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BaterTrade",
									"nameLocation": "796:10:2",
									"nodeType": "StructDefinition",
									"scope": 1057,
									"src": "789:105:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "923:162:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 176,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "954:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 177,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "966:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "966:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "954:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 180,
																	"name": "totalTradeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "985:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 181,
																	"name": "_expectedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "1004:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "985:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "954:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e414354495645",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1033:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c34f7dbf762d3d0b96bf148f8cc4593d2b9473ef3d73cd2c557f8a9dbd3100e5",
																"typeString": "literal_string \"SyCrowBarter: INACTIVE\""
															},
															"value": "SyCrowBarter: INACTIVE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c34f7dbf762d3d0b96bf148f8cc4593d2b9473ef3d73cd2c557f8a9dbd3100e5",
																"typeString": "literal_string \"SyCrowBarter: INACTIVE\""
															}
														],
														"id": 175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "933:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "933:134:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "933:134:2"
											},
											{
												"id": 187,
												"nodeType": "PlaceholderStatement",
												"src": "1077:1:2"
											}
										]
									},
									"id": 189,
									"name": "checkActive",
									"nameLocation": "909:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "920:2:2"
									},
									"src": "900:185:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1147:99:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
																"typeString": "enum ISyCrowBarterType"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 195,
																"name": "_barterType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1165:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
																	"typeString": "enum ISyCrowBarterType"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 196,
																"name": "barterType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "1180:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
																	"typeString": "enum ISyCrowBarterType"
																}
															},
															"src": "1165:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e56414c49445f4241525445525f54595045",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1192:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e50a0ae171cffc9efca2ecf30038ab4bcc5d422964b87e2fe386b4e70f368d12",
																"typeString": "literal_string \"SyCrowBarter: INVALID_BARTER_TYPE\""
															},
															"value": "SyCrowBarter: INVALID_BARTER_TYPE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e50a0ae171cffc9efca2ecf30038ab4bcc5d422964b87e2fe386b4e70f368d12",
																"typeString": "literal_string \"SyCrowBarter: INVALID_BARTER_TYPE\""
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1157:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1157:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1157:71:2"
											},
											{
												"id": 201,
												"nodeType": "PlaceholderStatement",
												"src": "1238:1:2"
											}
										]
									},
									"id": 203,
									"name": "checkBarterType",
									"nameLocation": "1100:15:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "_barterType",
												"nameLocation": "1134:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1116:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
													"typeString": "enum ISyCrowBarterType"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "ISyCrowBarterType",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1073,
														"src": "1116:17:2"
													},
													"referencedDeclaration": 1073,
													"src": "1116:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
														"typeString": "enum ISyCrowBarterType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:31:2"
									},
									"src": "1091:155:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1277:160:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 206,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "1308:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 207,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1319:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1319:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1308:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "totalTradeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "1338:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 211,
																	"name": "_expectedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "1358:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1338:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1308:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20414354495645",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1387:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b599e4ab958a4499af0e5f2ac52329fcb13f4955c7283e3523e952de95899b8c",
																"typeString": "literal_string \"SyCrowBarter: ACTIVE\""
															},
															"value": "SyCrowBarter: ACTIVE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b599e4ab958a4499af0e5f2ac52329fcb13f4955c7283e3523e952de95899b8c",
																"typeString": "literal_string \"SyCrowBarter: ACTIVE\""
															}
														],
														"id": 205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1287:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1287:132:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1287:132:2"
											},
											{
												"id": 217,
												"nodeType": "PlaceholderStatement",
												"src": "1429:1:2"
											}
										]
									},
									"id": 219,
									"name": "checkInActive",
									"nameLocation": "1261:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1274:2:2"
									},
									"src": "1252:185:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1466:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "_initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1484:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a204e4f545f494e495449414c495a4544",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1498:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08e3709bf4c0b831cf8bc5788c36b99c92ad6a02cff038f75ddd0795dadbe1e7",
																"typeString": "literal_string \"SyCrowBarter: NOT_INITIALIZED\""
															},
															"value": "SyCrowBarter: NOT_INITIALIZED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08e3709bf4c0b831cf8bc5788c36b99c92ad6a02cff038f75ddd0795dadbe1e7",
																"typeString": "literal_string \"SyCrowBarter: NOT_INITIALIZED\""
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1476:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1476:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1476:54:2"
											},
											{
												"id": 226,
												"nodeType": "PlaceholderStatement",
												"src": "1540:1:2"
											}
										]
									},
									"id": 228,
									"name": "initialized",
									"nameLocation": "1452:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1463:2:2"
									},
									"src": "1443:105:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "1577:174:2",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "isycrFactory",
														"nameLocation": "1608:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "1587:33:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
															"typeString": "contract ISyCrowBarterFactory"
														},
														"typeName": {
															"id": 231,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 230,
																"name": "ISyCrowBarterFactory",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1269,
																"src": "1587:20:2"
															},
															"referencedDeclaration": 1269,
															"src": "1587:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "ISyCrowBarterFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "1623:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISyCrowBarterFactory_$1269_$",
															"typeString": "type(contract ISyCrowBarterFactory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
														"typeString": "contract ISyCrowBarterFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1587:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1670:24:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 238,
																		"name": "isycrFactory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 232,
																		"src": "1671:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
																			"typeString": "contract ISyCrowBarterFactory"
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isPaused",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1232,
																	"src": "1671:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
																		"typeString": "function () view external returns (bool)"
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1671:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a204261736520436f6e747261637420506175736564",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1696:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79383cfc7011af228083c91a74f19d88be46e1e2713e67b50fb07b6b50771355",
																"typeString": "literal_string \"SyCrowBarter: Base Contract Paused\""
															},
															"value": "SyCrowBarter: Base Contract Paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79383cfc7011af228083c91a74f19d88be46e1e2713e67b50fb07b6b50771355",
																"typeString": "literal_string \"SyCrowBarter: Base Contract Paused\""
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1662:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "1662:71:2"
											},
											{
												"id": 245,
												"nodeType": "PlaceholderStatement",
												"src": "1743:1:2"
											}
										]
									},
									"id": 247,
									"name": "checkPaused",
									"nameLocation": "1563:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1574:2:2"
									},
									"src": "1554:197:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1771:37:2",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 250,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1781:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 251,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1791:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1791:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1781:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1781:20:2"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:2:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:2"
									},
									"scope": 1057,
									"src": "1757:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2101:749:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 279,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2119:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2119:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 281,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "2133:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2119:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20464f5242494444454e",
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2142:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e99d902835ef330efdeb5defc7644c488a1d9bd398555c575e8f17cb2a43c8b2",
																"typeString": "literal_string \"SyCrowBarter: FORBIDDEN\""
															},
															"value": "SyCrowBarter: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e99d902835ef330efdeb5defc7644c488a1d9bd398555c575e8f17cb2a43c8b2",
																"typeString": "literal_string \"SyCrowBarter: FORBIDDEN\""
															}
														],
														"id": 278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2111:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2111:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "2111:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2187:13:2",
															"subExpression": {
																"id": 287,
																"name": "_initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "2188:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20414c52454144595f494e495449414c495a4544",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2202:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53c2ce6ed47c179816a9c6f0033c5d03f04949b869cef6fd14d5246b67912975",
																"typeString": "literal_string \"SyCrowBarter: ALREADY_INITIALIZED\""
															},
															"value": "SyCrowBarter: ALREADY_INITIALIZED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_53c2ce6ed47c179816a9c6f0033c5d03f04949b869cef6fd14d5246b67912975",
																"typeString": "literal_string \"SyCrowBarter: ALREADY_INITIALIZED\""
															}
														],
														"id": 286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2179:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "2179:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 293,
																"name": "_deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "2256:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 294,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2269:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2269:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2256:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20504153545f444541444c494e45",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2286:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a273cae0d429ffac620d41ddcccea1b71b9e6e453a8ce90983b3e22305b1505",
																"typeString": "literal_string \"SyCrowBarter: PAST_DEADLINE\""
															},
															"value": "SyCrowBarter: PAST_DEADLINE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a273cae0d429ffac620d41ddcccea1b71b9e6e453a8ce90983b3e22305b1505",
																"typeString": "literal_string \"SyCrowBarter: PAST_DEADLINE\""
															}
														],
														"id": 292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2248:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "2248:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 307,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2382:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																					"typeString": "contract SyCrowBarter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																					"typeString": "contract SyCrowBarter"
																				}
																			],
																			"id": 306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2374:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 305,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2374:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2374:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 302,
																				"name": "inToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "2355:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 301,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2348:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1067_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2348:15:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1067",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1066,
																	"src": "2348:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2348:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 310,
																"name": "amountDeposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "2392:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2348:59:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f4445504f534954",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2421:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60471f58a070287600518638a3de995e7f8b72f058b8593fb94e6702bacc457b",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_DEPOSIT\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_DEPOSIT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60471f58a070287600518638a3de995e7f8b72f058b8593fb94e6702bacc457b",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_DEPOSIT\""
															}
														],
														"id": 300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2327:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2327:140:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "2327:140:2"
											},
											{
												"expression": {
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 315,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2478:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 316,
														"name": "_deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2489:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2478:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "2478:20:2"
											},
											{
												"expression": {
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 319,
														"name": "_depositedTokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2509:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 320,
														"name": "inToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2534:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2509:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "2509:32:2"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 323,
														"name": "_expectedTokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2551:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 324,
														"name": "outToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2575:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2551:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2551:32:2"
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_depositedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2594:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "amountDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2613:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2594:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "2594:34:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_expectedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "2638:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "amountExpected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "2656:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2638:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "2638:32:2"
											},
											{
												"expression": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 335,
														"name": "barterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "2681:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
															"typeString": "enum ISyCrowBarterType"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 336,
														"name": "_barterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "2694:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
															"typeString": "enum ISyCrowBarterType"
														}
													},
													"src": "2681:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
														"typeString": "enum ISyCrowBarterType"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "2681:24:2"
											},
											{
												"expression": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 339,
														"name": "allowMultiBarter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "2716:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 340,
														"name": "_allowMultiBarter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "2735:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2716:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "2716:36:2"
											},
											{
												"expression": {
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 343,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2771:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 344,
														"name": "_WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2778:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2771:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "2771:12:2"
											},
											{
												"expression": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 347,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "2794:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2809:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "2794:19:2"
											},
											{
												"expression": {
													"id": 351,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 154,
													"src": "2831:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 277,
												"id": 352,
												"nodeType": "Return",
												"src": "2824:19:2"
											}
										]
									},
									"functionSelector": "5f5780e5",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1823:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "_barterType",
												"nameLocation": "1861:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1843:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
													"typeString": "enum ISyCrowBarterType"
												},
												"typeName": {
													"id": 258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 257,
														"name": "ISyCrowBarterType",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1073,
														"src": "1843:17:2"
													},
													"referencedDeclaration": 1073,
													"src": "1843:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
														"typeString": "enum ISyCrowBarterType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "1890:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1882:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "outToken",
												"nameLocation": "1915:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1907:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "amountDeposited",
												"nameLocation": "1941:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1933:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "amountExpected",
												"nameLocation": "1974:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1966:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "2006:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1998:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "_allowMultiBarter",
												"nameLocation": "2030:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2025:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2025:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_WETH",
												"nameLocation": "2065:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2057:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:243:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2095:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2095:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:6:2"
									},
									"scope": 1057,
									"src": "1814:1036:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2984:59:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 364,
															"name": "_depositedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "3002:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 365,
															"name": "_expectedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "3020:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 366,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3001:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 363,
												"id": 367,
												"nodeType": "Return",
												"src": "2994:42:2"
											}
										]
									},
									"functionSelector": "3d370b4e",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 357,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "2933:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2933:11:2"
										}
									],
									"name": "getAmounts",
									"nameLocation": "2865:10:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 356,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2916:8:2"
									},
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2875:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2962:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2962:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2961:18:2"
									},
									"scope": 1057,
									"src": "2856:187:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1092
									],
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "3176:71:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 379,
															"name": "_depositedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "3194:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "_expectedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "3218:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 381,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3193:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"functionReturnParameters": 378,
												"id": 382,
												"nodeType": "Return",
												"src": "3186:54:2"
											}
										]
									},
									"functionSelector": "aa6ca808",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 373,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 372,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "3125:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3125:11:2"
										}
									],
									"name": "getTokens",
									"nameLocation": "3058:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 371,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3108:8:2"
									},
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3067:2:2"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3154:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3154:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3163:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3163:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3153:18:2"
									},
									"scope": 1057,
									"src": "3049:198:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1104
									],
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "3462:477:2",
										"statements": [
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "addresses",
														"nameLocation": "3489:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "3472:26:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 401,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3472:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 402,
															"nodeType": "ArrayTypeName",
															"src": "3472:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 410,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 407,
																"name": "_trades",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "3515:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
																	"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3515:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3501:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 404,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3505:7:2",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 405,
															"nodeType": "ArrayTypeName",
															"src": "3505:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3472:58:2"
											},
											{
												"assignments": [
													415
												],
												"declarations": [
													{
														"constant": false,
														"id": 415,
														"mutability": "mutable",
														"name": "amountsIn",
														"nameLocation": "3557:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "3540:26:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 413,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3540:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 414,
															"nodeType": "ArrayTypeName",
															"src": "3540:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 419,
																"name": "_trades",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "3583:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
																	"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3583:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3569:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 416,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3573:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 417,
															"nodeType": "ArrayTypeName",
															"src": "3573:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3569:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3540:58:2"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "amountsOut",
														"nameLocation": "3625:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "3608:27:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 425,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3608:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 426,
															"nodeType": "ArrayTypeName",
															"src": "3608:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 431,
																"name": "_trades",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "3652:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
																	"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3652:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3638:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 428,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3642:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 429,
															"nodeType": "ArrayTypeName",
															"src": "3642:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3638:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3608:59:2"
											},
											{
												"body": {
													"id": 473,
													"nodeType": "Block",
													"src": "3723:158:2",
													"statements": [
														{
															"expression": {
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 446,
																		"name": "addresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "3737:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 448,
																	"indexExpression": {
																		"id": 447,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "3747:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3737:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 449,
																			"name": "_trades",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 166,
																			"src": "3752:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
																				"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																			}
																		},
																		"id": 451,
																		"indexExpression": {
																			"id": 450,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "3760:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3752:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BaterTrade_$173_storage",
																			"typeString": "struct SyCrowBarter.BaterTrade storage ref"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_trader",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 168,
																	"src": "3752:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3737:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 454,
															"nodeType": "ExpressionStatement",
															"src": "3737:33:2"
														},
														{
															"expression": {
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 455,
																		"name": "amountsIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "3784:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 457,
																	"indexExpression": {
																		"id": 456,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "3794:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3784:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 458,
																			"name": "_trades",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 166,
																			"src": "3799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
																				"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																			}
																		},
																		"id": 460,
																		"indexExpression": {
																			"id": 459,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "3807:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3799:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BaterTrade_$173_storage",
																			"typeString": "struct SyCrowBarter.BaterTrade storage ref"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_amountIn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 170,
																	"src": "3799:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3784:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 463,
															"nodeType": "ExpressionStatement",
															"src": "3784:35:2"
														},
														{
															"expression": {
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 464,
																		"name": "amountsOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 427,
																		"src": "3833:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 466,
																	"indexExpression": {
																		"id": 465,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "3844:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3833:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 467,
																			"name": "_trades",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 166,
																			"src": "3849:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
																				"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																			}
																		},
																		"id": 469,
																		"indexExpression": {
																			"id": 468,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "3857:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3849:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BaterTrade_$173_storage",
																			"typeString": "struct SyCrowBarter.BaterTrade storage ref"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_amountOut",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 172,
																	"src": "3849:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3833:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 472,
															"nodeType": "ExpressionStatement",
															"src": "3833:37:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "3698:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 440,
															"name": "_trades",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "3702:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
																"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3702:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3698:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"initializationExpression": {
													"assignments": [
														436
													],
													"declarations": [
														{
															"constant": false,
															"id": 436,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3691:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 474,
															"src": "3683:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 435,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3683:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 438,
													"initialValue": {
														"hexValue": "30",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3695:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3683:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3718:3:2",
														"subExpression": {
															"id": 443,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "3718:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 445,
													"nodeType": "ExpressionStatement",
													"src": "3718:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3678:203:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 475,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3899:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 476,
															"name": "amountsIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3910:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 477,
															"name": "amountsOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "3921:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 478,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3898:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(address[] memory,uint256[] memory,uint256[] memory)"
													}
												},
												"functionReturnParameters": 398,
												"id": 479,
												"nodeType": "Return",
												"src": "3891:41:2"
											}
										]
									},
									"functionSelector": "e43372e9",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 387,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "3329:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3329:11:2"
										}
									],
									"name": "getTrades",
									"nameLocation": "3262:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 386,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3312:8:2"
									},
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3271:2:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "3371:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 389,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3371:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 390,
													"nodeType": "ArrayTypeName",
													"src": "3371:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "3401:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 392,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3401:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 393,
													"nodeType": "ArrayTypeName",
													"src": "3401:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "3431:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 395,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3431:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 396,
													"nodeType": "ArrayTypeName",
													"src": "3431:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3357:100:2"
									},
									"scope": 1057,
									"src": "3253:686:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1109
									],
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "4148:182:2",
										"statements": [
											{
												"condition": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4161:17:2",
													"subExpression": {
														"id": 497,
														"name": "allowMultiBarter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "4162:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "IfStatement",
												"src": "4158:127:2",
												"trueBody": {
													"id": 506,
													"nodeType": "Block",
													"src": "4179:106:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 500,
																			"name": "inAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 483,
																			"src": "4201:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 501,
																			"name": "_expectedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "4213:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4201:27:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f524551555249524544",
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4230:43:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		},
																		"value": "SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		}
																	],
																	"id": 499,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4193:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4193:81:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 505,
															"nodeType": "ExpressionStatement",
															"src": "4193:81:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "4314:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "_tradeTokenForToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "4294:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4294:29:2"
											}
										]
									},
									"functionSelector": "2ffc6887",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 486,
												"name": "checkActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "4033:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4033:11:2"
										},
										{
											"id": 489,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 488,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "4053:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4053:11:2"
										},
										{
											"id": 491,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 490,
												"name": "checkPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 247,
												"src": "4073:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4073:11:2"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 493,
														"name": "ISyCrowBarterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "4109:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ISyCrowBarterType_$1073_$",
															"typeString": "type(enum ISyCrowBarterType)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "TOKEN_FOR_TOKEN",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1072,
													"src": "4109:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
														"typeString": "enum ISyCrowBarterType"
													}
												}
											],
											"id": 495,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 492,
												"name": "checkBarterType",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 203,
												"src": "4093:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4093:50:2"
										}
									],
									"name": "tradeTokenForToken",
									"nameLocation": "3954:18:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 485,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4016:8:2"
									},
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "3981:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3973:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3972:18:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4148:0:2"
									},
									"scope": 1057,
									"src": "3945:385:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1114
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "4535:181:2",
										"statements": [
											{
												"condition": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4549:17:2",
													"subExpression": {
														"id": 529,
														"name": "allowMultiBarter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "4550:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 539,
												"nodeType": "IfStatement",
												"src": "4545:128:2",
												"trueBody": {
													"id": 538,
													"nodeType": "Block",
													"src": "4567:106:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 532,
																			"name": "inAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 515,
																			"src": "4589:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 533,
																			"name": "_expectedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "4601:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4589:27:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f524551555249524544",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4618:43:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		},
																		"value": "SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		}
																	],
																	"id": 531,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4581:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4581:81:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 537,
															"nodeType": "ExpressionStatement",
															"src": "4581:81:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 541,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "4700:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 540,
														"name": "_tradeTokenForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "4682:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4682:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4682:27:2"
											}
										]
									},
									"functionSelector": "0d182605",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 518,
												"name": "checkActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "4422:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4422:11:2"
										},
										{
											"id": 521,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 520,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "4442:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4442:11:2"
										},
										{
											"id": 523,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 522,
												"name": "checkPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 247,
												"src": "4462:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4462:11:2"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 525,
														"name": "ISyCrowBarterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "4498:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ISyCrowBarterType_$1073_$",
															"typeString": "type(enum ISyCrowBarterType)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "ETH_FOR_TOKEN",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1070,
													"src": "4498:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
														"typeString": "enum ISyCrowBarterType"
													}
												}
											],
											"id": 527,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 524,
												"name": "checkBarterType",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 203,
												"src": "4482:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4482:48:2"
										}
									],
									"name": "tradeTokenForEth",
									"nameLocation": "4345:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 517,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4405:8:2"
									},
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "4370:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4362:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:18:2"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4535:0:2"
									},
									"scope": 1057,
									"src": "4336:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1119
									],
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "4937:181:2",
										"statements": [
											{
												"condition": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4950:17:2",
													"subExpression": {
														"id": 561,
														"name": "allowMultiBarter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "4951:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 572,
												"nodeType": "IfStatement",
												"src": "4947:128:2",
												"trueBody": {
													"id": 571,
													"nodeType": "Block",
													"src": "4968:107:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 564,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4990:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "4990:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 566,
																			"name": "_expectedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "5003:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4990:28:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f524551555249524544",
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5020:43:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		},
																		"value": "SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		}
																	],
																	"id": 563,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4982:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4982:82:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 570,
															"nodeType": "ExpressionStatement",
															"src": "4982:82:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "5102:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 573,
														"name": "_tradeEthForToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "5084:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5084:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "5084:27:2"
											}
										]
									},
									"functionSelector": "4341f920",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 550,
												"name": "checkActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "4808:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4808:11:2"
										},
										{
											"id": 553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 552,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "4828:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4828:11:2"
										},
										{
											"id": 555,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 554,
												"name": "checkPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 247,
												"src": "4864:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4864:11:2"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 557,
														"name": "ISyCrowBarterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "4900:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ISyCrowBarterType_$1073_$",
															"typeString": "type(enum ISyCrowBarterType)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "TOKEN_FOR_ETH",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1071,
													"src": "4900:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
														"typeString": "enum ISyCrowBarterType"
													}
												}
											],
											"id": 559,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 556,
												"name": "checkBarterType",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 203,
												"src": "4884:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4884:48:2"
										}
									],
									"name": "tradeEthForToken",
									"nameLocation": "4731:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 549,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4791:8:2"
									},
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "4756:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "4748:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4747:18:2"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4937:0:2"
									},
									"scope": 1057,
									"src": "4722:396:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5180:1050:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 588,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5251:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5251:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 585,
																				"name": "_expectedTokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 158,
																				"src": "5218:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 584,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "5211:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1067_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5211:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1067",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1066,
																	"src": "5211:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5211:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 591,
																"name": "inAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "5266:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5211:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f42414c414e4345",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5288:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_BALANCE\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_BALANCE\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5190:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5190:144:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "5190:144:2"
											},
											{
												"assignments": [
													597
												],
												"declarations": [
													{
														"constant": false,
														"id": 597,
														"mutability": "mutable",
														"name": "outAmount",
														"nameLocation": "5353:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 676,
														"src": "5345:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 596,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5345:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 601,
												"initialValue": {
													"arguments": [
														{
															"id": 599,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "5383:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 598,
														"name": "getTradeOutAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "5365:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5345:47:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 609,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5473:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																					"typeString": "contract SyCrowBarter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																					"typeString": "contract SyCrowBarter"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5465:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5465:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5465:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 604,
																				"name": "_depositedTokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "5431:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 603,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "5424:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1067_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5424:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1067",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1066,
																	"src": "5424:40:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5424:55:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 612,
																"name": "outAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "5499:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5424:84:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f434f4e54524143545f42414c414e4345",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5522:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5403:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5403:174:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "5403:174:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 620,
															"name": "_expectedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "5633:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 621,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5668:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5668:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 625,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5700:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5692:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 623,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5692:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5692:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "5719:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 617,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "5588:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1440_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1414,
														"src": "5588:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5588:149:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "5588:149:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "_depositedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "5788:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 634,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5824:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5824:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "5848:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 630,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "5747:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1440_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1368,
														"src": "5747:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5747:120:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "5747:120:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 643,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5902:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5902:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 645,
																	"name": "inAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5914:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 646,
																	"name": "outAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "5924:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 642,
																"name": "BaterTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "5891:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_BaterTrade_$173_storage_ptr_$",
																	"typeString": "type(struct SyCrowBarter.BaterTrade storage pointer)"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5891:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BaterTrade_$173_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_BaterTrade_$173_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														],
														"expression": {
															"id": 639,
															"name": "_trades",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5878:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
																"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5878:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage_ptr_$_t_struct$_BaterTrade_$173_storage_$returns$__$bound_to$_t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct SyCrowBarter.BaterTrade storage ref[] storage pointer,struct SyCrowBarter.BaterTrade storage ref)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5878:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "5878:57:2"
											},
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 650,
														"name": "totalTradeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "5946:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 651,
															"name": "totalTradeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5965:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 652,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "5984:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5965:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5946:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "5946:46:2"
											},
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "sycrFactory",
														"nameLocation": "6024:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 676,
														"src": "6003:32:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
															"typeString": "contract ISyCrowBarterFactory"
														},
														"typeName": {
															"id": 657,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 656,
																"name": "ISyCrowBarterFactory",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1269,
																"src": "6003:20:2"
															},
															"referencedDeclaration": 1269,
															"src": "6003:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"arguments": [
														{
															"id": 660,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "6059:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 659,
														"name": "ISyCrowBarterFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "6038:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISyCrowBarterFactory_$1269_$",
															"typeString": "type(contract ISyCrowBarterFactory)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
														"typeString": "contract ISyCrowBarterFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6003:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 668,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6139:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6131:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 666,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6131:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 670,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6158:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6158:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "6182:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "6204:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 663,
															"name": "sycrFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "6086:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "notifyTradeByBarter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1257,
														"src": "6086:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256) external"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6086:137:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "6086:137:2"
											}
										]
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tradeTokenForToken",
									"nameLocation": "5133:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "5161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5152:18:2"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5180:0:2"
									},
									"scope": 1057,
									"src": "5124:1106:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "6290:1023:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 687,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6361:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6361:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 684,
																				"name": "_expectedTokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 158,
																				"src": "6328:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 683,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "6321:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1067_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6321:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1067",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1066,
																	"src": "6321:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6321:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 690,
																"name": "inAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6376:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6321:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f42414c414e4345",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6398:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_BALANCE\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_BALANCE\""
															}
														],
														"id": 682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6300:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6300:144:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "6300:144:2"
											},
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "outAmount",
														"nameLocation": "6463:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 786,
														"src": "6455:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6455:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 700,
												"initialValue": {
													"arguments": [
														{
															"id": 698,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "6493:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "getTradeOutAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "6475:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6475:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6455:47:2"
											},
											{
												"assignments": [
													703
												],
												"declarations": [
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "_wethErc20",
														"nameLocation": "6520:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 786,
														"src": "6513:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1067",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 702,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 701,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1067,
																"src": "6513:6:2"
															},
															"referencedDeclaration": 1067,
															"src": "6513:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1067",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"initialValue": {
													"arguments": [
														{
															"id": 705,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "6540:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 704,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "6533:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$1067_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6533:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1067",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6513:32:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 713,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6606:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																					"typeString": "contract SyCrowBarter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																					"typeString": "contract SyCrowBarter"
																				}
																			],
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6598:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 711,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6598:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6598:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 709,
																		"name": "_wethErc20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "6577:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1067",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1066,
																	"src": "6577:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6577:35:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 716,
																"name": "outAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "6616:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6577:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f434f4e54524143545f42414c414e4345",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6639:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6556:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6556:138:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "6556:138:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6726:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 722,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "6711:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 721,
																"name": "IWETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "6705:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH_$1280_$",
																	"typeString": "type(contract IWETH)"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6705:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH_$1280",
																"typeString": "contract IWETH"
															}
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1279,
														"src": "6705:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6705:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "6705:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "_expectedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "6792:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 732,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6827:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6827:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 736,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6859:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6851:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 734,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6851:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6851:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "6878:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 728,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "6747:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1440_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1414,
														"src": "6747:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6747:149:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "6747:149:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 744,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6937:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6937:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6949:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 741,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "6906:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1440_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1439,
														"src": "6906:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6906:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "6906:53:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 753,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6994:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6994:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 755,
																	"name": "inAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "7006:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 756,
																	"name": "outAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "7016:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 752,
																"name": "BaterTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "6983:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_BaterTrade_$173_storage_ptr_$",
																	"typeString": "type(struct SyCrowBarter.BaterTrade storage pointer)"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6983:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BaterTrade_$173_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_BaterTrade_$173_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														],
														"expression": {
															"id": 749,
															"name": "_trades",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "6970:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
																"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6970:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage_ptr_$_t_struct$_BaterTrade_$173_storage_$returns$__$bound_to$_t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct SyCrowBarter.BaterTrade storage ref[] storage pointer,struct SyCrowBarter.BaterTrade storage ref)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6970:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "6970:57:2"
											},
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 760,
														"name": "totalTradeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "7038:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 761,
															"name": "totalTradeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "7057:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 762,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "7076:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7057:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7038:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "7038:46:2"
											},
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "sycrFactory",
														"nameLocation": "7116:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 786,
														"src": "7095:32:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
															"typeString": "contract ISyCrowBarterFactory"
														},
														"typeName": {
															"id": 767,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 766,
																"name": "ISyCrowBarterFactory",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1269,
																"src": "7095:20:2"
															},
															"referencedDeclaration": 1269,
															"src": "7095:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"arguments": [
														{
															"id": 770,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "7151:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 769,
														"name": "ISyCrowBarterFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "7130:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISyCrowBarterFactory_$1269_$",
															"typeString": "type(contract ISyCrowBarterFactory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7130:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
														"typeString": "contract ISyCrowBarterFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7095:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 778,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7222:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7214:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 776,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7214:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7214:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 780,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7241:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7241:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "7265:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 783,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "7287:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 773,
															"name": "sycrFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "7169:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "notifyTradeByBarter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1257,
														"src": "7169:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256) external"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7169:137:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "7169:137:2"
											}
										]
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tradeTokenForEth",
									"nameLocation": "6245:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "6271:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "6263:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6262:18:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6290:0:2"
									},
									"scope": 1057,
									"src": "6236:1077:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "7373:857:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 793,
																"name": "inAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "7391:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 794,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7403:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7403:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7391:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a204d554c54495f54524144455f4e4f545f454e41424c4544",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7414:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd025a8b4dac45f94633765487ac16f8ad7e1a6ee7e724cd8d9bc6ef3ad676e1",
																"typeString": "literal_string \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\""
															},
															"value": "SyCrowBarter: MULTI_TRADE_NOT_ENABLED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd025a8b4dac45f94633765487ac16f8ad7e1a6ee7e724cd8d9bc6ef3ad676e1",
																"typeString": "literal_string \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\""
															}
														],
														"id": 792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7383:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7383:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "7383:71:2"
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "outAmount",
														"nameLocation": "7473:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "7465:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"arguments": [
														{
															"id": 803,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "7503:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "getTradeOutAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "7485:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7485:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7465:47:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 813,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7593:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																					"typeString": "contract SyCrowBarter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																					"typeString": "contract SyCrowBarter"
																				}
																			],
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7585:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 811,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7585:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7585:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 808,
																				"name": "_depositedTokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "7551:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 807,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "7544:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1067_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7544:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1067",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1066,
																	"src": "7544:40:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7544:55:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 816,
																"name": "outAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "7619:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7544:84:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f434f4e54524143545f42414c414e4345",
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7642:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7523:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7523:174:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "7523:174:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 822,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "7714:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 821,
																	"name": "IWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "7708:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IWETH_$1280_$",
																		"typeString": "type(contract IWETH)"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7708:11:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH_$1280",
																	"typeString": "contract IWETH"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1274,
															"src": "7708:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 825,
																"name": "inAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "7735:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7708:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7708:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "7708:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 832,
															"name": "_depositedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "7798:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 833,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7834:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7834:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "7858:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 829,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "7757:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1440_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1368,
														"src": "7757:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7757:120:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "7757:120:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 842,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7912:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7912:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 844,
																	"name": "inAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "7924:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 845,
																	"name": "outAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "7934:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 841,
																"name": "BaterTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "7901:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_BaterTrade_$173_storage_ptr_$",
																	"typeString": "type(struct SyCrowBarter.BaterTrade storage pointer)"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7901:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BaterTrade_$173_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_BaterTrade_$173_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														],
														"expression": {
															"id": 838,
															"name": "_trades",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "7888:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage",
																"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7888:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage_ptr_$_t_struct$_BaterTrade_$173_storage_$returns$__$bound_to$_t_array$_t_struct$_BaterTrade_$173_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct SyCrowBarter.BaterTrade storage ref[] storage pointer,struct SyCrowBarter.BaterTrade storage ref)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7888:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "7888:57:2"
											},
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 849,
														"name": "totalTradeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "7955:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 850,
															"name": "totalTradeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "7974:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 851,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "7993:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7974:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7955:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "7955:46:2"
											},
											{
												"assignments": [
													857
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "sycrFactory",
														"nameLocation": "8033:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "8012:32:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
															"typeString": "contract ISyCrowBarterFactory"
														},
														"typeName": {
															"id": 856,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 855,
																"name": "ISyCrowBarterFactory",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1269,
																"src": "8012:20:2"
															},
															"referencedDeclaration": 1269,
															"src": "8012:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 859,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "8068:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 858,
														"name": "ISyCrowBarterFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "8047:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISyCrowBarterFactory_$1269_$",
															"typeString": "type(contract ISyCrowBarterFactory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8047:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
														"typeString": "contract ISyCrowBarterFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8012:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 867,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8139:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8131:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 865,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8131:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8131:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 869,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8158:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8158:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "8182:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 872,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "8204:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 862,
															"name": "sycrFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "8086:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "notifyTradeByBarter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1257,
														"src": "8086:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256) external"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8086:137:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "8086:137:2"
											}
										]
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tradeEthForToken",
									"nameLocation": "7328:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "7354:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "7346:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7345:18:2"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7373:0:2"
									},
									"scope": 1057,
									"src": "7319:911:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1122
									],
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "8310:1611:2",
										"statements": [
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "_wethErc20",
														"nameLocation": "8327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "8320:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1067",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 887,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 886,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1067,
																"src": "8320:6:2"
															},
															"referencedDeclaration": 1067,
															"src": "8320:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1067",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"initialValue": {
													"arguments": [
														{
															"id": 890,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "8347:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 889,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "8340:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$1067_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8340:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1067",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8320:32:2"
											},
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "ethBalance",
														"nameLocation": "8371:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "8363:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8363:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 899,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8413:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8405:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 897,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8405:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8405:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 895,
															"name": "_wethErc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8384:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1067",
																"typeString": "contract IERC20"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1066,
														"src": "8384:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8384:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8363:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 903,
														"name": "ethBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "8434:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8447:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8434:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "8430:145:2",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "8450:125:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 910,
																		"name": "ethBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "8485:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 907,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "8470:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 906,
																			"name": "IWETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "8464:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IWETH_$1280_$",
																				"typeString": "type(contract IWETH)"
																			}
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8464:11:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$1280",
																			"typeString": "contract IWETH"
																		}
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1279,
																	"src": "8464:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8464:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 912,
															"nodeType": "ExpressionStatement",
															"src": "8464:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 916,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8541:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8541:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 918,
																		"name": "ethBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "8553:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 913,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "8510:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1440_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1439,
																	"src": "8510:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8510:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "ExpressionStatement",
															"src": "8510:54:2"
														}
													]
												}
											},
											{
												"assignments": [
													924
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "expectedTokenBalance",
														"nameLocation": "8593:20:2",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "8585:28:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 923,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8585:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 931,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8677:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8669:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 929,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8669:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8669:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 926,
																	"name": "_expectedTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "8623:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 925,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "8616:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1067_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8616:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1067",
																"typeString": "contract IERC20"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1066,
														"src": "8616:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8616:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8585:107:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 935,
														"name": "expectedTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "8707:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8730:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8707:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 948,
												"nodeType": "IfStatement",
												"src": "8703:201:2",
												"trueBody": {
													"id": 947,
													"nodeType": "Block",
													"src": "8733:171:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 941,
																		"name": "_expectedTokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "8792:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 942,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8831:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8831:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 944,
																		"name": "expectedTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "8859:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 938,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "8747:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1440_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1368,
																	"src": "8747:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8747:146:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 946,
															"nodeType": "ExpressionStatement",
															"src": "8747:146:2"
														}
													]
												}
											},
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "depositedTokenBalance",
														"nameLocation": "8922:21:2",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "8914:29:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8914:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 957,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9008:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9000:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9000:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9000:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 952,
																	"name": "_depositedTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "8953:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 951,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "8946:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1067_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8946:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1067",
																"typeString": "contract IERC20"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1066,
														"src": "8946:53:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8946:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8914:100:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "depositedTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "9029:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9053:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9029:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 974,
												"nodeType": "IfStatement",
												"src": "9025:204:2",
												"trueBody": {
													"id": 973,
													"nodeType": "Block",
													"src": "9056:173:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 967,
																		"name": "_depositedTokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "9115:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 968,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9155:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9155:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 970,
																		"name": "depositedTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "9183:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 964,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "9070:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1440_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1368,
																	"src": "9070:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9070:148:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 972,
															"nodeType": "ExpressionStatement",
															"src": "9070:148:2"
														}
													]
												}
											},
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "value1",
														"nameLocation": "9246:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "9238:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 975,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9238:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"hexValue": "30",
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9255:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9238:18:2"
											},
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "value2",
														"nameLocation": "9274:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "9266:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 979,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9266:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"hexValue": "30",
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9283:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9266:18:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
														"typeString": "enum ISyCrowBarterType"
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 983,
														"name": "barterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "9299:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
															"typeString": "enum ISyCrowBarterType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 984,
															"name": "ISyCrowBarterType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "9313:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ISyCrowBarterType_$1073_$",
																"typeString": "type(enum ISyCrowBarterType)"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "ETH_FOR_TOKEN",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "9313:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
															"typeString": "enum ISyCrowBarterType"
														}
													},
													"src": "9299:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
															"typeString": "enum ISyCrowBarterType"
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 996,
															"name": "barterType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "9443:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
																"typeString": "enum ISyCrowBarterType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 997,
																"name": "ISyCrowBarterType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "9457:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_ISyCrowBarterType_$1073_$",
																	"typeString": "type(enum ISyCrowBarterType)"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "TOKEN_FOR_TOKEN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1072,
															"src": "9457:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
																"typeString": "enum ISyCrowBarterType"
															}
														},
														"src": "9443:47:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1017,
														"nodeType": "Block",
														"src": "9596:88:2",
														"statements": [
															{
																"expression": {
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1009,
																		"name": "value1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "9610:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1010,
																		"name": "depositedTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "9619:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9610:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1012,
																"nodeType": "ExpressionStatement",
																"src": "9610:30:2"
															},
															{
																"expression": {
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1013,
																		"name": "value2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "9654:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1014,
																		"name": "ethBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "9663:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9654:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1016,
																"nodeType": "ExpressionStatement",
																"src": "9654:19:2"
															}
														]
													},
													"id": 1018,
													"nodeType": "IfStatement",
													"src": "9439:245:2",
													"trueBody": {
														"id": 1008,
														"nodeType": "Block",
														"src": "9492:98:2",
														"statements": [
															{
																"expression": {
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1000,
																		"name": "value1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "9506:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1001,
																		"name": "depositedTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "9515:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9506:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1003,
																"nodeType": "ExpressionStatement",
																"src": "9506:30:2"
															},
															{
																"expression": {
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1004,
																		"name": "value2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "9550:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1005,
																		"name": "expectedTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "9559:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9550:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1007,
																"nodeType": "ExpressionStatement",
																"src": "9550:29:2"
															}
														]
													}
												},
												"id": 1019,
												"nodeType": "IfStatement",
												"src": "9295:389:2",
												"trueBody": {
													"id": 995,
													"nodeType": "Block",
													"src": "9346:87:2",
													"statements": [
														{
															"expression": {
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 987,
																	"name": "value1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "9360:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 988,
																	"name": "ethBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "9369:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9360:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 990,
															"nodeType": "ExpressionStatement",
															"src": "9360:19:2"
														},
														{
															"expression": {
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 991,
																	"name": "value2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "9393:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 992,
																	"name": "expectedTokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "9402:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9393:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 994,
															"nodeType": "ExpressionStatement",
															"src": "9393:29:2"
														}
													]
												}
											},
											{
												"assignments": [
													1022
												],
												"declarations": [
													{
														"constant": false,
														"id": 1022,
														"mutability": "mutable",
														"name": "sycrFactory",
														"nameLocation": "9715:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "9694:32:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
															"typeString": "contract ISyCrowBarterFactory"
														},
														"typeName": {
															"id": 1021,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1020,
																"name": "ISyCrowBarterFactory",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1269,
																"src": "9694:20:2"
															},
															"referencedDeclaration": 1269,
															"src": "9694:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"arguments": [
														{
															"id": 1024,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "9750:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1023,
														"name": "ISyCrowBarterFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "9729:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISyCrowBarterFactory_$1269_$",
															"typeString": "type(contract ISyCrowBarterFactory)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9729:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
														"typeString": "contract ISyCrowBarterFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9694:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1032,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9835:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1057",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9827:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1030,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9827:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9827:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1034,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9854:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9854:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1036,
															"name": "value1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "9878:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1037,
															"name": "value2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "9898:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1027,
															"name": "sycrFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "9777:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1269",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "notifyWithdrawFromBarter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1268,
														"src": "9777:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256) external"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9777:137:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "9777:137:2"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 880,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 879,
												"name": "checkInActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 219,
												"src": "8274:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "8274:13:2"
										},
										{
											"id": 882,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 881,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "8288:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "8288:11:2"
										},
										{
											"id": 884,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 883,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8300:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "8300:9:2"
										}
									],
									"name": "withdraw",
									"nameLocation": "8245:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 878,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8265:8:2"
									},
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8253:2:2"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8310:0:2"
									},
									"scope": 1057,
									"src": "8236:1685:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "10028:69:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1048,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "10046:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1049,
																	"name": "_depositedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "10055:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10046:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1051,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10045:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1052,
														"name": "_expectedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "10075:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10045:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1047,
												"id": 1054,
												"nodeType": "Return",
												"src": "10038:52:2"
											}
										]
									},
									"functionSelector": "dab5a8df",
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTradeOutAmount",
									"nameLocation": "9936:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9962:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "9954:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9954:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9953:16:2"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "10015:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10015:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10014:9:2"
									},
									"scope": 1057,
									"src": "9927:170:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1058,
							"src": "269:9830:2",
							"usedErrors": []
						}
					],
					"src": "33:10067:2"
				},
				"id": 2
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1067
						]
					},
					"id": 1068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1059,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1067,
							"linearizedBaseContracts": [
								1067
							],
							"name": "IERC20",
							"nameLocation": "69:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 1066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "91:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "109:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "101:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "101:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "100:15:3"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "139:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:9:3"
									},
									"scope": 1067,
									"src": "82:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1068,
							"src": "59:91:3",
							"usedErrors": []
						}
					],
					"src": "33:118:3"
				},
				"id": 3
			},
			"contracts/interfaces/ISyCrowBarter.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ISyCrowBarter.sol",
					"exportedSymbols": {
						"ISyCrowBarter": [
							1123
						],
						"ISyCrowBarterType": [
							1073
						]
					},
					"id": 1124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1069,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"canonicalName": "ISyCrowBarterType",
							"id": 1073,
							"members": [
								{
									"id": 1070,
									"name": "ETH_FOR_TOKEN",
									"nameLocation": "88:13:4",
									"nodeType": "EnumValue",
									"src": "88:13:4"
								},
								{
									"id": 1071,
									"name": "TOKEN_FOR_ETH",
									"nameLocation": "107:13:4",
									"nodeType": "EnumValue",
									"src": "107:13:4"
								},
								{
									"id": 1072,
									"name": "TOKEN_FOR_TOKEN",
									"nameLocation": "126:15:4",
									"nodeType": "EnumValue",
									"src": "126:15:4"
								}
							],
							"name": "ISyCrowBarterType",
							"nameLocation": "64:17:4",
							"nodeType": "EnumDefinition",
							"src": "59:84:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISyCrowBarter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1123,
							"linearizedBaseContracts": [
								1123
							],
							"name": "ISyCrowBarter",
							"nameLocation": "155:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1078,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "184:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "191:2:4"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "217:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:9:4"
									},
									"scope": 1123,
									"src": "175:51:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3d370b4e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmounts",
									"nameLocation": "241:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "277:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "286:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:18:4"
									},
									"scope": 1123,
									"src": "232:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa6ca808",
									"id": 1092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokens",
									"nameLocation": "310:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:2:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "345:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "354:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:18:4"
									},
									"scope": 1123,
									"src": "301:62:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e43372e9",
									"id": 1104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrades",
									"nameLocation": "378:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "387:2:4"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "437:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1094,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "437:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1095,
													"nodeType": "ArrayTypeName",
													"src": "437:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "455:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1097,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "455:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1098,
													"nodeType": "ArrayTypeName",
													"src": "455:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "473:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1100,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "473:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1101,
													"nodeType": "ArrayTypeName",
													"src": "473:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:54:4"
									},
									"scope": 1123,
									"src": "369:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2ffc6887",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tradeTokenForToken",
									"nameLocation": "506:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "533:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "525:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:18:4"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:4"
									},
									"scope": 1123,
									"src": "497:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0d182605",
									"id": 1114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tradeTokenForEth",
									"nameLocation": "567:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "592:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "584:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:18:4"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:4"
									},
									"scope": 1123,
									"src": "558:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4341f920",
									"id": 1119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tradeEthForToken",
									"nameLocation": "626:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "651:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "643:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:18:4"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:4"
									},
									"scope": 1123,
									"src": "617:61:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3ccfd60b",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "693:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:2:4"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:0:4"
									},
									"scope": 1123,
									"src": "684:29:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1124,
							"src": "145:570:4",
							"usedErrors": []
						}
					],
					"src": "33:683:4"
				},
				"id": 4
			},
			"contracts/interfaces/ISyCrowBarterFactory.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ISyCrowBarterFactory.sol",
					"exportedSymbols": {
						"ISyCrowBarter": [
							1123
						],
						"ISyCrowBarterFactory": [
							1269
						],
						"ISyCrowBarterType": [
							1073
						]
					},
					"id": 1270,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "contracts/interfaces/ISyCrowBarter.sol",
							"file": "./ISyCrowBarter.sol",
							"id": 1125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1270,
							"sourceUnit": 1124,
							"src": "32:29:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 1126,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "63:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISyCrowBarterFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1269,
							"linearizedBaseContracts": [
								1269
							],
							"name": "ISyCrowBarterFactory",
							"nameLocation": "99:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "998044467f4a379a8279fe665f9fc5ef3f28b82d776423fda145b16c346d4d94",
									"id": 1143,
									"name": "SyCrowBarterCreated",
									"nameLocation": "132:19:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"mutability": "mutable",
												"name": "_barterType",
												"nameLocation": "179:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "161:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
													"typeString": "enum ISyCrowBarterType"
												},
												"typeName": {
													"id": 1128,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1127,
														"name": "ISyCrowBarterType",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1073,
														"src": "161:17:5"
													},
													"referencedDeclaration": 1073,
													"src": "161:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
														"typeString": "enum ISyCrowBarterType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": true,
												"mutability": "mutable",
												"name": "_createdBy",
												"nameLocation": "216:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "200:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"indexed": true,
												"mutability": "mutable",
												"name": "_barter",
												"nameLocation": "252:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "236:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"indexed": false,
												"mutability": "mutable",
												"name": "_inToken",
												"nameLocation": "277:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "269:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"mutability": "mutable",
												"name": "_outToken",
												"nameLocation": "303:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "295:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "330:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "322:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"indexed": false,
												"mutability": "mutable",
												"name": "_shouldList",
												"nameLocation": "354:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "349:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "349:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:220:5"
									},
									"src": "126:246:5"
								},
								{
									"anonymous": false,
									"eventSelector": "e82b14c60d75779dccc3527ccba5c54e01cabef05dfd39eec94dec265f4ff7f1",
									"id": 1153,
									"name": "SyCrowTradeByBarter",
									"nameLocation": "383:19:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"indexed": true,
												"mutability": "mutable",
												"name": "_barter",
												"nameLocation": "428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "412:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"indexed": true,
												"mutability": "mutable",
												"name": "_trader",
												"nameLocation": "461:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "445:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"indexed": false,
												"mutability": "mutable",
												"name": "_inAmount",
												"nameLocation": "486:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "478:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"indexed": false,
												"mutability": "mutable",
												"name": "outAmount",
												"nameLocation": "513:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "505:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:126:5"
									},
									"src": "377:152:5"
								},
								{
									"anonymous": false,
									"eventSelector": "8f88efa16eb49629522394f86925a64b5efde928736c868956f1a8e4c7ea8695",
									"id": 1163,
									"name": "SyCrowWithdrawFromBater",
									"nameLocation": "540:23:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "_barter",
												"nameLocation": "589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "573:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "_trader",
												"nameLocation": "622:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "606:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value1",
												"nameLocation": "647:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "639:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value2",
												"nameLocation": "672:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:122:5"
									},
									"src": "534:152:5"
								},
								{
									"functionSelector": "40939a6d",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createBarter",
									"nameLocation": "701:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "_inToken",
												"nameLocation": "731:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "723:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "_outToken",
												"nameLocation": "757:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "749:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "_deposited",
												"nameLocation": "784:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "776:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "_expected",
												"nameLocation": "812:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "804:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "839:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "831:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "_type",
												"nameLocation": "876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "858:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
													"typeString": "enum ISyCrowBarterType"
												},
												"typeName": {
													"id": 1175,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1174,
														"name": "ISyCrowBarterType",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1073,
														"src": "858:17:5"
													},
													"referencedDeclaration": 1073,
													"src": "858:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1073",
														"typeString": "enum ISyCrowBarterType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "_shouldList",
												"nameLocation": "896:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "891:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "891:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "_allowMultiBarter",
												"nameLocation": "922:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "917:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "917:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:232:5"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "barter",
												"nameLocation": "980:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "972:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:16:5"
									},
									"scope": 1269,
									"src": "692:296:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "be931a41",
									"id": 1190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalBarterDeployed",
									"nameLocation": "1004:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1023:2:5"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1044:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1044:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:6:5"
									},
									"scope": 1269,
									"src": "995:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "db8d55f1",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFees",
									"nameLocation": "1065:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1072:2:5"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "baseFee",
												"nameLocation": "1101:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "1093:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "listingFee",
												"nameLocation": "1118:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "1110:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:37:5"
									},
									"scope": 1269,
									"src": "1056:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a42dce80",
									"id": 1202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeCollector",
									"nameLocation": "1145:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "_feeCollector",
												"nameLocation": "1169:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1161:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:23:5"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:0:5"
									},
									"scope": 1269,
									"src": "1136:57:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c415b95c",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeCollector",
									"nameLocation": "1208:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:5"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1246:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:9:5"
									},
									"scope": 1269,
									"src": "1199:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c56559f",
									"id": 1212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allBartersLength",
									"nameLocation": "1270:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:5"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "1312:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:9:5"
									},
									"scope": 1269,
									"src": "1261:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e55ef116",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allBarters",
									"nameLocation": "1336:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1347:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1347:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1346:9:5"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "barter",
												"nameLocation": "1387:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1379:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:16:5"
									},
									"scope": 1269,
									"src": "1327:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e71a76c9",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserBarters",
									"nameLocation": "1410:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1433:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1425:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:21:5"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "barters",
												"nameLocation": "1486:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1469:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1223,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1469:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1224,
													"nodeType": "ArrayTypeName",
													"src": "1469:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:26:5"
									},
									"scope": 1269,
									"src": "1401:94:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b187bd26",
									"id": 1232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPaused",
									"nameLocation": "1510:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:5"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "1544:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1544:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:6:5"
									},
									"scope": 1269,
									"src": "1501:49:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bedb86fb",
									"id": 1237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPause",
									"nameLocation": "1565:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "pause",
												"nameLocation": "1579:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "1574:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1574:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:12:5"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1594:0:5"
									},
									"scope": 1269,
									"src": "1556:39:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ccfd592d",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUsePriceFeeds",
									"nameLocation": "1610:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "_baseFee",
												"nameLocation": "1644:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1636:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1636:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "_listingFee",
												"nameLocation": "1670:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1662:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "enable",
												"nameLocation": "1696:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1691:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1691:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:82:5"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1717:0:5"
									},
									"scope": 1269,
									"src": "1601:117:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f52701b7",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyTradeByBarter",
									"nameLocation": "1733:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "_barter",
												"nameLocation": "1770:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1762:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "_trader",
												"nameLocation": "1795:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1787:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1787:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "_inAmount",
												"nameLocation": "1820:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1812:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "outAmount",
												"nameLocation": "1847:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1839:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1752:110:5"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1871:0:5"
									},
									"scope": 1269,
									"src": "1724:148:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "33796a0e",
									"id": 1268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyWithdrawFromBarter",
									"nameLocation": "1887:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "_barter",
												"nameLocation": "1929:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "1921:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "_trader",
												"nameLocation": "1954:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "1946:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "_value1",
												"nameLocation": "1979:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "1971:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "_value2",
												"nameLocation": "2004:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "1996:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:106:5"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2026:0:5"
									},
									"scope": 1269,
									"src": "1878:149:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1270,
							"src": "89:1940:5",
							"usedErrors": []
						}
					],
					"src": "32:1998:5"
				},
				"id": 5
			},
			"contracts/interfaces/IWETH.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IWETH.sol",
					"exportedSymbols": {
						"IWETH": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1271,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "IWETH",
							"nameLocation": "70:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 1274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "91:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "98:2:6"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "117:0:6"
									},
									"scope": 1280,
									"src": "82:36:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "132:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "141:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "141:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "140:6:6"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:0:6"
									},
									"scope": 1280,
									"src": "123:33:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1281,
							"src": "60:98:6",
							"usedErrors": []
						}
					],
					"src": "33:126:6"
				},
				"id": 6
			},
			"contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							1440
						]
					},
					"id": 1441,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "39:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1440,
							"linearizedBaseContracts": [
								1440
							],
							"name": "TransferHelper",
							"nameLocation": "185:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "275:285:7",
										"statements": [
											{
												"assignments": [
													1292,
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "356:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "351:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1291,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "351:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "378:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "365:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1293,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "365:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1304,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "420:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 1300,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "432:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1301,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "436:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1297,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "397:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "397:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "397:45:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1295,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "386:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "386:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "386:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "350:93:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1306,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "461:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1307,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1294,
																					"src": "473:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "473:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "488:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "473:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1313,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1294,
																					"src": "504:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1315,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "511:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1314,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "511:4:7",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1316,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "510:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1311,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "493:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "493:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "493:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "473:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1319,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "472:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "461:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "520:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "453:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "453:100:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "453:100:7"
											}
										]
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "215:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "235:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "227:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "250:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "242:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "259:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "254:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "254:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "226:39:7"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:0:7"
									},
									"scope": 1440,
									"src": "206:354:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "636:287:7",
										"statements": [
											{
												"assignments": [
													1335,
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1335,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "718:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1367,
														"src": "713:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1334,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "713:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "740:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1367,
														"src": "727:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1336,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "727:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1347,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "782:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 1343,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "794:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "798:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1340,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:45:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1338,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "748:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "712:93:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1349,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "823:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1350,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "835:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "835:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "850:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "835:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1356,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "866:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1358,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "873:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1357,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "873:4:7",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1359,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "872:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1354,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "855:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "855:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "855:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "835:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "834:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "823:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "882:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 1348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "815:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "815:101:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "815:101:7"
											}
										]
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "575:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "596:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "588:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "611:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "603:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "620:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "615:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "615:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:39:7"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:0:7"
									},
									"scope": 1440,
									"src": "566:357:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "1017:310:7",
										"statements": [
											{
												"assignments": [
													1380,
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1111:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "1106:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1379,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1106:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1133:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "1120:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1381,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1120:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1175:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 1388,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1372,
																	"src": "1187:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1389,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "1193:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1390,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "1197:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1385,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1152:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1152:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1152:51:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1383,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "1141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1141:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1141:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1105:99:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1395,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "1222:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1396,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1382,
																					"src": "1234:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1234:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1249:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1234:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1402,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1382,
																					"src": "1265:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1404,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1272:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1403,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1272:4:7",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1405,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1271:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1400,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1254:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1254:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1254:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1234:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1408,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1233:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1222:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1281:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 1394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1214:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1214:106:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "1214:106:7"
											}
										]
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "938:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "963:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "955:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "978:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "970:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "992:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "984:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1001:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "996:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "996:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:53:7"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1017:0:7"
									},
									"scope": 1440,
									"src": "929:398:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "1391:134:7",
										"statements": [
											{
												"assignments": [
													1422,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1407:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1438,
														"src": "1402:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1421,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1402:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1432,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1450:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1440:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1427,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1444:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1440:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1423,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "1419:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1419:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1425,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "1433:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1419:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1401:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1434,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "1471:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a204554485f5452414e534645525f4641494c4544",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1480:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
																"typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
															},
															"value": "TransferHelper: ETH_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
																"typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
															}
														],
														"id": 1433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1463:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1463:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "1463:55:7"
											}
										]
									},
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1342:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1366:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "1358:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1375:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "1370:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1370:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1357:24:7"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1391:0:7"
									},
									"scope": 1440,
									"src": "1333:192:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1441,
							"src": "177:1350:7",
							"usedErrors": []
						}
					],
					"src": "39:1488:7"
				},
				"id": 7
			}
		}
	}
}