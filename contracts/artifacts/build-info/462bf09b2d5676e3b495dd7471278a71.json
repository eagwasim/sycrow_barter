{
	"id": "462bf09b2d5676e3b495dd7471278a71",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SycrowBarter.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./interfaces/ISyCrowBarterFactory.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./libraries/TransferHelper.sol\";\nimport \"./interfaces/IWETH.sol\";\n\ncontract SyCrowBarter is ISyCrowBarter, Ownable, ReentrancyGuard {\n    address public immutable override factory;\n    uint256 public totalTradeAmount;\n    bool public allowMultiBarter;\n\n    uint256 public deadline;\n    ISyCrowBarterType public barterType;\n\n    address private WETH;\n\n    bool public _initialized = false;\n    address private _depositedTokenAddress;\n    address private _expectedTokenAddress;\n    uint256 private _depositedAmount;\n    uint256 private _expectedAmount;\n\n    BaterTrade[] private _trades;\n\n    struct BaterTrade {\n        address _trader;\n        uint256 _amountIn;\n        uint256 _amountOut;\n    }\n\n    modifier checkActive() {\n        require(\n            deadline >= block.timestamp && totalTradeAmount < _expectedAmount,\n            \"SyCrowBarter: INACTIVE\"\n        );\n        _;\n    }\n\n    modifier checkBarterType(ISyCrowBarterType _barterType) {\n        require(_barterType == barterType, \"SyCrowBarter: INVALID_BARTER_TYPE\");\n        _;\n    }\n\n    modifier checkInActive() {\n        require(\n            deadline < block.timestamp || totalTradeAmount >= _expectedAmount,\n            \"SyCrowBarter: ACTIVE\"\n        );\n        _;\n    }\n\n    modifier initialized() {\n        require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\");\n        _;\n    }\n\n    modifier checkPaused() {\n        ISyCrowBarterFactory isycrFactory = ISyCrowBarterFactory(factory);\n        require(!isycrFactory.isPaused(), \"SyCrowBarter: Base Contract Paused\");\n        _;\n    }\n\n    constructor() {\n        factory = msg.sender;\n    }\n\n    function initialize(\n        ISyCrowBarterType _barterType,\n        address inToken,\n        address outToken,\n        uint256 amountDeposited,\n        uint256 amountExpected,\n        uint256 _deadline,\n        bool _allowMultiBarter,\n        address _WETH\n    ) external returns (bool) {\n        require(msg.sender == factory, \"SyCrowBarter: FORBIDDEN\");\n\n        require(!_initialized, \"SyCrowBarter: ALREADY_INITIALIZED\");\n        require(_deadline >= block.timestamp, \"SyCrowBarter: PAST_DEADLINE\");\n\n        require(\n            IERC20(inToken).balanceOf(address(this)) >= amountDeposited,\n            \"SyCrowBarter: INSUFFICIENT_DEPOSIT\"\n        );\n\n        deadline = _deadline;\n\n        _depositedTokenAddress = inToken;\n        _expectedTokenAddress = outToken;\n\n        _depositedAmount = amountDeposited;\n        _expectedAmount = amountExpected;\n\n        barterType = _barterType;\n\n        allowMultiBarter = _allowMultiBarter;\n\n        WETH = _WETH;\n\n        _initialized = true;\n\n        return _initialized;\n    }\n\n    function getAmounts()\n        external\n        view\n        override\n        initialized\n        returns (uint256, uint256)\n    {\n        return (_depositedAmount, _expectedAmount);\n    }\n\n    function getTokens()\n        external\n        view\n        override\n        initialized\n        returns (address, address)\n    {\n        return (_depositedTokenAddress, _expectedTokenAddress);\n    }\n\n    function getTrades()\n        external\n        view\n        override\n        initialized\n        returns (\n            address[] memory,\n            uint256[] memory,\n            uint256[] memory\n        )\n    {\n        address[] memory addresses = new address[](_trades.length);\n        uint256[] memory amountsIn = new uint256[](_trades.length);\n        uint256[] memory amountsOut = new uint256[](_trades.length);\n\n        for (uint256 i = 0; i < _trades.length; i++) {\n            addresses[i] = _trades[i]._trader;\n            amountsIn[i] = _trades[i]._amountIn;\n            amountsOut[i] = _trades[i]._amountOut;\n        }\n\n        return (addresses, amountsIn, amountsOut);\n    }\n\n    function tradeTokenForToken(uint256 inAmount)\n        external\n        override\n        checkActive\n        initialized\n        checkPaused\n        checkBarterType(ISyCrowBarterType.TOKEN_FOR_TOKEN)\n        nonReentrant\n    {\n        if (!allowMultiBarter) {\n            require(\n                inAmount >= _expectedAmount,\n                \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\"\n            );\n        }\n        _tradeTokenForToken(inAmount);\n    }\n\n    function tradeTokenForEth(uint256 inAmount)\n        external\n        override\n        checkActive\n        initialized\n        checkPaused\n        checkBarterType(ISyCrowBarterType.ETH_FOR_TOKEN)\n        nonReentrant\n    {\n        if (!allowMultiBarter) {\n            require(\n                inAmount >= _expectedAmount,\n                \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\"\n            );\n        }\n        _tradeTokenForEth(inAmount);\n    }\n\n    function tradeEthForToken(uint256 inAmount)\n        external\n        payable\n        override\n        checkActive\n        initialized\n        checkPaused\n        checkBarterType(ISyCrowBarterType.TOKEN_FOR_ETH)\n        nonReentrant\n    {\n        if (!allowMultiBarter) {\n            require(\n                msg.value >= _expectedAmount,\n                \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\"\n            );\n        }\n        _tradeEthForToken(inAmount);\n    }\n\n    function _tradeTokenForToken(uint256 inAmount) internal {\n        require(\n            IERC20(_expectedTokenAddress).balanceOf(msg.sender) >= inAmount,\n            \"SyCrowBarter: INSUFFICIENT_BALANCE\"\n        );\n\n        uint256 outAmount = getTradeOutAmount(inAmount);\n\n        require(\n            IERC20(_depositedTokenAddress).balanceOf(address(this)) >=\n                outAmount,\n            \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\"\n        );\n\n        TransferHelper.safeTransferFrom(\n            _expectedTokenAddress,\n            msg.sender,\n            address(this),\n            inAmount\n        );\n        TransferHelper.safeTransfer(\n            _depositedTokenAddress,\n            msg.sender,\n            outAmount\n        );\n\n        _trades.push(BaterTrade(msg.sender, inAmount, outAmount));\n\n        totalTradeAmount = totalTradeAmount + inAmount;\n\n        ISyCrowBarterFactory sycrFactory = ISyCrowBarterFactory(factory);\n\n        sycrFactory.notifyTradeByBarter(\n            address(this),\n            msg.sender,\n            inAmount,\n            outAmount\n        );\n    }\n\n    function _tradeTokenForEth(uint256 inAmount) internal {\n        require(\n            IERC20(_expectedTokenAddress).balanceOf(msg.sender) >= inAmount,\n            \"SyCrowBarter: INSUFFICIENT_BALANCE\"\n        );\n\n        uint256 outAmount = getTradeOutAmount(inAmount);\n\n        IERC20 _wethErc20 = IERC20(WETH);\n\n        require(\n            _wethErc20.balanceOf(address(this)) >= outAmount,\n            \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\"\n        );\n\n        TransferHelper.safeTransferFrom(\n            _expectedTokenAddress,\n            msg.sender,\n            address(this),\n            inAmount\n        );\n\n        IWETH(WETH).withdraw(outAmount);\n\n        TransferHelper.safeTransferETH(msg.sender, outAmount);\n\n        _trades.push(BaterTrade(msg.sender, inAmount, outAmount));\n\n        totalTradeAmount = totalTradeAmount + inAmount;\n\n        ISyCrowBarterFactory sycrFactory = ISyCrowBarterFactory(factory);\n\n        sycrFactory.notifyTradeByBarter(\n            address(this),\n            msg.sender,\n            inAmount,\n            outAmount\n        );\n    }\n\n    function _tradeEthForToken(uint256 inAmount) internal {\n        require(inAmount == msg.value, \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\");\n\n        uint256 outAmount = getTradeOutAmount(inAmount);\n\n        require(\n            IERC20(_depositedTokenAddress).balanceOf(address(this)) >=\n                outAmount,\n            \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\"\n        );\n\n        IWETH(WETH).deposit{value: inAmount}();\n\n        TransferHelper.safeTransfer(\n            _depositedTokenAddress,\n            msg.sender,\n            outAmount\n        );\n\n        _trades.push(BaterTrade(msg.sender, inAmount, outAmount));\n        totalTradeAmount = totalTradeAmount + inAmount;\n\n        ISyCrowBarterFactory sycrFactory = ISyCrowBarterFactory(factory);\n        sycrFactory.notifyTradeByBarter(\n            address(this),\n            msg.sender,\n            inAmount,\n            outAmount\n        );\n    }\n\n    function withdraw() external override checkInActive initialized onlyOwner {\n        IERC20 _wethErc20 = IERC20(WETH);\n\n        uint256 ethBalance = _wethErc20.balanceOf(address(this));\n\n        if (ethBalance > 0) {\n            IWETH(WETH).withdraw(ethBalance);\n            TransferHelper.safeTransferETH(msg.sender, ethBalance);\n        }\n\n        uint256 expectedTokenBalance = IERC20(_expectedTokenAddress).balanceOf(\n            address(this)\n        );\n\n        if (expectedTokenBalance > 0) {\n            TransferHelper.safeTransfer(\n                _expectedTokenAddress,\n                msg.sender,\n                expectedTokenBalance\n            );\n        }\n\n        uint256 depositedTokenBalance = IERC20(_depositedTokenAddress)\n            .balanceOf(address(this));\n\n        if (depositedTokenBalance > 0) {\n            TransferHelper.safeTransfer(\n                _depositedTokenAddress,\n                msg.sender,\n                depositedTokenBalance\n            );\n        }\n        uint256 value1 = 0;\n        uint256 value2 = 0;\n\n        if (barterType == ISyCrowBarterType.ETH_FOR_TOKEN) {\n            value1 = ethBalance;\n            value2 = expectedTokenBalance;\n        } else if (barterType == ISyCrowBarterType.TOKEN_FOR_TOKEN) {\n            value1 = depositedTokenBalance;\n            value2 = expectedTokenBalance;\n        } else {\n            value1 = depositedTokenBalance;\n            value2 = ethBalance;\n        }\n\n        ISyCrowBarterFactory sycrFactory = ISyCrowBarterFactory(factory);\n\n        sycrFactory.notifyWithdrawFromBarter(\n            address(this),\n            msg.sender,\n            value1,\n            value2\n        );\n    }\n\n    function getTradeOutAmount(uint256 amount) public view returns (uint256) {\n        return (amount * _depositedAmount) / _expectedAmount;\n    }\n\n    // Function to receive Ether. msg.data must be empty\n    receive() external payable {}\n\n    // Fallback function is called when msg.data is not empty\n    fallback() external payable {}\n}\n"
			},
			"contracts/interfaces/IWETH.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity = 0.8.13;\n\ninterface IWETH {\n    function deposit() external payable;\n    function withdraw(uint) external;\n}\n"
			},
			"contracts/libraries/TransferHelper.sol": {
				"content": "  // SPDX-License-Identifier: GPL-3.0\n\npragma solidity = 0.8.13;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\n    }\n\n    function safeTransfer(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\n    }\n\n    function safeTransferFrom(address token, address from, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\n    }\n\n    function safeTransferETH(address to, uint value) internal {\n        (bool success,) = to.call{value:value}(new bytes(0));\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\n    }\n}"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.13;\n\ninterface IERC20 {\n    function balanceOf(address owner) external view returns (uint256);\n}\n"
			},
			"contracts/interfaces/ISyCrowBarterFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\nimport \"./ISyCrowBarter.sol\";\n\npragma solidity =0.8.13;\n\ninterface ISyCrowBarterFactory {\n    event SyCrowBarterCreated(\n        ISyCrowBarterType _barterType,\n        address indexed _createdBy,\n        address indexed _barter,\n        address _inToken,\n        address _outToken,\n        uint256 _deadline\n    );\n    event SyCrowTradeByBarter(\n        address indexed _barter,\n        address indexed _trader,\n        uint256 _inAmount,\n        uint256 outAmount\n    );\n    event SyCrowWithdrawFromBater(\n        address indexed _barter,\n        address indexed _trader,\n        uint256 _value1,\n        uint256 _value2\n    );\n\n    function createBarter(\n        address _inToken,\n        address _outToken,\n        uint256 _deposited,\n        uint256 _expected,\n        uint256 _deadline,\n        ISyCrowBarterType _type,\n        bool _allowMultiBarter\n    ) external payable returns (address barter);\n\n    function totalBarterDeployed() external returns (uint256);\n\n    function getFee() external returns (uint256);\n\n    function setFeeCollector(address _feeCollector) external;\n\n    function feeCollector() external view returns (address);\n\n    function allBartersLength() external view returns (uint256);\n\n    function allBarters(uint256) external view returns (address barter);\n\n    function getUserBarters(address userAddress)\n        external\n        view\n        returns (address[] memory barters);\n\n    function getUserBartersLength(address userAddress)\n        external\n        view\n        returns (uint256);\n\n    function getUserBarter(address userAddress, uint256 index)\n        external\n        view\n        returns (address);\n\n    function isPaused() external view returns (bool);\n\n    function setPause(bool pause) external;\n\n    function setUsePriceFeeds(\n        uint256 _baseFee,\n        bool enable\n    ) external;\n\n    function notifyTradeByBarter(\n        address _barter,\n        address _trader,\n        uint256 _inAmount,\n        uint256 outAmount\n    ) external;\n\n    function notifyWithdrawFromBarter(\n        address _barter,\n        address _trader,\n        uint256 _value1,\n        uint256 _value2\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/interfaces/ISyCrowBarter.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.13;\n\nenum ISyCrowBarterType {\n    ETH_FOR_TOKEN,\n    TOKEN_FOR_ETH,\n    TOKEN_FOR_TOKEN\n}\n\ninterface ISyCrowBarter {\n    function factory() external view returns (address);\n\n    function getAmounts() external view returns (uint256, uint256);\n\n    function getTokens() external view returns (address, address);\n\n    function getTrades()\n        external\n        view\n        returns (address[] memory, uint256[] memory, uint256[] memory);\n\n    function tradeTokenForToken(uint256 inAmount) external;\n\n    function tradeTokenForEth(uint256 inAmount) external;\n\n    function tradeEthForToken(uint256 inAmount) external payable;\n\n    function withdraw() external;\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 115,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SycrowBarter.sol": {
				"SyCrowBarter": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "_initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allowMultiBarter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "barterType",
							"outputs": [
								{
									"internalType": "enum ISyCrowBarterType",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deadline",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getTradeOutAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrades",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ISyCrowBarterType",
									"name": "_barterType",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "inToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "outToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountDeposited",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountExpected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_allowMultiBarter",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "_WETH",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTradeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeEthForToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeTokenForEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeTokenForToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SycrowBarter.sol\":332:10512  contract SyCrowBarter is ISyCrowBarter, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/SycrowBarter.sol\":620:652  bool public _initialized = false */\n  0x05\n  dup1\n  sload\n  not(shl(0xa8, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/SycrowBarter.sol\":1824:1875  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/SycrowBarter.sol\":1858:1868  msg.sender */\n  caller\n    /* \"contracts/SycrowBarter.sol\":1848:1868  factory = msg.sender */\n  0x80\n  mstore\n    /* \"contracts/SycrowBarter.sol\":332:10512  contract SyCrowBarter is ISyCrowBarter, Ownable, ReentrancyGuard {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/SycrowBarter.sol\":332:10512  contract SyCrowBarter is ISyCrowBarter, Ownable, ReentrancyGuard {... */\ntag_12:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x9d6b7fbd0ded42ab14e47300e428df3f38e4fbb3a7f790d898a87bff4f86606b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SycrowBarter.sol\":332:10512  contract SyCrowBarter is ISyCrowBarter, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xc45a0155\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc6ea7038\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdab5a8df\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe43372e9\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      stop\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x89523742\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xaa6ca808\n      eq\n      tag_15\n      jumpi\n      stop\n    tag_21:\n      dup1\n      0x3ccfd60b\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3d370b4e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40a6f1ab\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4341f920\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5f5780e5\n      eq\n      tag_11\n      jumpi\n      stop\n    tag_23:\n      dup1\n      0x0d182605\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29dcb0cf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2ffc6887\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3072cf60\n      eq\n      tag_6\n      jumpi\n      stop\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"contracts/SycrowBarter.sol\":4464:4912  function tradeTokenForEth(uint256 inAmount)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_2\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":522:545  uint256 public deadline */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      sload(0x04)\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/SycrowBarter.sol\":522:545  uint256 public deadline */\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SycrowBarter.sol\":4004:4458  function tradeTokenForToken(uint256 inAmount)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_2\n      tag_40\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":620:652  bool public _initialized = false */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      sload(0x05)\n      tag_43\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":546:560   */\n      swap1\n      iszero\n        /* \"#utility.yul\":539:561   */\n      iszero\n        /* \"#utility.yul\":521:562   */\n      dup2\n      mstore\n        /* \"#utility.yul\":509:511   */\n      0x20\n        /* \"#utility.yul\":494:512   */\n      add\n        /* \"contracts/SycrowBarter.sol\":620:652  bool public _initialized = false */\n      tag_36\n        /* \"#utility.yul\":381:568   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":8495:10172  function withdraw() external override checkInActive initialized onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_2\n      tag_49\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":2915:3102  function getAmounts()... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":747:772   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":803:805   */\n      0x20\n        /* \"#utility.yul\":788:806   */\n      dup4\n      add\n        /* \"#utility.yul\":781:815   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":720:738   */\n      add\n        /* \"contracts/SycrowBarter.sol\":2915:3102  function getAmounts()... */\n      tag_36\n        /* \"#utility.yul\":573:821   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":450:481  uint256 public totalTradeAmount */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_34\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/SycrowBarter.sol\":4918:5383  function tradeEthForToken(uint256 inAmount)... */\n    tag_10:\n      tag_2\n      tag_60\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":1881:2909  function initialize(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_43\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_2\n      tag_70\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":551:586  ISyCrowBarterType public barterType */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      sload(0x05)\n      tag_72\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_72:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_77:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2627:2659   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2609:2660   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2597:2599   */\n      0x20\n        /* \"#utility.yul\":2582:2600   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_36\n        /* \"#utility.yul\":2463:2666   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":3108:3306  function getTokens()... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2901:2916   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":2883:2917   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2953:2968   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2948:2950   */\n      0x20\n        /* \"#utility.yul\":2933:2951   */\n      dup4\n      add\n        /* \"#utility.yul\":2926:2969   */\n      mstore\n        /* \"#utility.yul\":2818:2836   */\n      add\n        /* \"contracts/SycrowBarter.sol\":3108:3306  function getTokens()... */\n      tag_36\n        /* \"#utility.yul\":2671:2975   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":403:444  address public immutable override factory */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_77\n      immutable(\"0x9d6b7fbd0ded42ab14e47300e428df3f38e4fbb3a7f790d898a87bff4f86606b\")\n      dup2\n      jump\n        /* \"contracts/SycrowBarter.sol\":487:515  bool public allowMultiBarter */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      sload(0x03)\n      tag_43\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/SycrowBarter.sol\":10178:10320  function getTradeOutAmount(uint256 amount) public view returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_34\n      tag_96\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":3312:3998  function getTrades()... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_36\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_2\n      tag_106\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":4464:4912  function tradeTokenForEth(uint256 inAmount)... */\n    tag_32:\n        /* \"contracts/SycrowBarter.sol\":1033:1048  block.timestamp */\n      timestamp\n        /* \"contracts/SycrowBarter.sol\":1021:1029  deadline */\n      sload(0x04)\n        /* \"contracts/SycrowBarter.sol\":1021:1048  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1021:1086  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n      dup1\n      iszero\n      tag_110\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":1071:1086  _expectedAmount */\n      sload(0x09)\n        /* \"contracts/SycrowBarter.sol\":1052:1068  totalTradeAmount */\n      sload(0x02)\n        /* \"contracts/SycrowBarter.sol\":1052:1086  totalTradeAmount < _expectedAmount */\n      lt\n        /* \"contracts/SycrowBarter.sol\":1021:1086  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n    tag_110:\n        /* \"contracts/SycrowBarter.sol\":1000:1134  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/SycrowBarter.sol\":1551:1563  _initialized */\n      sload(0x05)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1543:1597  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_117\n      jump\t// in\n    tag_115:\n        /* \"contracts/SycrowBarter.sol\":1654:1687  ISyCrowBarterFactory isycrFactory */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":1711:1718  factory */\n      immutable(\"0x9d6b7fbd0ded42ab14e47300e428df3f38e4fbb3a7f790d898a87bff4f86606b\")\n        /* \"contracts/SycrowBarter.sol\":1654:1719  ISyCrowBarterFactory isycrFactory = ISyCrowBarterFactory(factory) */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":1738:1750  isycrFactory */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":1738:1759  isycrFactory.isPaused */\n      and\n      0xb187bd26\n        /* \"contracts/SycrowBarter.sol\":1738:1761  isycrFactory.isPaused() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"contracts/SycrowBarter.sol\":1737:1761  !isycrFactory.isPaused() */\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1729:1800  require(!isycrFactory.isPaused(), \"SyCrowBarter: Base Contract Paused\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_125\n      jump\t// in\n    tag_123:\n        /* \"contracts/SycrowBarter.sol\":1247:1257  barterType */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":4626:4657  ISyCrowBarterType.ETH_FOR_TOKEN */\n      0x00\n      swap1\n        /* \"contracts/SycrowBarter.sol\":1247:1257  barterType */\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1232:1257  _barterType == barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_128\n      jumpi\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/SycrowBarter.sol\":1232:1243  _barterType */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":1232:1257  _barterType == barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_131\n      jumpi\n      tag_131\n      tag_129\n      jump\t// in\n    tag_131:\n      eq\n        /* \"contracts/SycrowBarter.sol\":1224:1295  require(_barterType == barterType, \"SyCrowBarter: INVALID_BARTER_TYPE\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_134\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_138\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/SycrowBarter.sol\":4699:4715  allowMultiBarter */\n      and(0xff, sload(0x03))\n        /* \"contracts/SycrowBarter.sol\":4694:4869  if (!allowMultiBarter) {... */\n      tag_141\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":4768:4783  _expectedAmount */\n      sload(0x09)\n        /* \"contracts/SycrowBarter.sol\":4756:4764  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":4756:4783  inAmount >= _expectedAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":4731:4858  require(... */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_143\n      jump\t// in\n    tag_141:\n        /* \"contracts/SycrowBarter.sol\":4878:4905  _tradeTokenForEth(inAmount) */\n      tag_144\n        /* \"contracts/SycrowBarter.sol\":4896:4904  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":4878:4895  _tradeTokenForEth */\n      tag_145\n        /* \"contracts/SycrowBarter.sol\":4878:4905  _tradeTokenForEth(inAmount) */\n      jump\t// in\n    tag_144:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n        /* \"contracts/SycrowBarter.sol\":4464:4912  function tradeTokenForEth(uint256 inAmount)... */\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":4004:4458  function tradeTokenForToken(uint256 inAmount)... */\n    tag_41:\n        /* \"contracts/SycrowBarter.sol\":1033:1048  block.timestamp */\n      timestamp\n        /* \"contracts/SycrowBarter.sol\":1021:1029  deadline */\n      sload(0x04)\n        /* \"contracts/SycrowBarter.sol\":1021:1048  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1021:1086  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n      dup1\n      iszero\n      tag_147\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":1071:1086  _expectedAmount */\n      sload(0x09)\n        /* \"contracts/SycrowBarter.sol\":1052:1068  totalTradeAmount */\n      sload(0x02)\n        /* \"contracts/SycrowBarter.sol\":1052:1086  totalTradeAmount < _expectedAmount */\n      lt\n        /* \"contracts/SycrowBarter.sol\":1021:1086  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n    tag_147:\n        /* \"contracts/SycrowBarter.sol\":1000:1134  require(... */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_148:\n        /* \"contracts/SycrowBarter.sol\":1551:1563  _initialized */\n      sload(0x05)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1543:1597  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_117\n      jump\t// in\n    tag_151:\n        /* \"contracts/SycrowBarter.sol\":1654:1687  ISyCrowBarterFactory isycrFactory */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":1711:1718  factory */\n      immutable(\"0x9d6b7fbd0ded42ab14e47300e428df3f38e4fbb3a7f790d898a87bff4f86606b\")\n        /* \"contracts/SycrowBarter.sol\":1654:1719  ISyCrowBarterFactory isycrFactory = ISyCrowBarterFactory(factory) */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":1738:1750  isycrFactory */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":1738:1759  isycrFactory.isPaused */\n      and\n      0xb187bd26\n        /* \"contracts/SycrowBarter.sol\":1738:1761  isycrFactory.isPaused() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_156:\n        /* \"contracts/SycrowBarter.sol\":1737:1761  !isycrFactory.isPaused() */\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1729:1800  require(!isycrFactory.isPaused(), \"SyCrowBarter: Base Contract Paused\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_125\n      jump\t// in\n    tag_157:\n        /* \"contracts/SycrowBarter.sol\":1247:1257  barterType */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":4168:4201  ISyCrowBarterType.TOKEN_FOR_TOKEN */\n      0x02\n      swap1\n        /* \"contracts/SycrowBarter.sol\":1247:1257  barterType */\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1232:1257  _barterType == barterType */\n      dup2\n      dup2\n      gt\n      iszero\n      tag_161\n      jumpi\n      tag_161\n      tag_129\n      jump\t// in\n    tag_161:\n        /* \"contracts/SycrowBarter.sol\":1232:1243  _barterType */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":1232:1257  _barterType == barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_163\n      jumpi\n      tag_163\n      tag_129\n      jump\t// in\n    tag_163:\n      eq\n        /* \"contracts/SycrowBarter.sol\":1224:1295  require(_barterType == barterType, \"SyCrowBarter: INVALID_BARTER_TYPE\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_134\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_138\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/SycrowBarter.sol\":4243:4259  allowMultiBarter */\n      and(0xff, sload(0x03))\n        /* \"contracts/SycrowBarter.sol\":4238:4413  if (!allowMultiBarter) {... */\n      tag_171\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":4312:4327  _expectedAmount */\n      sload(0x09)\n        /* \"contracts/SycrowBarter.sol\":4300:4308  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":4300:4327  inAmount >= _expectedAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":4275:4402  require(... */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_143\n      jump\t// in\n    tag_171:\n        /* \"contracts/SycrowBarter.sol\":4422:4451  _tradeTokenForToken(inAmount) */\n      tag_144\n        /* \"contracts/SycrowBarter.sol\":4442:4450  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":4422:4441  _tradeTokenForToken */\n      tag_174\n        /* \"contracts/SycrowBarter.sol\":4422:4451  _tradeTokenForToken(inAmount) */\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":8495:10172  function withdraw() external override checkInActive initialized onlyOwner {... */\n    tag_49:\n        /* \"contracts/SycrowBarter.sol\":1386:1401  block.timestamp */\n      timestamp\n        /* \"contracts/SycrowBarter.sol\":1375:1383  deadline */\n      sload(0x04)\n        /* \"contracts/SycrowBarter.sol\":1375:1401  deadline < block.timestamp */\n      lt\n        /* \"contracts/SycrowBarter.sol\":1375:1440  deadline < block.timestamp || totalTradeAmount >= _expectedAmount */\n      dup1\n      tag_176\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":1425:1440  _expectedAmount */\n      sload(0x09)\n        /* \"contracts/SycrowBarter.sol\":1405:1421  totalTradeAmount */\n      sload(0x02)\n        /* \"contracts/SycrowBarter.sol\":1405:1440  totalTradeAmount >= _expectedAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1375:1440  deadline < block.timestamp || totalTradeAmount >= _expectedAmount */\n    tag_176:\n        /* \"contracts/SycrowBarter.sol\":1354:1486  require(... */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7389:7391   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":1354:1486  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7371:7392   */\n      mstore\n        /* \"#utility.yul\":7428:7430   */\n      0x14\n        /* \"#utility.yul\":7408:7426   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7401:7431   */\n      mstore\n      shl(0x60, 0x537943726f774261727465723a20414354495645)\n        /* \"#utility.yul\":7447:7465   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7440:7490   */\n      mstore\n        /* \"#utility.yul\":7507:7525   */\n      0x64\n      add\n        /* \"contracts/SycrowBarter.sol\":1354:1486  require(... */\n      tag_112\n        /* \"#utility.yul\":7187:7531   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":1354:1486  require(... */\n    tag_177:\n        /* \"contracts/SycrowBarter.sol\":1551:1563  _initialized */\n      sload(0x05)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1543:1597  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_117\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_189\n      jump\t// in\n    tag_187:\n        /* \"contracts/SycrowBarter.sol\":8606:8610  WETH */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":8643:8678  _wethErc20.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8672:8676  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":8643:8678  _wethErc20.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8606:8610  WETH */\n      0x0100\n      swap1\n      swap2\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8579:8596  IERC20 _wethErc20 */\n      0x00\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8606:8610  WETH */\n      dup3\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8643:8663  _wethErc20.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":8643:8678  _wethErc20.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"contracts/SycrowBarter.sol\":8622:8678  uint256 ethBalance = _wethErc20.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":8693:8707  ethBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/SycrowBarter.sol\":8689:8834  if (ethBalance > 0) {... */\n      tag_201\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":8729:8733  WETH */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":8723:8755  IWETH(WETH).withdraw(ethBalance) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":345:370   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8729:8733  WETH */\n      0x0100\n      swap1\n      swap2\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8723:8743  IWETH(WETH).withdraw */\n      0x2e1a7d4d\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":8723:8755  IWETH(WETH).withdraw(ethBalance) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":8769:8823  TransferHelper.safeTransferETH(msg.sender, ethBalance) */\n      tag_201\n        /* \"contracts/SycrowBarter.sol\":8800:8810  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":8812:8822  ethBalance */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":8769:8799  TransferHelper.safeTransferETH */\n      tag_202\n        /* \"contracts/SycrowBarter.sol\":8769:8823  TransferHelper.safeTransferETH(msg.sender, ethBalance) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/SycrowBarter.sol\":8882:8903  _expectedTokenAddress */\n      sload(0x07)\n        /* \"contracts/SycrowBarter.sol\":8875:8951  IERC20(_expectedTokenAddress).balanceOf(... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8936:8940  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":8875:8951  IERC20(_expectedTokenAddress).balanceOf(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":8844:8872  uint256 expectedTokenBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":8882:8903  _expectedTokenAddress */\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":8875:8914  IERC20(_expectedTokenAddress).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":8875:8951  IERC20(_expectedTokenAddress).balanceOf(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_206:\n        /* \"contracts/SycrowBarter.sol\":8844:8951  uint256 expectedTokenBalance = IERC20(_expectedTokenAddress).balanceOf(... */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":8966:8990  expectedTokenBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/SycrowBarter.sol\":8962:9163  if (expectedTokenBalance > 0) {... */\n      tag_208\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":9051:9072  _expectedTokenAddress */\n      sload(0x07)\n        /* \"contracts/SycrowBarter.sol\":9006:9152  TransferHelper.safeTransfer(... */\n      tag_208\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":9051:9072  _expectedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":9090:9100  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":9118:9138  expectedTokenBalance */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":9006:9033  TransferHelper.safeTransfer */\n      tag_209\n        /* \"contracts/SycrowBarter.sol\":9006:9152  TransferHelper.safeTransfer(... */\n      jump\t// in\n    tag_208:\n        /* \"contracts/SycrowBarter.sol\":9212:9234  _depositedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":9205:9273  IERC20(_depositedTokenAddress)... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":9267:9271  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":9205:9273  IERC20(_depositedTokenAddress)... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":9173:9202  uint256 depositedTokenBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":9212:9234  _depositedTokenAddress */\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":9205:9258  IERC20(_depositedTokenAddress)... */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":9205:9273  IERC20(_depositedTokenAddress)... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_213\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_213:\n        /* \"contracts/SycrowBarter.sol\":9173:9273  uint256 depositedTokenBalance = IERC20(_depositedTokenAddress)... */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":9288:9313  depositedTokenBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/SycrowBarter.sol\":9284:9488  if (depositedTokenBalance > 0) {... */\n      tag_215\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":9374:9396  _depositedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":9329:9477  TransferHelper.safeTransfer(... */\n      tag_215\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":9374:9396  _depositedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":9414:9424  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":9442:9463  depositedTokenBalance */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":9329:9356  TransferHelper.safeTransfer */\n      tag_209\n        /* \"contracts/SycrowBarter.sol\":9329:9477  TransferHelper.safeTransfer(... */\n      jump\t// in\n    tag_215:\n        /* \"contracts/SycrowBarter.sol\":9497:9511  uint256 value1 */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/SycrowBarter.sol\":9558:9568  barterType */\n      and(0xff, sload(0x05))\n        /* \"contracts/SycrowBarter.sol\":9558:9603  barterType == ISyCrowBarterType.ETH_FOR_TOKEN */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_219\n      tag_129\n      jump\t// in\n    tag_219:\n      sub\n        /* \"contracts/SycrowBarter.sol\":9554:9943  if (barterType == ISyCrowBarterType.ETH_FOR_TOKEN) {... */\n      tag_220\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":9628:9638  ethBalance */\n      dup4\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":9661:9681  expectedTokenBalance */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":9554:9943  if (barterType == ISyCrowBarterType.ETH_FOR_TOKEN) {... */\n      jump(tag_227)\n    tag_220:\n        /* \"contracts/SycrowBarter.sol\":9716:9749  ISyCrowBarterType.TOKEN_FOR_TOKEN */\n      0x02\n        /* \"contracts/SycrowBarter.sol\":9702:9712  barterType */\n      and(0xff, sload(0x05))\n        /* \"contracts/SycrowBarter.sol\":9702:9749  barterType == ISyCrowBarterType.TOKEN_FOR_TOKEN */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_225\n      tag_129\n      jump\t// in\n    tag_225:\n      sub\n        /* \"contracts/SycrowBarter.sol\":9698:9943  if (barterType == ISyCrowBarterType.TOKEN_FOR_TOKEN) {... */\n      tag_226\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":9774:9795  depositedTokenBalance */\n      dup2\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":9818:9838  expectedTokenBalance */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":9698:9943  if (barterType == ISyCrowBarterType.TOKEN_FOR_TOKEN) {... */\n      jump(tag_227)\n    tag_226:\n      pop\n        /* \"contracts/SycrowBarter.sol\":9878:9899  depositedTokenBalance */\n      dup2\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":9922:9932  ethBalance */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":9698:9943  if (barterType == ISyCrowBarterType.TOKEN_FOR_TOKEN) {... */\n    tag_227:\n        /* \"contracts/SycrowBarter.sol\":10028:10165  sycrFactory.notifyWithdrawFromBarter(... */\n      mload(0x40)\n      shl(0xe1, 0x19bcb507)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":10009:10016  factory */\n      immutable(\"0x9d6b7fbd0ded42ab14e47300e428df3f38e4fbb3a7f790d898a87bff4f86606b\")\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":10028:10064  sycrFactory.notifyWithdrawFromBarter */\n      dup3\n      and\n      swap1\n      0x33796a0e\n      swap1\n        /* \"contracts/SycrowBarter.sol\":10028:10165  sycrFactory.notifyWithdrawFromBarter(... */\n      tag_228\n      swap1\n        /* \"contracts/SycrowBarter.sol\":10086:10090  this */\n      address\n      swap1\n        /* \"contracts/SycrowBarter.sol\":10105:10115  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SycrowBarter.sol\":10129:10135  value1 */\n      dup9\n      swap1\n        /* \"contracts/SycrowBarter.sol\":10149:10155  value2 */\n      dup9\n      swap1\n        /* \"contracts/SycrowBarter.sol\":10028:10165  sycrFactory.notifyWithdrawFromBarter(... */\n      0x04\n      add\n      tag_229\n      jump\t// in\n    tag_228:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":8569:10172  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":8495:10172  function withdraw() external override checkInActive initialized onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":2915:3102  function getAmounts()... */\n    tag_52:\n        /* \"contracts/SycrowBarter.sol\":1551:1563  _initialized */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":3021:3028  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n      shl(0xa8, 0x01)\n        /* \"contracts/SycrowBarter.sol\":1551:1563  _initialized */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1543:1597  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_117\n      jump\t// in\n    tag_234:\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":3061:3077  _depositedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":3079:3094  _expectedAmount */\n      sload(0x09)\n        /* \"contracts/SycrowBarter.sol\":2915:3102  function getAmounts()... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":4918:5383  function tradeEthForToken(uint256 inAmount)... */\n    tag_61:\n        /* \"contracts/SycrowBarter.sol\":1033:1048  block.timestamp */\n      timestamp\n        /* \"contracts/SycrowBarter.sol\":1021:1029  deadline */\n      sload(0x04)\n        /* \"contracts/SycrowBarter.sol\":1021:1048  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1021:1086  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n      dup1\n      iszero\n      tag_238\n      jumpi\n      pop\n        /* \"contracts/SycrowBarter.sol\":1071:1086  _expectedAmount */\n      sload(0x09)\n        /* \"contracts/SycrowBarter.sol\":1052:1068  totalTradeAmount */\n      sload(0x02)\n        /* \"contracts/SycrowBarter.sol\":1052:1086  totalTradeAmount < _expectedAmount */\n      lt\n        /* \"contracts/SycrowBarter.sol\":1021:1086  deadline >= block.timestamp && totalTradeAmount < _expectedAmount */\n    tag_238:\n        /* \"contracts/SycrowBarter.sol\":1000:1134  require(... */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_239:\n        /* \"contracts/SycrowBarter.sol\":1551:1563  _initialized */\n      sload(0x05)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1543:1597  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_117\n      jump\t// in\n    tag_242:\n        /* \"contracts/SycrowBarter.sol\":1654:1687  ISyCrowBarterFactory isycrFactory */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":1711:1718  factory */\n      immutable(\"0x9d6b7fbd0ded42ab14e47300e428df3f38e4fbb3a7f790d898a87bff4f86606b\")\n        /* \"contracts/SycrowBarter.sol\":1654:1719  ISyCrowBarterFactory isycrFactory = ISyCrowBarterFactory(factory) */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":1738:1750  isycrFactory */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":1738:1759  isycrFactory.isPaused */\n      and\n      0xb187bd26\n        /* \"contracts/SycrowBarter.sol\":1738:1761  isycrFactory.isPaused() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_246\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_247\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_247:\n        /* \"contracts/SycrowBarter.sol\":1737:1761  !isycrFactory.isPaused() */\n      iszero\n        /* \"contracts/SycrowBarter.sol\":1729:1800  require(!isycrFactory.isPaused(), \"SyCrowBarter: Base Contract Paused\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_125\n      jump\t// in\n    tag_248:\n        /* \"contracts/SycrowBarter.sol\":1247:1257  barterType */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":5096:5127  ISyCrowBarterType.TOKEN_FOR_ETH */\n      0x01\n      swap1\n        /* \"contracts/SycrowBarter.sol\":1247:1257  barterType */\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1232:1257  _barterType == barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_252\n      jumpi\n      tag_252\n      tag_129\n      jump\t// in\n    tag_252:\n        /* \"contracts/SycrowBarter.sol\":1232:1243  _barterType */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":1232:1257  _barterType == barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_254\n      jumpi\n      tag_254\n      tag_129\n      jump\t// in\n    tag_254:\n      eq\n        /* \"contracts/SycrowBarter.sol\":1224:1295  require(_barterType == barterType, \"SyCrowBarter: INVALID_BARTER_TYPE\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_134\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_138\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/SycrowBarter.sol\":5169:5185  allowMultiBarter */\n      and(0xff, sload(0x03))\n        /* \"contracts/SycrowBarter.sol\":5164:5340  if (!allowMultiBarter) {... */\n      tag_262\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":5239:5254  _expectedAmount */\n      sload(0x09)\n        /* \"contracts/SycrowBarter.sol\":5226:5235  msg.value */\n      callvalue\n        /* \"contracts/SycrowBarter.sol\":5226:5254  msg.value >= _expectedAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":5201:5329  require(... */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_143\n      jump\t// in\n    tag_262:\n        /* \"contracts/SycrowBarter.sol\":5349:5376  _tradeEthForToken(inAmount) */\n      tag_144\n        /* \"contracts/SycrowBarter.sol\":5367:5375  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":5349:5366  _tradeEthForToken */\n      tag_265\n        /* \"contracts/SycrowBarter.sol\":5349:5376  _tradeEthForToken(inAmount) */\n      jump\t// in\n        /* \"contracts/SycrowBarter.sol\":1881:2909  function initialize(... */\n    tag_66:\n        /* \"contracts/SycrowBarter.sol\":2162:2166  bool */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":2186:2196  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":2200:2207  factory */\n      immutable(\"0x9d6b7fbd0ded42ab14e47300e428df3f38e4fbb3a7f790d898a87bff4f86606b\")\n        /* \"contracts/SycrowBarter.sol\":2186:2207  msg.sender == factory */\n      and\n      eq\n        /* \"contracts/SycrowBarter.sol\":2178:2235  require(msg.sender == factory, \"SyCrowBarter: FORBIDDEN\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8740:8742   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":2178:2235  require(msg.sender == factory, \"SyCrowBarter: FORBIDDEN\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8722:8743   */\n      mstore\n        /* \"#utility.yul\":8779:8781   */\n      0x17\n        /* \"#utility.yul\":8759:8777   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8752:8782   */\n      mstore\n        /* \"#utility.yul\":8818:8843   */\n      0x537943726f774261727465723a20464f5242494444454e000000000000000000\n        /* \"#utility.yul\":8798:8816   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8791:8844   */\n      mstore\n        /* \"#utility.yul\":8861:8879   */\n      0x64\n      add\n        /* \"contracts/SycrowBarter.sol\":2178:2235  require(msg.sender == factory, \"SyCrowBarter: FORBIDDEN\") */\n      tag_112\n        /* \"#utility.yul\":8538:8885   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":2178:2235  require(msg.sender == factory, \"SyCrowBarter: FORBIDDEN\") */\n    tag_267:\n        /* \"contracts/SycrowBarter.sol\":2255:2267  _initialized */\n      sload(0x05)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":2254:2267  !_initialized */\n      iszero\n        /* \"contracts/SycrowBarter.sol\":2246:2305  require(!_initialized, \"SyCrowBarter: ALREADY_INITIALIZED\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9092:9094   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":2246:2305  require(!_initialized, \"SyCrowBarter: ALREADY_INITIALIZED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9074:9095   */\n      mstore\n        /* \"#utility.yul\":9131:9133   */\n      0x21\n        /* \"#utility.yul\":9111:9129   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9104:9134   */\n      mstore\n        /* \"#utility.yul\":9170:9204   */\n      0x537943726f774261727465723a20414c52454144595f494e495449414c495a45\n        /* \"#utility.yul\":9150:9168   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9143:9205   */\n      mstore\n      shl(0xfa, 0x11)\n        /* \"#utility.yul\":9221:9239   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9214:9245   */\n      mstore\n        /* \"#utility.yul\":9262:9281   */\n      0x84\n      add\n        /* \"contracts/SycrowBarter.sol\":2246:2305  require(!_initialized, \"SyCrowBarter: ALREADY_INITIALIZED\") */\n      tag_112\n        /* \"#utility.yul\":8890:9287   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":2246:2305  require(!_initialized, \"SyCrowBarter: ALREADY_INITIALIZED\") */\n    tag_270:\n        /* \"contracts/SycrowBarter.sol\":2336:2351  block.timestamp */\n      timestamp\n        /* \"contracts/SycrowBarter.sol\":2323:2332  _deadline */\n      dup5\n        /* \"contracts/SycrowBarter.sol\":2323:2351  _deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":2315:2383  require(_deadline >= block.timestamp, \"SyCrowBarter: PAST_DEADLINE\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9494:9496   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":2315:2383  require(_deadline >= block.timestamp, \"SyCrowBarter: PAST_DEADLINE\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9476:9497   */\n      mstore\n        /* \"#utility.yul\":9533:9535   */\n      0x1b\n        /* \"#utility.yul\":9513:9531   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9506:9536   */\n      mstore\n        /* \"#utility.yul\":9572:9601   */\n      0x537943726f774261727465723a20504153545f444541444c494e450000000000\n        /* \"#utility.yul\":9552:9570   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9545:9602   */\n      mstore\n        /* \"#utility.yul\":9619:9637   */\n      0x64\n      add\n        /* \"contracts/SycrowBarter.sol\":2315:2383  require(_deadline >= block.timestamp, \"SyCrowBarter: PAST_DEADLINE\") */\n      tag_112\n        /* \"#utility.yul\":9292:9643   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":2315:2383  require(_deadline >= block.timestamp, \"SyCrowBarter: PAST_DEADLINE\") */\n    tag_273:\n        /* \"contracts/SycrowBarter.sol\":2415:2455  IERC20(inToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":2449:2453  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":2415:2455  IERC20(inToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":2459:2474  amountDeposited */\n      dup7\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":2415:2440  IERC20(inToken).balanceOf */\n      dup11\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":2415:2455  IERC20(inToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_278:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_279\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_279:\n        /* \"contracts/SycrowBarter.sol\":2415:2474  IERC20(inToken).balanceOf(address(this)) >= amountDeposited */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":2394:2534  require(... */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9850:9852   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":2394:2534  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9832:9853   */\n      mstore\n        /* \"#utility.yul\":9889:9891   */\n      0x22\n        /* \"#utility.yul\":9869:9887   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9862:9892   */\n      mstore\n        /* \"#utility.yul\":9928:9962   */\n      0x537943726f774261727465723a20494e53554646494349454e545f4445504f53\n        /* \"#utility.yul\":9908:9926   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9901:9963   */\n      mstore\n      shl(0xf2, 0x1255)\n        /* \"#utility.yul\":9979:9997   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9972:10004   */\n      mstore\n        /* \"#utility.yul\":10021:10040   */\n      0x84\n      add\n        /* \"contracts/SycrowBarter.sol\":2394:2534  require(... */\n      tag_112\n        /* \"#utility.yul\":9648:10046   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":2394:2534  require(... */\n    tag_280:\n        /* \"contracts/SycrowBarter.sol\":2545:2553  deadline */\n      0x04\n        /* \"contracts/SycrowBarter.sol\":2545:2565  deadline = _deadline */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2576:2598  _depositedTokenAddress */\n      0x06\n        /* \"contracts/SycrowBarter.sol\":2576:2608  _depositedTokenAddress = inToken */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup12\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2618:2639  _expectedTokenAddress */\n      0x07\n        /* \"contracts/SycrowBarter.sol\":2618:2650  _expectedTokenAddress = outToken */\n      dup1\n      sload\n      swap3\n      dup11\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2661:2677  _depositedAmount */\n      0x08\n        /* \"contracts/SycrowBarter.sol\":2661:2695  _depositedAmount = amountDeposited */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2705:2720  _expectedAmount */\n      0x09\n        /* \"contracts/SycrowBarter.sol\":2705:2737  _expectedAmount = amountExpected */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2748:2758  barterType */\n      0x05\n        /* \"contracts/SycrowBarter.sol\":2748:2772  barterType = _barterType */\n      dup1\n      sload\n        /* \"contracts/SycrowBarter.sol\":2761:2772  _barterType */\n      dup11\n      swap2\n        /* \"contracts/SycrowBarter.sol\":2748:2758  barterType */\n      swap1\n      not(0xff)\n        /* \"contracts/SycrowBarter.sol\":2748:2772  barterType = _barterType */\n      and\n        /* \"contracts/SycrowBarter.sol\":2576:2608  _depositedTokenAddress = inToken */\n      0x01\n        /* \"contracts/SycrowBarter.sol\":2761:2772  _barterType */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":2748:2772  barterType = _barterType */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_284\n      jumpi\n      tag_284\n      tag_129\n      jump\t// in\n    tag_284:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":2783:2799  allowMultiBarter */\n      0x03\n        /* \"contracts/SycrowBarter.sol\":2783:2819  allowMultiBarter = _allowMultiBarter */\n      dup1\n      sload\n      dup4\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2830:2834  WETH */\n      0x05\n        /* \"contracts/SycrowBarter.sol\":2830:2842  WETH = _WETH */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n        /* \"contracts/SycrowBarter.sol\":2783:2819  allowMultiBarter = _allowMultiBarter */\n      0x0100\n        /* \"contracts/SycrowBarter.sol\":2830:2842  WETH = _WETH */\n      mul\n        /* \"contracts/SycrowBarter.sol\":2853:2872  _initialized = true */\n      and\n      not(sub(shl(0xb0, 0x01), 0x0100))\n      swap1\n      swap2\n      and\n      or\n      shl(0xa8, 0x01)\n      swap1\n      dup2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"contracts/SycrowBarter.sol\":2890:2902  _initialized */\n      swap1\n      div\n        /* \"contracts/SycrowBarter.sol\":2783:2819  allowMultiBarter = _allowMultiBarter */\n      0xff\n        /* \"contracts/SycrowBarter.sol\":2890:2902  _initialized */\n      and\n        /* \"contracts/SycrowBarter.sol\":1881:2909  function initialize(... */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_189\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":3108:3306  function getTokens()... */\n    tag_83:\n        /* \"contracts/SycrowBarter.sol\":1551:1563  _initialized */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":3213:3220  address */\n      0x00\n      swap1\n      dup2\n      swap1\n      shl(0xa8, 0x01)\n        /* \"contracts/SycrowBarter.sol\":1551:1563  _initialized */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1543:1597  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_117\n      jump\t// in\n    tag_295:\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":3253:3275  _depositedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":3277:3298  _expectedTokenAddress */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":3253:3275  _depositedTokenAddress */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/SycrowBarter.sol\":3277:3298  _expectedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":3108:3306  function getTokens()... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":10178:10320  function getTradeOutAmount(uint256 amount) public view returns (uint256) {... */\n    tag_97:\n        /* \"contracts/SycrowBarter.sol\":10242:10249  uint256 */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":10298:10313  _expectedAmount */\n      sload(0x09)\n        /* \"contracts/SycrowBarter.sol\":10278:10294  _depositedAmount */\n      sload(0x08)\n        /* \"contracts/SycrowBarter.sol\":10269:10275  amount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":10269:10294  amount * _depositedAmount */\n      tag_299\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"contracts/SycrowBarter.sol\":10268:10313  (amount * _depositedAmount) / _expectedAmount */\n      tag_301\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"contracts/SycrowBarter.sol\":10261:10313  return (amount * _depositedAmount) / _expectedAmount */\n      swap3\n        /* \"contracts/SycrowBarter.sol\":10178:10320  function getTradeOutAmount(uint256 amount) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":3312:3998  function getTrades()... */\n    tag_101:\n        /* \"contracts/SycrowBarter.sol\":3430:3446  address[] memory */\n      0x60\n        /* \"contracts/SycrowBarter.sol\":3460:3476  uint256[] memory */\n      dup1\n        /* \"contracts/SycrowBarter.sol\":3490:3506  uint256[] memory */\n      0x60\n        /* \"contracts/SycrowBarter.sol\":1551:1563  _initialized */\n      0x05\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SycrowBarter.sol\":1543:1597  require(_initialized, \"SyCrowBarter: NOT_INITIALIZED\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_117\n      jump\t// in\n    tag_304:\n        /* \"contracts/SycrowBarter.sol\":3574:3581  _trades */\n      0x0a\n        /* \"contracts/SycrowBarter.sol\":3574:3588  _trades.length */\n      sload\n        /* \"contracts/SycrowBarter.sol\":3531:3557  address[] memory addresses */\n      0x00\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3560:3589  new address[](_trades.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_308\n      jumpi\n      tag_308\n      tag_309\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_310\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_310:\n      pop\n        /* \"contracts/SycrowBarter.sol\":3642:3649  _trades */\n      0x0a\n        /* \"contracts/SycrowBarter.sol\":3642:3656  _trades.length */\n      sload\n        /* \"contracts/SycrowBarter.sol\":3531:3589  address[] memory addresses = new address[](_trades.length) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/SycrowBarter.sol\":3599:3625  uint256[] memory amountsIn */\n      0x00\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3628:3657  new uint256[](_trades.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_312\n      jumpi\n      tag_312\n      tag_309\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_313\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_313:\n      pop\n        /* \"contracts/SycrowBarter.sol\":3711:3718  _trades */\n      0x0a\n        /* \"contracts/SycrowBarter.sol\":3711:3725  _trades.length */\n      sload\n        /* \"contracts/SycrowBarter.sol\":3599:3657  uint256[] memory amountsIn = new uint256[](_trades.length) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/SycrowBarter.sol\":3667:3694  uint256[] memory amountsOut */\n      0x00\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3697:3726  new uint256[](_trades.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_315\n      jumpi\n      tag_315\n      tag_309\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_316\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_316:\n      pop\n        /* \"contracts/SycrowBarter.sol\":3667:3726  uint256[] memory amountsOut = new uint256[](_trades.length) */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":3742:3751  uint256 i */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":3737:3940  for (uint256 i = 0; i < _trades.length; i++) {... */\n    tag_317:\n        /* \"contracts/SycrowBarter.sol\":3761:3768  _trades */\n      0x0a\n        /* \"contracts/SycrowBarter.sol\":3761:3775  _trades.length */\n      sload\n        /* \"contracts/SycrowBarter.sol\":3757:3775  i < _trades.length */\n      dup2\n      lt\n        /* \"contracts/SycrowBarter.sol\":3737:3940  for (uint256 i = 0; i < _trades.length; i++) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"contracts/SycrowBarter.sol\":3811:3818  _trades */\n      0x0a\n        /* \"contracts/SycrowBarter.sol\":3819:3820  i */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":3811:3821  _trades[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_321\n      jumpi\n      tag_321\n      tag_322\n      jump\t// in\n    tag_321:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/SycrowBarter.sol\":3811:3829  _trades[i]._trader */\n      sload\n        /* \"contracts/SycrowBarter.sol\":3796:3808  addresses[i] */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":3811:3829  _trades[i]._trader */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3796:3805  addresses */\n      dup6\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3806:3807  i */\n      dup4\n      swap1\n        /* \"contracts/SycrowBarter.sol\":3796:3808  addresses[i] */\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_325\n      tag_322\n      jump\t// in\n    tag_325:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SycrowBarter.sol\":3796:3829  addresses[i] = _trades[i]._trader */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":3858:3865  _trades */\n      0x0a\n        /* \"contracts/SycrowBarter.sol\":3866:3867  i */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":3858:3868  _trades[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_327\n      jumpi\n      tag_327\n      tag_322\n      jump\t// in\n    tag_327:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/SycrowBarter.sol\":3858:3878  _trades[i]._amountIn */\n      0x01\n      add\n      sload\n        /* \"contracts/SycrowBarter.sol\":3843:3852  amountsIn */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":3853:3854  i */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":3843:3855  amountsIn[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_330\n      jumpi\n      tag_330\n      tag_322\n      jump\t// in\n    tag_330:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SycrowBarter.sol\":3843:3878  amountsIn[i] = _trades[i]._amountIn */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":3908:3915  _trades */\n      0x0a\n        /* \"contracts/SycrowBarter.sol\":3916:3917  i */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":3908:3918  _trades[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_332\n      jumpi\n      tag_332\n      tag_322\n      jump\t// in\n    tag_332:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/SycrowBarter.sol\":3908:3929  _trades[i]._amountOut */\n      0x02\n      add\n      sload\n        /* \"contracts/SycrowBarter.sol\":3892:3902  amountsOut */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":3903:3904  i */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":3892:3905  amountsOut[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_335\n      jumpi\n      tag_335\n      tag_322\n      jump\t// in\n    tag_335:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/SycrowBarter.sol\":3892:3929  amountsOut[i] = _trades[i]._amountOut */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":3777:3780  i++ */\n      dup1\n      tag_336\n      dup2\n      tag_337\n      jump\t// in\n    tag_336:\n      swap2\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":3737:3940  for (uint256 i = 0; i < _trades.length; i++) {... */\n      jump(tag_317)\n    tag_318:\n      pop\n        /* \"contracts/SycrowBarter.sol\":3958:3967  addresses */\n      swap2\n      swap5\n      pop\n        /* \"contracts/SycrowBarter.sol\":3969:3978  amountsIn */\n      swap3\n      pop\n        /* \"contracts/SycrowBarter.sol\":3980:3990  amountsOut */\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":3312:3998  function getTrades()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_189\n      jump\t// in\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11184:11186   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11166:11187   */\n      mstore\n        /* \"#utility.yul\":11223:11225   */\n      0x26\n        /* \"#utility.yul\":11203:11221   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11196:11226   */\n      mstore\n        /* \"#utility.yul\":11262:11296   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11242:11260   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11235:11297   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11313:11331   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11306:11342   */\n      mstore\n        /* \"#utility.yul\":11359:11378   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_112\n        /* \"#utility.yul\":10982:11384   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_344:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_347\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":6493:7572  function _tradeTokenForEth(uint256 inAmount) internal {... */\n    tag_145:\n        /* \"contracts/SycrowBarter.sol\":6585:6606  _expectedTokenAddress */\n      sload(0x07)\n        /* \"contracts/SycrowBarter.sol\":6578:6629  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6618:6628  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":6578:6629  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6633:6641  inAmount */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":6585:6606  _expectedTokenAddress */\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6578:6617  IERC20(_expectedTokenAddress).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":6578:6629  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_351\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_351:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_352\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_352:\n        /* \"contracts/SycrowBarter.sol\":6578:6641  IERC20(_expectedTokenAddress).balanceOf(msg.sender) >= inAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":6557:6701  require(... */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_355\n      jump\t// in\n    tag_353:\n        /* \"contracts/SycrowBarter.sol\":6712:6729  uint256 outAmount */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":6732:6759  getTradeOutAmount(inAmount) */\n      tag_356\n        /* \"contracts/SycrowBarter.sol\":6750:6758  inAmount */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":6732:6749  getTradeOutAmount */\n      tag_97\n        /* \"contracts/SycrowBarter.sol\":6732:6759  getTradeOutAmount(inAmount) */\n      jump\t// in\n    tag_356:\n        /* \"contracts/SycrowBarter.sol\":6797:6801  WETH */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":6834:6869  _wethErc20.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6863:6867  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":6834:6869  _wethErc20.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6712:6759  uint256 outAmount = getTradeOutAmount(inAmount) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/SycrowBarter.sol\":6797:6801  WETH */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6712:6759  uint256 outAmount = getTradeOutAmount(inAmount) */\n      dup3\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6797:6801  WETH */\n      dup3\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6834:6854  _wethErc20.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":6834:6869  _wethErc20.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_359\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_359:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_360\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_360:\n        /* \"contracts/SycrowBarter.sol\":6834:6882  _wethErc20.balanceOf(address(this)) >= outAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":6813:6951  require(... */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_363\n      jump\t// in\n    tag_361:\n        /* \"contracts/SycrowBarter.sol\":7007:7028  _expectedTokenAddress */\n      sload(0x07)\n        /* \"contracts/SycrowBarter.sol\":6962:7111  TransferHelper.safeTransferFrom(... */\n      tag_364\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":7007:7028  _expectedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":7042:7052  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":7074:7078  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":7093:7101  inAmount */\n      dup7\n        /* \"contracts/SycrowBarter.sol\":6962:6993  TransferHelper.safeTransferFrom */\n      tag_365\n        /* \"contracts/SycrowBarter.sol\":6962:7111  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_364:\n        /* \"contracts/SycrowBarter.sol\":7128:7132  WETH */\n      sload(0x05)\n        /* \"contracts/SycrowBarter.sol\":7122:7153  IWETH(WETH).withdraw(outAmount) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":345:370   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/SycrowBarter.sol\":7128:7132  WETH */\n      0x0100\n      swap1\n      swap2\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7122:7142  IWETH(WETH).withdraw */\n      0x2e1a7d4d\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":7122:7153  IWETH(WETH).withdraw(outAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_367\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_367:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_369\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_369:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":7164:7217  TransferHelper.safeTransferETH(msg.sender, outAmount) */\n      tag_370\n        /* \"contracts/SycrowBarter.sol\":7195:7205  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":7207:7216  outAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":7164:7194  TransferHelper.safeTransferETH */\n      tag_202\n        /* \"contracts/SycrowBarter.sol\":7164:7217  TransferHelper.safeTransferETH(msg.sender, outAmount) */\n      jump\t// in\n    tag_370:\n        /* \"contracts/SycrowBarter.sol\":7241:7284  BaterTrade(msg.sender, inAmount, outAmount) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/SycrowBarter.sol\":7252:7262  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":7241:7284  BaterTrade(msg.sender, inAmount, outAmount) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup6\n      dup2\n      mstore\n      swap2\n      dup2\n      add\n      dup5\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":7228:7235  _trades */\n      0x0a\n        /* \"contracts/SycrowBarter.sol\":7228:7285  _trades.push(BaterTrade(msg.sender, inAmount, outAmount)) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      mload\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8\n      0x03\n      swap1\n      swap4\n      mul\n      swap3\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      swap2\n      mload\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a9\n      dup3\n      add\n      sstore\n      swap1\n      mload\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa\n      swap1\n      swap2\n      add\n      sstore\n      0x02\n        /* \"contracts/SycrowBarter.sol\":7315:7331  totalTradeAmount */\n      sload\n        /* \"contracts/SycrowBarter.sol\":7315:7342  totalTradeAmount + inAmount */\n      tag_372\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7241:7284  BaterTrade(msg.sender, inAmount, outAmount) */\n      dup5\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7315:7342  totalTradeAmount + inAmount */\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"contracts/SycrowBarter.sol\":7296:7312  totalTradeAmount */\n      0x02\n        /* \"contracts/SycrowBarter.sol\":7296:7342  totalTradeAmount = totalTradeAmount + inAmount */\n      sstore\n        /* \"contracts/SycrowBarter.sol\":7428:7565  sycrFactory.notifyTradeByBarter(... */\n      mload(0x40)\n      shl(0xe0, 0xf52701b7)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":7409:7416  factory */\n      immutable(\"0x9d6b7fbd0ded42ab14e47300e428df3f38e4fbb3a7f790d898a87bff4f86606b\")\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":7428:7459  sycrFactory.notifyTradeByBarter */\n      dup3\n      and\n      swap1\n      0xf52701b7\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7428:7565  sycrFactory.notifyTradeByBarter(... */\n      tag_374\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7481:7485  this */\n      address\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7500:7510  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7524:7532  inAmount */\n      dup10\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7546:7555  outAmount */\n      dup10\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7428:7565  sycrFactory.notifyTradeByBarter(... */\n      0x04\n      add\n      tag_229\n      jump\t// in\n    tag_374:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_375\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_375:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_377\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_377:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":6547:7572  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":6493:7572  function _tradeTokenForEth(uint256 inAmount) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":5389:6487  function _tradeTokenForToken(uint256 inAmount) internal {... */\n    tag_174:\n        /* \"contracts/SycrowBarter.sol\":5483:5504  _expectedTokenAddress */\n      sload(0x07)\n        /* \"contracts/SycrowBarter.sol\":5476:5527  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":5516:5526  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":5476:5527  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":5531:5539  inAmount */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":5483:5504  _expectedTokenAddress */\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":5476:5515  IERC20(_expectedTokenAddress).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":5476:5527  IERC20(_expectedTokenAddress).balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_381\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_381:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_382\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_382:\n        /* \"contracts/SycrowBarter.sol\":5476:5539  IERC20(_expectedTokenAddress).balanceOf(msg.sender) >= inAmount */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":5455:5599  require(... */\n      tag_383\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_355\n      jump\t// in\n    tag_383:\n        /* \"contracts/SycrowBarter.sol\":5610:5627  uint256 outAmount */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":5630:5657  getTradeOutAmount(inAmount) */\n      tag_385\n        /* \"contracts/SycrowBarter.sol\":5648:5656  inAmount */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":5630:5647  getTradeOutAmount */\n      tag_97\n        /* \"contracts/SycrowBarter.sol\":5630:5657  getTradeOutAmount(inAmount) */\n      jump\t// in\n    tag_385:\n        /* \"contracts/SycrowBarter.sol\":5696:5718  _depositedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":5689:5744  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":5738:5742  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":5689:5744  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":5610:5657  uint256 outAmount = getTradeOutAmount(inAmount) */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":5696:5718  _depositedTokenAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":5689:5729  IERC20(_depositedTokenAddress).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":5689:5744  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_388\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_388:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_389\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_389:\n        /* \"contracts/SycrowBarter.sol\":5689:5773  IERC20(_depositedTokenAddress).balanceOf(address(this)) >=... */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":5668:5842  require(... */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_363\n      jump\t// in\n    tag_390:\n        /* \"contracts/SycrowBarter.sol\":5898:5919  _expectedTokenAddress */\n      sload(0x07)\n        /* \"contracts/SycrowBarter.sol\":5853:6002  TransferHelper.safeTransferFrom(... */\n      tag_392\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":5898:5919  _expectedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":5933:5943  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":5965:5969  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":5984:5992  inAmount */\n      dup6\n        /* \"contracts/SycrowBarter.sol\":5853:5884  TransferHelper.safeTransferFrom */\n      tag_365\n        /* \"contracts/SycrowBarter.sol\":5853:6002  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_392:\n        /* \"contracts/SycrowBarter.sol\":6053:6075  _depositedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":6012:6132  TransferHelper.safeTransfer(... */\n      tag_393\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":6053:6075  _depositedTokenAddress */\n      and\n        /* \"contracts/SycrowBarter.sol\":6089:6099  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":6113:6122  outAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":6012:6039  TransferHelper.safeTransfer */\n      tag_209\n        /* \"contracts/SycrowBarter.sol\":6012:6132  TransferHelper.safeTransfer(... */\n      jump\t// in\n    tag_393:\n        /* \"contracts/SycrowBarter.sol\":6156:6199  BaterTrade(msg.sender, inAmount, outAmount) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6167:6177  msg.sender */\n      caller\n        /* \"contracts/SycrowBarter.sol\":6156:6199  BaterTrade(msg.sender, inAmount, outAmount) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      dup2\n      mstore\n      swap2\n      dup2\n      add\n      dup4\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6143:6150  _trades */\n      0x0a\n        /* \"contracts/SycrowBarter.sol\":6143:6200  _trades.push(BaterTrade(msg.sender, inAmount, outAmount)) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      mload\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8\n      0x03\n      swap1\n      swap4\n      mul\n      swap3\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      swap2\n      mload\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a9\n      dup3\n      add\n      sstore\n      swap1\n      mload\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa\n      swap1\n      swap2\n      add\n      sstore\n      0x02\n        /* \"contracts/SycrowBarter.sol\":6230:6246  totalTradeAmount */\n      sload\n        /* \"contracts/SycrowBarter.sol\":6230:6257  totalTradeAmount + inAmount */\n      tag_395\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6156:6199  BaterTrade(msg.sender, inAmount, outAmount) */\n      dup4\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6230:6257  totalTradeAmount + inAmount */\n      tag_373\n      jump\t// in\n    tag_395:\n        /* \"contracts/SycrowBarter.sol\":6211:6227  totalTradeAmount */\n      0x02\n        /* \"contracts/SycrowBarter.sol\":6211:6257  totalTradeAmount = totalTradeAmount + inAmount */\n      sstore\n        /* \"contracts/SycrowBarter.sol\":6343:6480  sycrFactory.notifyTradeByBarter(... */\n      mload(0x40)\n      shl(0xe0, 0xf52701b7)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":6324:6331  factory */\n      immutable(\"0x9d6b7fbd0ded42ab14e47300e428df3f38e4fbb3a7f790d898a87bff4f86606b\")\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":6343:6374  sycrFactory.notifyTradeByBarter */\n      dup3\n      and\n      swap1\n      0xf52701b7\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6343:6480  sycrFactory.notifyTradeByBarter(... */\n      tag_396\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6396:6400  this */\n      address\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6415:6425  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6439:6447  inAmount */\n      dup9\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6461:6470  outAmount */\n      dup9\n      swap1\n        /* \"contracts/SycrowBarter.sol\":6343:6480  sycrFactory.notifyTradeByBarter(... */\n      0x04\n      add\n      tag_229\n      jump\t// in\n    tag_396:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_397\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_397:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_399\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_399:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":5445:6487  {... */\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":5389:6487  function _tradeTokenForToken(uint256 inAmount) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TransferHelper.sol\":1333:1525  function safeTransferETH(address to, uint value) internal {... */\n    tag_202:\n        /* \"contracts/libraries/TransferHelper.sol\":1440:1452  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":1402:1414  bool success */\n      0x00\n        /* \"contracts/libraries/TransferHelper.sol\":1440:1452  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TransferHelper.sol\":1419:1426  to.call */\n      dup5\n      and\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1433:1438  value */\n      dup4\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1419:1453  to.call{value:value}(new bytes(0)) */\n      mload(0x40)\n      tag_405\n      swap2\n      swap1\n      tag_406\n      jump\t// in\n    tag_405:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_409\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_408)\n    tag_409:\n      0x60\n      swap2\n      pop\n    tag_408:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1401:1453  (bool success,) = to.call{value:value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1471:1478  success */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":1463:1518  require(success, 'TransferHelper: ETH_TRANSFER_FAILED') */\n      tag_410\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12970:12972   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":1463:1518  require(success, 'TransferHelper: ETH_TRANSFER_FAILED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12952:12973   */\n      mstore\n        /* \"#utility.yul\":13009:13011   */\n      0x23\n        /* \"#utility.yul\":12989:13007   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12982:13012   */\n      mstore\n        /* \"#utility.yul\":13048:13082   */\n      0x5472616e7366657248656c7065723a204554485f5452414e534645525f464149\n        /* \"#utility.yul\":13028:13046   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13021:13083   */\n      mstore\n      shl(0xea, 0x131151)\n        /* \"#utility.yul\":13099:13117   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13092:13125   */\n      mstore\n        /* \"#utility.yul\":13142:13161   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":1463:1518  require(success, 'TransferHelper: ETH_TRANSFER_FAILED') */\n      tag_112\n        /* \"#utility.yul\":12768:13167   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":1463:1518  require(success, 'TransferHelper: ETH_TRANSFER_FAILED') */\n    tag_410:\n        /* \"contracts/libraries/TransferHelper.sol\":1391:1525  {... */\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1333:1525  function safeTransferETH(address to, uint value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TransferHelper.sol\":566:923  function safeTransfer(address token, address to, uint value) internal {... */\n    tag_209:\n        /* \"contracts/libraries/TransferHelper.sol\":759:804  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13364:13396   */\n      dup5\n      dup2\n      and\n        /* \"contracts/libraries/TransferHelper.sol\":759:804  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":13346:13397   */\n      mstore\n        /* \"#utility.yul\":13413:13431   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":13406:13440   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":759:804  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":13319:13337   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":759:804  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":748:805  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":748:805  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_416\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":759:804  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":748:805  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_406\n      jump\t// in\n    tag_416:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_419\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_418)\n    tag_419:\n      0x60\n      swap2\n      pop\n    tag_418:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":712:805  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":823:830  success */\n      dup2\n        /* \"contracts/libraries/TransferHelper.sol\":823:880  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_422\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":835:846  data.length */\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":835:851  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":835:879  data.length == 0 || abi.decode(data, (bool)) */\n      tag_422\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":866:870  data */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":855:879  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_422\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_422:\n        /* \"contracts/libraries/TransferHelper.sol\":815:916  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      tag_423\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13653:13655   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":815:916  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13635:13656   */\n      mstore\n        /* \"#utility.yul\":13692:13694   */\n      0x1f\n        /* \"#utility.yul\":13672:13690   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13665:13695   */\n      mstore\n        /* \"#utility.yul\":13731:13764   */\n      0x5472616e7366657248656c7065723a205452414e534645525f4641494c454400\n        /* \"#utility.yul\":13711:13729   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13704:13765   */\n      mstore\n        /* \"#utility.yul\":13782:13800   */\n      0x64\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":815:916  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      tag_112\n        /* \"#utility.yul\":13451:13806   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":815:916  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n    tag_423:\n        /* \"contracts/libraries/TransferHelper.sol\":636:923  {... */\n      pop\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":566:923  function safeTransfer(address token, address to, uint value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SycrowBarter.sol\":7578:8489  function _tradeEthForToken(uint256 inAmount) internal {... */\n    tag_265:\n        /* \"contracts/SycrowBarter.sol\":7662:7671  msg.value */\n      callvalue\n        /* \"contracts/SycrowBarter.sol\":7650:7658  inAmount */\n      dup2\n        /* \"contracts/SycrowBarter.sol\":7650:7671  inAmount == msg.value */\n      eq\n        /* \"contracts/SycrowBarter.sol\":7642:7713  require(inAmount == msg.value, \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\") */\n      tag_427\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14013:14015   */\n      0x20\n        /* \"contracts/SycrowBarter.sol\":7642:7713  require(inAmount == msg.value, \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13995:14016   */\n      mstore\n        /* \"#utility.yul\":14052:14054   */\n      0x25\n        /* \"#utility.yul\":14032:14050   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14025:14055   */\n      mstore\n        /* \"#utility.yul\":14091:14125   */\n      0x537943726f774261727465723a204d554c54495f54524144455f4e4f545f454e\n        /* \"#utility.yul\":14071:14089   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14064:14126   */\n      mstore\n      shl(0xda, 0x1050931151)\n        /* \"#utility.yul\":14142:14160   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14135:14170   */\n      mstore\n        /* \"#utility.yul\":14187:14206   */\n      0x84\n      add\n        /* \"contracts/SycrowBarter.sol\":7642:7713  require(inAmount == msg.value, \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\") */\n      tag_112\n        /* \"#utility.yul\":13811:14212   */\n      jump\n        /* \"contracts/SycrowBarter.sol\":7642:7713  require(inAmount == msg.value, \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\") */\n    tag_427:\n        /* \"contracts/SycrowBarter.sol\":7724:7741  uint256 outAmount */\n      0x00\n        /* \"contracts/SycrowBarter.sol\":7744:7771  getTradeOutAmount(inAmount) */\n      tag_430\n        /* \"contracts/SycrowBarter.sol\":7762:7770  inAmount */\n      dup3\n        /* \"contracts/SycrowBarter.sol\":7744:7761  getTradeOutAmount */\n      tag_97\n        /* \"contracts/SycrowBarter.sol\":7744:7771  getTradeOutAmount(inAmount) */\n      jump\t// in\n    tag_430:\n        /* \"contracts/SycrowBarter.sol\":7810:7832  _depositedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":7803:7858  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/SycrowBarter.sol\":7852:7856  this */\n      address\n        /* \"contracts/SycrowBarter.sol\":7803:7858  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2609:2660   */\n      mstore\n        /* \"contracts/SycrowBarter.sol\":7724:7771  uint256 outAmount = getTradeOutAmount(inAmount) */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":7810:7832  _depositedTokenAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SycrowBarter.sol\":7803:7843  IERC20(_depositedTokenAddress).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2582:2600   */\n      0x24\n      add\n        /* \"contracts/SycrowBarter.sol\":7803:7858  IERC20(_depositedTokenAddress).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_433\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_433:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_434\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_434:\n        /* \"contracts/SycrowBarter.sol\":7803:7887  IERC20(_depositedTokenAddress).balanceOf(address(this)) >=... */\n      lt\n      iszero\n        /* \"contracts/SycrowBarter.sol\":7782:7956  require(... */\n      tag_435\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_363\n      jump\t// in\n    tag_435:\n        /* \"contracts/SycrowBarter.sol\":7973:7977  WETH */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":7967:7986  IWETH(WETH).deposit */\n      and\n      0xd0e30db0\n        /* \"contracts/SycrowBarter.sol\":7994:8002  inAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":7967:8005  IWETH(WETH).deposit{value: inAmount}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_437\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_437:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_439\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_439:\n      pop\n      pop\n        /* \"contracts/SycrowBarter.sol\":8057:8079  _depositedTokenAddress */\n      sload(0x06)\n        /* \"contracts/SycrowBarter.sol\":8016:8136  TransferHelper.safeTransfer(... */\n      tag_393\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SycrowBarter.sol\":8057:8079  _depositedTokenAddress */\n      and\n      swap2\n      pop\n        /* \"contracts/SycrowBarter.sol\":8093:8103  msg.sender */\n      caller\n      swap1\n      pop\n        /* \"contracts/SycrowBarter.sol\":8117:8126  outAmount */\n      dup4\n        /* \"contracts/SycrowBarter.sol\":8016:8043  TransferHelper.safeTransfer */\n      tag_209\n        /* \"contracts/SycrowBarter.sol\":8016:8136  TransferHelper.safeTransfer(... */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TransferHelper.sol\":929:1327  function safeTransferFrom(address token, address from, address to, uint value) internal {... */\n    tag_365:\n        /* \"contracts/libraries/TransferHelper.sol\":1152:1203  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14475:14490   */\n      dup6\n      dup2\n      and\n        /* \"contracts/libraries/TransferHelper.sol\":1152:1203  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":14457:14491   */\n      mstore\n        /* \"#utility.yul\":14527:14542   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":14507:14525   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":14500:14543   */\n      mstore\n        /* \"#utility.yul\":14559:14577   */\n      0x64\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":14552:14586   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":1152:1203  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":14392:14410   */\n      0x84\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":1152:1203  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":1141:1204  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/libraries/TransferHelper.sol\":1141:1151  token.call */\n      swap1\n      dup9\n      and\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":1141:1204  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      tag_451\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":1152:1203  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1141:1204  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      tag_406\n      jump\t// in\n    tag_451:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_454\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_453)\n    tag_454:\n      0x60\n      swap2\n      pop\n    tag_453:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1105:1204  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1222:1229  success */\n      dup2\n        /* \"contracts/libraries/TransferHelper.sol\":1222:1279  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_457\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1234:1245  data.length */\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":1234:1250  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":1234:1278  data.length == 0 || abi.decode(data, (bool)) */\n      tag_457\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1265:1269  data */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":1254:1278  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_457\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_457:\n        /* \"contracts/libraries/TransferHelper.sol\":1214:1320  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      tag_458\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14799:14801   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":1214:1320  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14781:14802   */\n      mstore\n        /* \"#utility.yul\":14838:14840   */\n      0x24\n        /* \"#utility.yul\":14818:14836   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14811:14841   */\n      mstore\n        /* \"#utility.yul\":14877:14911   */\n      0x5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641\n        /* \"#utility.yul\":14857:14875   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14850:14912   */\n      mstore\n      shl(0xe2, 0x12531151)\n        /* \"#utility.yul\":14928:14946   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14921:14955   */\n      mstore\n        /* \"#utility.yul\":14972:14991   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":1214:1320  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      tag_112\n        /* \"#utility.yul\":14597:14997   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":1214:1320  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n    tag_458:\n        /* \"contracts/libraries/TransferHelper.sol\":1017:1327  {... */\n      pop\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":929:1327  function safeTransferFrom(address token, address from, address to, uint value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_31:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_467:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":826:999   */\n    tag_461:\n        /* \"#utility.yul\":894:914   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":943:974   */\n      dup2\n      and\n        /* \"#utility.yul\":933:975   */\n      dup2\n      eq\n        /* \"#utility.yul\":923:993   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":989:990   */\n      0x00\n        /* \"#utility.yul\":986:987   */\n      dup1\n        /* \"#utility.yul\":979:991   */\n      revert\n        /* \"#utility.yul\":923:993   */\n    tag_472:\n        /* \"#utility.yul\":826:999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1004:1122   */\n    tag_462:\n        /* \"#utility.yul\":1090:1095   */\n      dup1\n        /* \"#utility.yul\":1083:1096   */\n      iszero\n        /* \"#utility.yul\":1076:1097   */\n      iszero\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1098   */\n      eq\n        /* \"#utility.yul\":1056:1116   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1109:1110   */\n      dup1\n        /* \"#utility.yul\":1102:1114   */\n      revert\n        /* \"#utility.yul\":1127:1971   */\n    tag_65:\n        /* \"#utility.yul\":1268:1274   */\n      0x00\n        /* \"#utility.yul\":1276:1282   */\n      dup1\n        /* \"#utility.yul\":1284:1290   */\n      0x00\n        /* \"#utility.yul\":1292:1298   */\n      dup1\n        /* \"#utility.yul\":1300:1306   */\n      0x00\n        /* \"#utility.yul\":1308:1314   */\n      dup1\n        /* \"#utility.yul\":1316:1322   */\n      0x00\n        /* \"#utility.yul\":1324:1330   */\n      dup1\n        /* \"#utility.yul\":1377:1380   */\n      0x0100\n        /* \"#utility.yul\":1365:1374   */\n      dup10\n        /* \"#utility.yul\":1356:1363   */\n      dup12\n        /* \"#utility.yul\":1352:1375   */\n      sub\n        /* \"#utility.yul\":1348:1381   */\n      slt\n        /* \"#utility.yul\":1345:1398   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":1394:1395   */\n      0x00\n        /* \"#utility.yul\":1391:1392   */\n      dup1\n        /* \"#utility.yul\":1384:1396   */\n      revert\n        /* \"#utility.yul\":1345:1398   */\n    tag_476:\n        /* \"#utility.yul\":1433:1442   */\n      dup9\n        /* \"#utility.yul\":1420:1443   */\n      calldataload\n        /* \"#utility.yul\":1472:1473   */\n      0x03\n        /* \"#utility.yul\":1465:1470   */\n      dup2\n        /* \"#utility.yul\":1462:1474   */\n      lt\n        /* \"#utility.yul\":1452:1492   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":1488:1489   */\n      0x00\n        /* \"#utility.yul\":1485:1486   */\n      dup1\n        /* \"#utility.yul\":1478:1490   */\n      revert\n        /* \"#utility.yul\":1452:1492   */\n    tag_477:\n        /* \"#utility.yul\":1511:1516   */\n      swap8\n      pop\n        /* \"#utility.yul\":1535:1573   */\n      tag_478\n        /* \"#utility.yul\":1569:1571   */\n      0x20\n        /* \"#utility.yul\":1554:1572   */\n      dup11\n      add\n        /* \"#utility.yul\":1535:1573   */\n      tag_461\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":1525:1573   */\n      swap7\n      pop\n        /* \"#utility.yul\":1592:1630   */\n      tag_479\n        /* \"#utility.yul\":1626:1628   */\n      0x40\n        /* \"#utility.yul\":1615:1624   */\n      dup11\n        /* \"#utility.yul\":1611:1629   */\n      add\n        /* \"#utility.yul\":1592:1630   */\n      tag_461\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":1582:1630   */\n      swap6\n      pop\n        /* \"#utility.yul\":1677:1679   */\n      0x60\n        /* \"#utility.yul\":1666:1675   */\n      dup10\n        /* \"#utility.yul\":1662:1680   */\n      add\n        /* \"#utility.yul\":1649:1681   */\n      calldataload\n        /* \"#utility.yul\":1639:1681   */\n      swap5\n      pop\n        /* \"#utility.yul\":1728:1731   */\n      0x80\n        /* \"#utility.yul\":1717:1726   */\n      dup10\n        /* \"#utility.yul\":1713:1732   */\n      add\n        /* \"#utility.yul\":1700:1733   */\n      calldataload\n        /* \"#utility.yul\":1690:1733   */\n      swap4\n      pop\n        /* \"#utility.yul\":1780:1783   */\n      0xa0\n        /* \"#utility.yul\":1769:1778   */\n      dup10\n        /* \"#utility.yul\":1765:1784   */\n      add\n        /* \"#utility.yul\":1752:1785   */\n      calldataload\n        /* \"#utility.yul\":1742:1785   */\n      swap3\n      pop\n        /* \"#utility.yul\":1837:1840   */\n      0xc0\n        /* \"#utility.yul\":1826:1835   */\n      dup10\n        /* \"#utility.yul\":1822:1841   */\n      add\n        /* \"#utility.yul\":1809:1842   */\n      calldataload\n        /* \"#utility.yul\":1851:1881   */\n      tag_480\n        /* \"#utility.yul\":1873:1880   */\n      dup2\n        /* \"#utility.yul\":1851:1881   */\n      tag_462\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":1900:1907   */\n      swap2\n      pop\n        /* \"#utility.yul\":1926:1965   */\n      tag_481\n        /* \"#utility.yul\":1960:1963   */\n      0xe0\n        /* \"#utility.yul\":1945:1964   */\n      dup11\n      add\n        /* \"#utility.yul\":1926:1965   */\n      tag_461\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":1916:1965   */\n      swap1\n      pop\n        /* \"#utility.yul\":1127:1971   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1976:2103   */\n    tag_129:\n        /* \"#utility.yul\":2037:2047   */\n      0x4e487b71\n        /* \"#utility.yul\":2032:2035   */\n      0xe0\n        /* \"#utility.yul\":2028:2048   */\n      shl\n        /* \"#utility.yul\":2025:2026   */\n      0x00\n        /* \"#utility.yul\":2018:2049   */\n      mstore\n        /* \"#utility.yul\":2068:2072   */\n      0x21\n        /* \"#utility.yul\":2065:2066   */\n      0x04\n        /* \"#utility.yul\":2058:2073   */\n      mstore\n        /* \"#utility.yul\":2092:2096   */\n      0x24\n        /* \"#utility.yul\":2089:2090   */\n      0x00\n        /* \"#utility.yul\":2082:2097   */\n      revert\n        /* \"#utility.yul\":2108:2458   */\n    tag_75:\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2247:2265   */\n      dup2\n      add\n        /* \"#utility.yul\":2295:2296   */\n      0x03\n        /* \"#utility.yul\":2284:2297   */\n      dup4\n      lt\n        /* \"#utility.yul\":2274:2418   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":2340:2350   */\n      0x4e487b71\n        /* \"#utility.yul\":2335:2338   */\n      0xe0\n        /* \"#utility.yul\":2331:2351   */\n      shl\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2321:2352   */\n      mstore\n        /* \"#utility.yul\":2375:2379   */\n      0x21\n        /* \"#utility.yul\":2372:2373   */\n      0x04\n        /* \"#utility.yul\":2365:2380   */\n      mstore\n        /* \"#utility.yul\":2403:2407   */\n      0x24\n        /* \"#utility.yul\":2400:2401   */\n      0x00\n        /* \"#utility.yul\":2393:2408   */\n      revert\n        /* \"#utility.yul\":2274:2418   */\n    tag_484:\n        /* \"#utility.yul\":2427:2452   */\n      swap2\n      swap1\n      mstore\n        /* \"#utility.yul\":2108:2458   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2980:3415   */\n    tag_463:\n        /* \"#utility.yul\":3033:3036   */\n      0x00\n        /* \"#utility.yul\":3071:3076   */\n      dup2\n        /* \"#utility.yul\":3065:3077   */\n      mload\n        /* \"#utility.yul\":3098:3104   */\n      dup1\n        /* \"#utility.yul\":3093:3096   */\n      dup5\n        /* \"#utility.yul\":3086:3105   */\n      mstore\n        /* \"#utility.yul\":3124:3128   */\n      0x20\n        /* \"#utility.yul\":3153:3155   */\n      dup1\n        /* \"#utility.yul\":3148:3151   */\n      dup6\n        /* \"#utility.yul\":3144:3156   */\n      add\n        /* \"#utility.yul\":3137:3156   */\n      swap5\n      pop\n        /* \"#utility.yul\":3190:3192   */\n      dup1\n        /* \"#utility.yul\":3183:3188   */\n      dup5\n        /* \"#utility.yul\":3179:3193   */\n      add\n        /* \"#utility.yul\":3211:3212   */\n      0x00\n        /* \"#utility.yul\":3221:3390   */\n    tag_488:\n        /* \"#utility.yul\":3235:3241   */\n      dup4\n        /* \"#utility.yul\":3232:3233   */\n      dup2\n        /* \"#utility.yul\":3229:3242   */\n      lt\n        /* \"#utility.yul\":3221:3390   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":3296:3309   */\n      dup2\n      mload\n        /* \"#utility.yul\":3284:3310   */\n      dup8\n      mstore\n        /* \"#utility.yul\":3330:3342   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":3365:3380   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3257:3258   */\n      0x01\n        /* \"#utility.yul\":3250:3259   */\n      add\n        /* \"#utility.yul\":3221:3390   */\n      jump(tag_488)\n    tag_490:\n      pop\n        /* \"#utility.yul\":3406:3409   */\n      swap5\n      swap6\n        /* \"#utility.yul\":2980:3415   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3420:4457   */\n    tag_103:\n        /* \"#utility.yul\":3766:3768   */\n      0x60\n        /* \"#utility.yul\":3778:3799   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3848:3861   */\n      dup5\n      mload\n        /* \"#utility.yul\":3751:3769   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3870:3892   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3718:3722   */\n      0x00\n      swap1\n        /* \"#utility.yul\":3946:3950   */\n      0x20\n      swap1\n        /* \"#utility.yul\":3923:3926   */\n      0x80\n        /* \"#utility.yul\":3908:3927   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":3973:3988   */\n      dup3\n      dup9\n      add\n        /* \"#utility.yul\":3718:3722   */\n      dup5\n        /* \"#utility.yul\":4016:4211   */\n    tag_492:\n        /* \"#utility.yul\":4030:4036   */\n      dup3\n        /* \"#utility.yul\":4027:4028   */\n      dup2\n        /* \"#utility.yul\":4024:4037   */\n      lt\n        /* \"#utility.yul\":4016:4211   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":4095:4108   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4091:4130   */\n      and\n        /* \"#utility.yul\":4079:4131   */\n      dup5\n      mstore\n        /* \"#utility.yul\":4151:4163   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4186:4201   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":4127:4128   */\n      0x01\n        /* \"#utility.yul\":4045:4054   */\n      add\n        /* \"#utility.yul\":4016:4211   */\n      jump(tag_492)\n    tag_494:\n        /* \"#utility.yul\":4020:4023   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4256:4265   */\n      dup4\n        /* \"#utility.yul\":4251:4254   */\n      dup2\n        /* \"#utility.yul\":4247:4266   */\n      sub\n        /* \"#utility.yul\":4242:4244   */\n      dup3\n        /* \"#utility.yul\":4231:4240   */\n      dup6\n        /* \"#utility.yul\":4227:4245   */\n      add\n        /* \"#utility.yul\":4220:4267   */\n      mstore\n        /* \"#utility.yul\":4290:4331   */\n      tag_495\n        /* \"#utility.yul\":4327:4330   */\n      dup2\n        /* \"#utility.yul\":4319:4325   */\n      dup8\n        /* \"#utility.yul\":4290:4331   */\n      tag_463\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":4276:4331   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4379:4388   */\n      dup3\n        /* \"#utility.yul\":4371:4377   */\n      dup2\n        /* \"#utility.yul\":4367:4389   */\n      sub\n        /* \"#utility.yul\":4362:4364   */\n      0x40\n        /* \"#utility.yul\":4351:4360   */\n      dup5\n        /* \"#utility.yul\":4347:4365   */\n      add\n        /* \"#utility.yul\":4340:4390   */\n      mstore\n        /* \"#utility.yul\":4407:4451   */\n      tag_496\n        /* \"#utility.yul\":4444:4450   */\n      dup2\n        /* \"#utility.yul\":4436:4442   */\n      dup6\n        /* \"#utility.yul\":4407:4451   */\n      tag_463\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":4399:4451   */\n      swap7\n        /* \"#utility.yul\":3420:4457   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4462:4648   */\n    tag_107:\n        /* \"#utility.yul\":4521:4527   */\n      0x00\n        /* \"#utility.yul\":4574:4576   */\n      0x20\n        /* \"#utility.yul\":4562:4571   */\n      dup3\n        /* \"#utility.yul\":4553:4560   */\n      dup5\n        /* \"#utility.yul\":4549:4572   */\n      sub\n        /* \"#utility.yul\":4545:4577   */\n      slt\n        /* \"#utility.yul\":4542:4594   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4542:4594   */\n    tag_498:\n        /* \"#utility.yul\":4613:4642   */\n      tag_499\n        /* \"#utility.yul\":4632:4641   */\n      dup3\n        /* \"#utility.yul\":4613:4642   */\n      tag_461\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":4603:4642   */\n      swap4\n        /* \"#utility.yul\":4462:4648   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4653:4999   */\n    tag_113:\n        /* \"#utility.yul\":4855:4857   */\n      0x20\n        /* \"#utility.yul\":4837:4858   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4894:4896   */\n      0x16\n        /* \"#utility.yul\":4874:4892   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4867:4897   */\n      mstore\n      shl(0x50, 0x537943726f774261727465723a20494e414354495645)\n        /* \"#utility.yul\":4928:4930   */\n      0x40\n        /* \"#utility.yul\":4913:4931   */\n      dup3\n      add\n        /* \"#utility.yul\":4906:4958   */\n      mstore\n        /* \"#utility.yul\":4990:4992   */\n      0x60\n        /* \"#utility.yul\":4975:4993   */\n      add\n      swap1\n        /* \"#utility.yul\":4653:4999   */\n      jump\t// out\n        /* \"#utility.yul\":5004:5357   */\n    tag_117:\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"#utility.yul\":5188:5209   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5245:5247   */\n      0x1d\n        /* \"#utility.yul\":5225:5243   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5218:5248   */\n      mstore\n        /* \"#utility.yul\":5284:5315   */\n      0x537943726f774261727465723a204e4f545f494e495449414c495a4544000000\n        /* \"#utility.yul\":5279:5281   */\n      0x40\n        /* \"#utility.yul\":5264:5282   */\n      dup3\n      add\n        /* \"#utility.yul\":5257:5316   */\n      mstore\n        /* \"#utility.yul\":5348:5350   */\n      0x60\n        /* \"#utility.yul\":5333:5351   */\n      add\n      swap1\n        /* \"#utility.yul\":5004:5357   */\n      jump\t// out\n        /* \"#utility.yul\":5362:5607   */\n    tag_122:\n        /* \"#utility.yul\":5429:5435   */\n      0x00\n        /* \"#utility.yul\":5482:5484   */\n      0x20\n        /* \"#utility.yul\":5470:5479   */\n      dup3\n        /* \"#utility.yul\":5461:5468   */\n      dup5\n        /* \"#utility.yul\":5457:5480   */\n      sub\n        /* \"#utility.yul\":5453:5485   */\n      slt\n        /* \"#utility.yul\":5450:5502   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":5498:5499   */\n      0x00\n        /* \"#utility.yul\":5495:5496   */\n      dup1\n        /* \"#utility.yul\":5488:5500   */\n      revert\n        /* \"#utility.yul\":5450:5502   */\n    tag_503:\n        /* \"#utility.yul\":5530:5539   */\n      dup2\n        /* \"#utility.yul\":5524:5540   */\n      mload\n        /* \"#utility.yul\":5549:5577   */\n      tag_499\n        /* \"#utility.yul\":5571:5576   */\n      dup2\n        /* \"#utility.yul\":5549:5577   */\n      tag_462\n      jump\t// in\n        /* \"#utility.yul\":5612:6010   */\n    tag_125:\n        /* \"#utility.yul\":5814:5816   */\n      0x20\n        /* \"#utility.yul\":5796:5817   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5853:5855   */\n      0x22\n        /* \"#utility.yul\":5833:5851   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5826:5856   */\n      mstore\n        /* \"#utility.yul\":5892:5926   */\n      0x537943726f774261727465723a204261736520436f6e74726163742050617573\n        /* \"#utility.yul\":5887:5889   */\n      0x40\n        /* \"#utility.yul\":5872:5890   */\n      dup3\n      add\n        /* \"#utility.yul\":5865:5927   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":5958:5960   */\n      0x60\n        /* \"#utility.yul\":5943:5961   */\n      dup3\n      add\n        /* \"#utility.yul\":5936:5968   */\n      mstore\n        /* \"#utility.yul\":6000:6003   */\n      0x80\n        /* \"#utility.yul\":5985:6004   */\n      add\n      swap1\n        /* \"#utility.yul\":5612:6010   */\n      jump\t// out\n        /* \"#utility.yul\":6015:6412   */\n    tag_134:\n        /* \"#utility.yul\":6217:6219   */\n      0x20\n        /* \"#utility.yul\":6199:6220   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6256:6258   */\n      0x21\n        /* \"#utility.yul\":6236:6254   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6229:6259   */\n      mstore\n        /* \"#utility.yul\":6295:6329   */\n      0x537943726f774261727465723a20494e56414c49445f4241525445525f545950\n        /* \"#utility.yul\":6290:6292   */\n      0x40\n        /* \"#utility.yul\":6275:6293   */\n      dup3\n      add\n        /* \"#utility.yul\":6268:6330   */\n      mstore\n      shl(0xf8, 0x45)\n        /* \"#utility.yul\":6361:6363   */\n      0x60\n        /* \"#utility.yul\":6346:6364   */\n      dup3\n      add\n        /* \"#utility.yul\":6339:6370   */\n      mstore\n        /* \"#utility.yul\":6402:6405   */\n      0x80\n        /* \"#utility.yul\":6387:6406   */\n      add\n      swap1\n        /* \"#utility.yul\":6015:6412   */\n      jump\t// out\n        /* \"#utility.yul\":6417:6772   */\n    tag_138:\n        /* \"#utility.yul\":6619:6621   */\n      0x20\n        /* \"#utility.yul\":6601:6622   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6658:6660   */\n      0x1f\n        /* \"#utility.yul\":6638:6656   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6631:6661   */\n      mstore\n        /* \"#utility.yul\":6697:6730   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6692:6694   */\n      0x40\n        /* \"#utility.yul\":6677:6695   */\n      dup3\n      add\n        /* \"#utility.yul\":6670:6731   */\n      mstore\n        /* \"#utility.yul\":6763:6765   */\n      0x60\n        /* \"#utility.yul\":6748:6766   */\n      add\n      swap1\n        /* \"#utility.yul\":6417:6772   */\n      jump\t// out\n        /* \"#utility.yul\":6777:7182   */\n    tag_143:\n        /* \"#utility.yul\":6979:6981   */\n      0x20\n        /* \"#utility.yul\":6961:6982   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7018:7020   */\n      0x29\n        /* \"#utility.yul\":6998:7016   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6991:7021   */\n      mstore\n        /* \"#utility.yul\":7057:7091   */\n      0x537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f\n        /* \"#utility.yul\":7052:7054   */\n      0x40\n        /* \"#utility.yul\":7037:7055   */\n      dup3\n      add\n        /* \"#utility.yul\":7030:7092   */\n      mstore\n      shl(0xba, 0x149154555492549151)\n        /* \"#utility.yul\":7123:7125   */\n      0x60\n        /* \"#utility.yul\":7108:7126   */\n      dup3\n      add\n        /* \"#utility.yul\":7101:7140   */\n      mstore\n        /* \"#utility.yul\":7172:7175   */\n      0x80\n        /* \"#utility.yul\":7157:7176   */\n      add\n      swap1\n        /* \"#utility.yul\":6777:7182   */\n      jump\t// out\n        /* \"#utility.yul\":7536:7892   */\n    tag_189:\n        /* \"#utility.yul\":7738:7740   */\n      0x20\n        /* \"#utility.yul\":7720:7741   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7757:7775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7750:7780   */\n      mstore\n        /* \"#utility.yul\":7816:7850   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7811:7813   */\n      0x40\n        /* \"#utility.yul\":7796:7814   */\n      dup3\n      add\n        /* \"#utility.yul\":7789:7851   */\n      mstore\n        /* \"#utility.yul\":7883:7885   */\n      0x60\n        /* \"#utility.yul\":7868:7886   */\n      add\n      swap1\n        /* \"#utility.yul\":7536:7892   */\n      jump\t// out\n        /* \"#utility.yul\":7897:8081   */\n    tag_195:\n        /* \"#utility.yul\":7967:7973   */\n      0x00\n        /* \"#utility.yul\":8020:8022   */\n      0x20\n        /* \"#utility.yul\":8008:8017   */\n      dup3\n        /* \"#utility.yul\":7999:8006   */\n      dup5\n        /* \"#utility.yul\":7995:8018   */\n      sub\n        /* \"#utility.yul\":7991:8023   */\n      slt\n        /* \"#utility.yul\":7988:8040   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":8036:8037   */\n      0x00\n        /* \"#utility.yul\":8033:8034   */\n      dup1\n        /* \"#utility.yul\":8026:8038   */\n      revert\n        /* \"#utility.yul\":7988:8040   */\n    tag_512:\n      pop\n        /* \"#utility.yul\":8059:8075   */\n      mload\n      swap2\n        /* \"#utility.yul\":7897:8081   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8086:8533   */\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8373:8388   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":8355:8389   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8425:8440   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":8420:8422   */\n      0x20\n        /* \"#utility.yul\":8405:8423   */\n      dup4\n      add\n        /* \"#utility.yul\":8398:8441   */\n      mstore\n        /* \"#utility.yul\":8472:8474   */\n      0x40\n        /* \"#utility.yul\":8457:8475   */\n      dup3\n      add\n        /* \"#utility.yul\":8450:8484   */\n      mstore\n        /* \"#utility.yul\":8515:8517   */\n      0x60\n        /* \"#utility.yul\":8500:8518   */\n      dup2\n      add\n        /* \"#utility.yul\":8493:8527   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8304:8307   */\n      0x80\n        /* \"#utility.yul\":8289:8308   */\n      add\n      swap1\n        /* \"#utility.yul\":8086:8533   */\n      jump\t// out\n        /* \"#utility.yul\":10051:10178   */\n    tag_464:\n        /* \"#utility.yul\":10112:10122   */\n      0x4e487b71\n        /* \"#utility.yul\":10107:10110   */\n      0xe0\n        /* \"#utility.yul\":10103:10123   */\n      shl\n        /* \"#utility.yul\":10100:10101   */\n      0x00\n        /* \"#utility.yul\":10093:10124   */\n      mstore\n        /* \"#utility.yul\":10143:10147   */\n      0x11\n        /* \"#utility.yul\":10140:10141   */\n      0x04\n        /* \"#utility.yul\":10133:10148   */\n      mstore\n        /* \"#utility.yul\":10167:10171   */\n      0x24\n        /* \"#utility.yul\":10164:10165   */\n      0x00\n        /* \"#utility.yul\":10157:10172   */\n      revert\n        /* \"#utility.yul\":10183:10351   */\n    tag_300:\n        /* \"#utility.yul\":10223:10230   */\n      0x00\n        /* \"#utility.yul\":10289:10290   */\n      dup2\n        /* \"#utility.yul\":10285:10286   */\n      0x00\n        /* \"#utility.yul\":10281:10287   */\n      not\n        /* \"#utility.yul\":10277:10291   */\n      div\n        /* \"#utility.yul\":10274:10275   */\n      dup4\n        /* \"#utility.yul\":10271:10292   */\n      gt\n        /* \"#utility.yul\":10266:10267   */\n      dup3\n        /* \"#utility.yul\":10259:10268   */\n      iszero\n        /* \"#utility.yul\":10252:10269   */\n      iszero\n        /* \"#utility.yul\":10248:10293   */\n      and\n        /* \"#utility.yul\":10245:10316   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":10296:10314   */\n      tag_521\n      tag_464\n      jump\t// in\n    tag_521:\n      pop\n        /* \"#utility.yul\":10336:10345   */\n      mul\n      swap1\n        /* \"#utility.yul\":10183:10351   */\n      jump\t// out\n        /* \"#utility.yul\":10356:10573   */\n    tag_302:\n        /* \"#utility.yul\":10396:10397   */\n      0x00\n        /* \"#utility.yul\":10422:10423   */\n      dup3\n        /* \"#utility.yul\":10412:10544   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":10466:10476   */\n      0x4e487b71\n        /* \"#utility.yul\":10461:10464   */\n      0xe0\n        /* \"#utility.yul\":10457:10477   */\n      shl\n        /* \"#utility.yul\":10454:10455   */\n      0x00\n        /* \"#utility.yul\":10447:10478   */\n      mstore\n        /* \"#utility.yul\":10501:10505   */\n      0x12\n        /* \"#utility.yul\":10498:10499   */\n      0x04\n        /* \"#utility.yul\":10491:10506   */\n      mstore\n        /* \"#utility.yul\":10529:10533   */\n      0x24\n        /* \"#utility.yul\":10526:10527   */\n      0x00\n        /* \"#utility.yul\":10519:10534   */\n      revert\n        /* \"#utility.yul\":10412:10544   */\n    tag_523:\n      pop\n        /* \"#utility.yul\":10558:10567   */\n      div\n      swap1\n        /* \"#utility.yul\":10356:10573   */\n      jump\t// out\n        /* \"#utility.yul\":10578:10705   */\n    tag_309:\n        /* \"#utility.yul\":10639:10649   */\n      0x4e487b71\n        /* \"#utility.yul\":10634:10637   */\n      0xe0\n        /* \"#utility.yul\":10630:10650   */\n      shl\n        /* \"#utility.yul\":10627:10628   */\n      0x00\n        /* \"#utility.yul\":10620:10651   */\n      mstore\n        /* \"#utility.yul\":10670:10674   */\n      0x41\n        /* \"#utility.yul\":10667:10668   */\n      0x04\n        /* \"#utility.yul\":10660:10675   */\n      mstore\n        /* \"#utility.yul\":10694:10698   */\n      0x24\n        /* \"#utility.yul\":10691:10692   */\n      0x00\n        /* \"#utility.yul\":10684:10699   */\n      revert\n        /* \"#utility.yul\":10710:10837   */\n    tag_322:\n        /* \"#utility.yul\":10771:10781   */\n      0x4e487b71\n        /* \"#utility.yul\":10766:10769   */\n      0xe0\n        /* \"#utility.yul\":10762:10782   */\n      shl\n        /* \"#utility.yul\":10759:10760   */\n      0x00\n        /* \"#utility.yul\":10752:10783   */\n      mstore\n        /* \"#utility.yul\":10802:10806   */\n      0x32\n        /* \"#utility.yul\":10799:10800   */\n      0x04\n        /* \"#utility.yul\":10792:10807   */\n      mstore\n        /* \"#utility.yul\":10826:10830   */\n      0x24\n        /* \"#utility.yul\":10823:10824   */\n      0x00\n        /* \"#utility.yul\":10816:10831   */\n      revert\n        /* \"#utility.yul\":10842:10977   */\n    tag_337:\n        /* \"#utility.yul\":10881:10884   */\n      0x00\n        /* \"#utility.yul\":10902:10919   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10899:10942   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":10922:10940   */\n      tag_528\n      tag_464\n      jump\t// in\n    tag_528:\n      pop\n        /* \"#utility.yul\":10969:10970   */\n      0x01\n        /* \"#utility.yul\":10958:10971   */\n      add\n      swap1\n        /* \"#utility.yul\":10842:10977   */\n      jump\t// out\n        /* \"#utility.yul\":11389:11787   */\n    tag_355:\n        /* \"#utility.yul\":11591:11593   */\n      0x20\n        /* \"#utility.yul\":11573:11594   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11630:11632   */\n      0x22\n        /* \"#utility.yul\":11610:11628   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11603:11633   */\n      mstore\n        /* \"#utility.yul\":11669:11703   */\n      0x537943726f774261727465723a20494e53554646494349454e545f42414c414e\n        /* \"#utility.yul\":11664:11666   */\n      0x40\n        /* \"#utility.yul\":11649:11667   */\n      dup3\n      add\n        /* \"#utility.yul\":11642:11704   */\n      mstore\n      shl(0xf0, 0x4345)\n        /* \"#utility.yul\":11735:11737   */\n      0x60\n        /* \"#utility.yul\":11720:11738   */\n      dup3\n      add\n        /* \"#utility.yul\":11713:11745   */\n      mstore\n        /* \"#utility.yul\":11777:11780   */\n      0x80\n        /* \"#utility.yul\":11762:11781   */\n      add\n      swap1\n        /* \"#utility.yul\":11389:11787   */\n      jump\t// out\n        /* \"#utility.yul\":11792:12199   */\n    tag_363:\n        /* \"#utility.yul\":11994:11996   */\n      0x20\n        /* \"#utility.yul\":11976:11997   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12033:12035   */\n      0x2b\n        /* \"#utility.yul\":12013:12031   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12006:12036   */\n      mstore\n        /* \"#utility.yul\":12072:12106   */\n      0x537943726f774261727465723a20494e53554646494349454e545f434f4e5452\n        /* \"#utility.yul\":12067:12069   */\n      0x40\n        /* \"#utility.yul\":12052:12070   */\n      dup3\n      add\n        /* \"#utility.yul\":12045:12107   */\n      mstore\n      shl(0xa8, 0x4143545f42414c414e4345)\n        /* \"#utility.yul\":12138:12140   */\n      0x60\n        /* \"#utility.yul\":12123:12141   */\n      dup3\n      add\n        /* \"#utility.yul\":12116:12157   */\n      mstore\n        /* \"#utility.yul\":12189:12192   */\n      0x80\n        /* \"#utility.yul\":12174:12193   */\n      add\n      swap1\n        /* \"#utility.yul\":11792:12199   */\n      jump\t// out\n        /* \"#utility.yul\":12204:12332   */\n    tag_373:\n        /* \"#utility.yul\":12244:12247   */\n      0x00\n        /* \"#utility.yul\":12275:12276   */\n      dup3\n        /* \"#utility.yul\":12271:12277   */\n      not\n        /* \"#utility.yul\":12268:12269   */\n      dup3\n        /* \"#utility.yul\":12265:12278   */\n      gt\n        /* \"#utility.yul\":12262:12301   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":12281:12299   */\n      tag_534\n      tag_464\n      jump\t// in\n    tag_534:\n      pop\n        /* \"#utility.yul\":12317:12326   */\n      add\n      swap1\n        /* \"#utility.yul\":12204:12332   */\n      jump\t// out\n        /* \"#utility.yul\":12337:12763   */\n    tag_406:\n        /* \"#utility.yul\":12466:12469   */\n      0x00\n        /* \"#utility.yul\":12504:12510   */\n      dup3\n        /* \"#utility.yul\":12498:12511   */\n      mload\n        /* \"#utility.yul\":12529:12530   */\n      0x00\n        /* \"#utility.yul\":12539:12668   */\n    tag_536:\n        /* \"#utility.yul\":12553:12559   */\n      dup2\n        /* \"#utility.yul\":12550:12551   */\n      dup2\n        /* \"#utility.yul\":12547:12560   */\n      lt\n        /* \"#utility.yul\":12539:12668   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":12651:12655   */\n      0x20\n        /* \"#utility.yul\":12635:12649   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":12631:12656   */\n      dup2\n      add\n        /* \"#utility.yul\":12625:12657   */\n      mload\n        /* \"#utility.yul\":12612:12623   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":12605:12658   */\n      mstore\n        /* \"#utility.yul\":12568:12580   */\n      add\n        /* \"#utility.yul\":12539:12668   */\n      jump(tag_536)\n    tag_538:\n        /* \"#utility.yul\":12686:12692   */\n      dup2\n        /* \"#utility.yul\":12683:12684   */\n      dup2\n        /* \"#utility.yul\":12680:12693   */\n      gt\n        /* \"#utility.yul\":12677:12725   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":12721:12722   */\n      0x00\n        /* \"#utility.yul\":12712:12718   */\n      dup3\n        /* \"#utility.yul\":12707:12710   */\n      dup6\n        /* \"#utility.yul\":12703:12719   */\n      add\n        /* \"#utility.yul\":12696:12723   */\n      mstore\n        /* \"#utility.yul\":12677:12725   */\n    tag_539:\n      pop\n        /* \"#utility.yul\":12741:12757   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":12337:12763   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207b409e083d708ffbf307e2d16b4e25b1559346863d3880ac8fcfc49974c5c51e64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_123": {
									"entryPoint": null,
									"id": 123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_299": {
									"entryPoint": null,
									"id": 299,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 52,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040526005805460ff60a81b1916905534801561001d57600080fd5b5061002733610034565b6001805533608052610084565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6080516122776100d0600039600081816102e1015281816103e801528181610594015281816109ea01528181610b0201528181610c54015281816114dd015261178c01526122776000f3fe6080604052600436106101015760003560e01c8063715018a61161008f578063c45a015511610061578063c45a0155146102cf578063c6ea703814610303578063dab5a8df1461031d578063e43372e91461033d578063f2fde38b1461036157005b8063715018a61461022c57806389523742146102415780638da5cb5b14610268578063aa6ca8081461029a57005b80633ccfd60b116100d35780633ccfd60b146101a45780633d370b4e146101b957806340a6f1ab146101e35780634341f920146101f95780635f5780e51461020c57005b80630d1826051461010a57806329dcb0cf1461012a5780632ffc6887146101535780633072cf601461017357005b3661010857005b005b34801561011657600080fd5b50610108610125366004611cea565b610381565b34801561013657600080fd5b5061014060045481565b6040519081526020015b60405180910390f35b34801561015f57600080fd5b5061010861016e366004611cea565b610536565b34801561017f57600080fd5b5060055461019490600160a81b900460ff1681565b604051901515815260200161014a565b3480156101b057600080fd5b506101086106d8565b3480156101c557600080fd5b506101ce610a6a565b6040805192835260208301919091520161014a565b3480156101ef57600080fd5b5061014060025481565b610108610207366004611cea565b610aa4565b34801561021857600080fd5b50610194610227366004611d2d565b610c47565b34801561023857600080fd5b50610108610ef0565b34801561024d57600080fd5b5060055461025b9060ff1681565b60405161014a9190611dcd565b34801561027457600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161014a565b3480156102a657600080fd5b506102af610f26565b604080516001600160a01b0393841681529290911660208301520161014a565b3480156102db57600080fd5b506102827f000000000000000000000000000000000000000000000000000000000000000081565b34801561030f57600080fd5b506003546101949060ff1681565b34801561032957600080fd5b50610140610338366004611cea565b610f6d565b34801561034957600080fd5b50610352610f90565b60405161014a93929190611e30565b34801561036d57600080fd5b5061010861037c366004611ea5565b6111b6565b42600454101580156103965750600954600254105b6103bb5760405162461bcd60e51b81526004016103b290611ec7565b60405180910390fd5b600554600160a81b900460ff166103e45760405162461bcd60e51b81526004016103b290611ef7565b60007f00000000000000000000000000000000000000000000000000000000000000009050806001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b9190611f2e565b156104885760405162461bcd60e51b81526004016103b290611f4b565b60055460009060ff1660028111156104a2576104a2611db7565b8160028111156104b4576104b4611db7565b146104d15760405162461bcd60e51b81526004016103b290611f8d565b6002600154036104f35760405162461bcd60e51b81526004016103b290611fce565b600260015560035460ff16610524576009548310156105245760405162461bcd60e51b81526004016103b290612005565b61052d83611251565b50506001805550565b426004541015801561054b5750600954600254105b6105675760405162461bcd60e51b81526004016103b290611ec7565b600554600160a81b900460ff166105905760405162461bcd60e51b81526004016103b290611ef7565b60007f00000000000000000000000000000000000000000000000000000000000000009050806001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190611f2e565b156106345760405162461bcd60e51b81526004016103b290611f4b565b60055460029060ff168181111561064d5761064d611db7565b81600281111561065f5761065f611db7565b1461067c5760405162461bcd60e51b81526004016103b290611f8d565b60026001540361069e5760405162461bcd60e51b81526004016103b290611fce565b600260015560035460ff166106cf576009548310156106cf5760405162461bcd60e51b81526004016103b290612005565b61052d8361155a565b4260045410806106ec575060095460025410155b61072f5760405162461bcd60e51b8152602060048201526014602482015273537943726f774261727465723a2041435449564560601b60448201526064016103b2565b600554600160a81b900460ff166107585760405162461bcd60e51b81526004016103b290611ef7565b6000546001600160a01b031633146107825760405162461bcd60e51b81526004016103b29061204e565b6005546040516370a0823160e01b81523060048201526101009091046001600160a01b03169060009082906370a0823190602401602060405180830381865afa1580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f79190612083565b9050801561086b57600554604051632e1a7d4d60e01b8152600481018390526101009091046001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561084957600080fd5b505af115801561085d573d6000803e3d6000fd5b5050505061086b3382611808565b6007546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190612083565b905080156108f7576007546108f7906001600160a01b031633836118d6565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190612083565b9050801561098357600654610983906001600160a01b031633836118d6565b6000808060055460ff16600281111561099e5761099e611db7565b036109ad5750839050826109db565b600260055460ff1660028111156109c6576109c6611db7565b036109d55750819050826109db565b50819050835b6040516319bcb50760e11b81527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038216906333796a0e90610a2f90309033908890889060040161209c565b600060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b5050505050505050505050565b6005546000908190600160a81b900460ff16610a985760405162461bcd60e51b81526004016103b290611ef7565b50506008546009549091565b4260045410158015610ab95750600954600254105b610ad55760405162461bcd60e51b81526004016103b290611ec7565b600554600160a81b900460ff16610afe5760405162461bcd60e51b81526004016103b290611ef7565b60007f00000000000000000000000000000000000000000000000000000000000000009050806001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190611f2e565b15610ba25760405162461bcd60e51b81526004016103b290611f4b565b60055460019060ff166002811115610bbc57610bbc611db7565b816002811115610bce57610bce611db7565b14610beb5760405162461bcd60e51b81526004016103b290611f8d565b600260015403610c0d5760405162461bcd60e51b81526004016103b290611fce565b600260015560035460ff16610c3e57600954341015610c3e5760405162461bcd60e51b81526004016103b290612005565b61052d836119f1565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cc15760405162461bcd60e51b815260206004820152601760248201527f537943726f774261727465723a20464f5242494444454e00000000000000000060448201526064016103b2565b600554600160a81b900460ff1615610d255760405162461bcd60e51b815260206004820152602160248201527f537943726f774261727465723a20414c52454144595f494e495449414c495a456044820152601160fa1b60648201526084016103b2565b42841015610d755760405162461bcd60e51b815260206004820152601b60248201527f537943726f774261727465723a20504153545f444541444c494e45000000000060448201526064016103b2565b6040516370a0823160e01b815230600482015286906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddf9190612083565b1015610e385760405162461bcd60e51b815260206004820152602260248201527f537943726f774261727465723a20494e53554646494349454e545f4445504f53604482015261125560f21b60648201526084016103b2565b6004849055600680546001600160a01b03808b166001600160a01b03199283161790925560078054928a169290911691909117905560088690556009859055600580548a919060ff19166001836002811115610e9657610e96611db7565b0217905550506003805483151560ff199091161790556005805460ff60a81b196001600160a01b0384166101000216610100600160b01b031990911617600160a81b90811791829055900460ff1698975050505050505050565b6000546001600160a01b03163314610f1a5760405162461bcd60e51b81526004016103b29061204e565b610f246000611b6a565b565b6005546000908190600160a81b900460ff16610f545760405162461bcd60e51b81526004016103b290611ef7565b50506006546007546001600160a01b0391821691169091565b600060095460085483610f8091906120db565b610f8a91906120fa565b92915050565b6060806060600560159054906101000a900460ff16610fc15760405162461bcd60e51b81526004016103b290611ef7565b600a5460009067ffffffffffffffff811115610fdf57610fdf61211c565b604051908082528060200260200182016040528015611008578160200160208202803683370190505b50600a5490915060009067ffffffffffffffff81111561102a5761102a61211c565b604051908082528060200260200182016040528015611053578160200160208202803683370190505b50600a5490915060009067ffffffffffffffff8111156110755761107561211c565b60405190808252806020026020018201604052801561109e578160200160208202803683370190505b50905060005b600a548110156111a957600a81815481106110c1576110c1612132565b600091825260209091206003909102015484516001600160a01b03909116908590839081106110f2576110f2612132565b60200260200101906001600160a01b031690816001600160a01b031681525050600a818154811061112557611125612132565b90600052602060002090600302016001015483828151811061114957611149612132565b602002602001018181525050600a818154811061116857611168612132565b90600052602060002090600302016002015482828151811061118c5761118c612132565b6020908102919091010152806111a181612148565b9150506110a4565b5091945092509050909192565b6000546001600160a01b031633146111e05760405162461bcd60e51b81526004016103b29061204e565b6001600160a01b0381166112455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b2565b61124e81611b6a565b50565b6007546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bd9190612083565b10156112db5760405162461bcd60e51b81526004016103b290612161565b60006112e682610f6d565b6005546040516370a0823160e01b815230600482015291925061010090046001600160a01b031690829082906370a0823190602401602060405180830381865afa158015611338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135c9190612083565b101561137a5760405162461bcd60e51b81526004016103b2906121a3565b600754611392906001600160a01b0316333086611bba565b600554604051632e1a7d4d60e01b8152600481018490526101009091046001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156113dc57600080fd5b505af11580156113f0573d6000803e3d6000fd5b505050506113fe3383611808565b6040805160608101825233815260208101858152918101848152600a805460018101825560009190915291517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8600390930292830180546001600160a01b0319166001600160a01b0390921691909117905591517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a982015590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa909101556002546114cb9084906121ee565b60025560405163f52701b760e01b81527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063f52701b79061152290309033908990899060040161209c565b600060405180830381600087803b15801561153c57600080fd5b505af1158015611550573d6000803e3d6000fd5b5050505050505050565b6007546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156115a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c69190612083565b10156115e45760405162461bcd60e51b81526004016103b290612161565b60006115ef82610f6d565b6006546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561163c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116609190612083565b101561167e5760405162461bcd60e51b81526004016103b2906121a3565b600754611696906001600160a01b0316333085611bba565b6006546116ad906001600160a01b031633836118d6565b6040805160608101825233815260208101848152918101838152600a805460018101825560009190915291517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8600390930292830180546001600160a01b0319166001600160a01b0390921691909117905591517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a982015590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa9091015560025461177a9083906121ee565b60025560405163f52701b760e01b81527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063f52701b7906117d190309033908890889060040161209c565b600060405180830381600087803b1580156117eb57600080fd5b505af11580156117ff573d6000803e3d6000fd5b50505050505050565b604080516000808252602082019092526001600160a01b0384169083906040516118329190612206565b60006040518083038185875af1925050503d806000811461186f576040519150601f19603f3d011682016040523d82523d6000602084013e611874565b606091505b50509050806118d15760405162461bcd60e51b815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201526213115160ea1b60648201526084016103b2565b505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916119329190612206565b6000604051808303816000865af19150503d806000811461196f576040519150601f19603f3d011682016040523d82523d6000602084013e611974565b606091505b509150915081801561199e57508051158061199e57508080602001905181019061199e9190611f2e565b6119ea5760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c45440060448201526064016103b2565b5050505050565b348114611a4e5760405162461bcd60e51b815260206004820152602560248201527f537943726f774261727465723a204d554c54495f54524144455f4e4f545f454e604482015264105093115160da1b60648201526084016103b2565b6000611a5982610f6d565b6006546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611aa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aca9190612083565b1015611ae85760405162461bcd60e51b81526004016103b2906121a3565b600560019054906101000a90046001600160a01b03166001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b3857600080fd5b505af1158015611b4c573d6000803e3d6000fd5b50506006546116ad93506001600160a01b03169150339050836118d6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691611c1e9190612206565b6000604051808303816000865af19150503d8060008114611c5b576040519150601f19603f3d011682016040523d82523d6000602084013e611c60565b606091505b5091509150818015611c8a575080511580611c8a575080806020019051810190611c8a9190611f2e565b611ce25760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b60648201526084016103b2565b505050505050565b600060208284031215611cfc57600080fd5b5035919050565b80356001600160a01b0381168114611d1a57600080fd5b919050565b801515811461124e57600080fd5b600080600080600080600080610100898b031215611d4a57600080fd5b883560038110611d5957600080fd5b9750611d6760208a01611d03565b9650611d7560408a01611d03565b9550606089013594506080890135935060a0890135925060c0890135611d9a81611d1f565b9150611da860e08a01611d03565b90509295985092959890939650565b634e487b7160e01b600052602160045260246000fd5b6020810160038310611def57634e487b7160e01b600052602160045260246000fd5b91905290565b600081518084526020808501945080840160005b83811015611e2557815187529582019590820190600101611e09565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b82811015611e725781516001600160a01b031684529284019290840190600101611e4d565b50505083810382850152611e868187611df5565b9150508281036040840152611e9b8185611df5565b9695505050505050565b600060208284031215611eb757600080fd5b611ec082611d03565b9392505050565b602080825260169082015275537943726f774261727465723a20494e41435449564560501b604082015260600190565b6020808252601d908201527f537943726f774261727465723a204e4f545f494e495449414c495a4544000000604082015260600190565b600060208284031215611f4057600080fd5b8151611ec081611d1f565b60208082526022908201527f537943726f774261727465723a204261736520436f6e74726163742050617573604082015261195960f21b606082015260800190565b60208082526021908201527f537943726f774261727465723a20494e56414c49445f4241525445525f5459506040820152604560f81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526029908201527f537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f60408201526814915455549254915160ba1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561209557600080fd5b5051919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156120f5576120f56120c5565b500290565b60008261211757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161215a5761215a6120c5565b5060010190565b60208082526022908201527f537943726f774261727465723a20494e53554646494349454e545f42414c414e604082015261434560f01b606082015260800190565b6020808252602b908201527f537943726f774261727465723a20494e53554646494349454e545f434f4e545260408201526a4143545f42414c414e434560a81b606082015260800190565b60008219821115612201576122016120c5565b500190565b6000825160005b81811015612227576020818601810151858301520161220d565b81811115612236576000828501525b50919091019291505056fea26469706673582212207b409e083d708ffbf307e2d16b4e25b1559346863d3880ac8fcfc49974c5c51e64736f6c634300080d0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27 CALLER PUSH2 0x34 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE CALLER PUSH1 0x80 MSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2277 PUSH2 0xD0 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2E1 ADD MSTORE DUP2 DUP2 PUSH2 0x3E8 ADD MSTORE DUP2 DUP2 PUSH2 0x594 ADD MSTORE DUP2 DUP2 PUSH2 0x9EA ADD MSTORE DUP2 DUP2 PUSH2 0xB02 ADD MSTORE DUP2 DUP2 PUSH2 0xC54 ADD MSTORE DUP2 DUP2 PUSH2 0x14DD ADD MSTORE PUSH2 0x178C ADD MSTORE PUSH2 0x2277 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8F JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0x61 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xC6EA7038 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xDAB5A8DF EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xE43372E9 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x361 JUMPI STOP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x89523742 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x29A JUMPI STOP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x3D370B4E EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x40A6F1AB EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x4341F920 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x5F5780E5 EQ PUSH2 0x20C JUMPI STOP JUMPDEST DUP1 PUSH4 0xD182605 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x2FFC6887 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x3072CF60 EQ PUSH2 0x173 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x108 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x194 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x6D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0xC47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0xEF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x25B SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x194 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0xF6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x352 PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x2 SLOAD LT JUMPDEST PUSH2 0x3BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4A2 JUMPI PUSH2 0x4A2 PUSH2 0x1DB7 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4B4 JUMPI PUSH2 0x4B4 PUSH2 0x1DB7 JUMP JUMPDEST EQ PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x524 JUMPI PUSH1 0x9 SLOAD DUP4 LT ISZERO PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x52D DUP4 PUSH2 0x1251 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x54B JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x2 SLOAD LT JUMPDEST PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x2 SWAP1 PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x64D JUMPI PUSH2 0x64D PUSH2 0x1DB7 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x65F JUMPI PUSH2 0x65F PUSH2 0x1DB7 JUMP JUMPDEST EQ PUSH2 0x67C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x6CF JUMPI PUSH1 0x9 SLOAD DUP4 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x52D DUP4 PUSH2 0x155A JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD LT DUP1 PUSH2 0x6EC JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x2 SLOAD LT ISZERO JUMPDEST PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x537943726F774261727465723A20414354495645 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x86B JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x849 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x85D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x86B CALLER DUP3 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x7 SLOAD PUSH2 0x8F7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x940 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x983 JUMPI PUSH1 0x6 SLOAD PUSH2 0x983 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x99E JUMPI PUSH2 0x99E PUSH2 0x1DB7 JUMP JUMPDEST SUB PUSH2 0x9AD JUMPI POP DUP4 SWAP1 POP DUP3 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C6 JUMPI PUSH2 0x9C6 PUSH2 0x1DB7 JUMP JUMPDEST SUB PUSH2 0x9D5 JUMPI POP DUP2 SWAP1 POP DUP3 PUSH2 0x9DB JUMP JUMPDEST POP DUP2 SWAP1 POP DUP4 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19BCB507 PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x33796A0E SWAP1 PUSH2 0xA2F SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x209C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST POP POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP1 SWAP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xAB9 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x2 SLOAD LT JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBBC JUMPI PUSH2 0xBBC PUSH2 0x1DB7 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBCE JUMPI PUSH2 0xBCE PUSH2 0x1DB7 JUMP JUMPDEST EQ PUSH2 0xBEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0xC3E JUMPI PUSH1 0x9 SLOAD CALLVALUE LT ISZERO PUSH2 0xC3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x52D DUP4 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xCC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20464F5242494444454E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20414C52454144595F494E495449414C495A45 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20504153545F444541444C494E450000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDDF SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F4445504F53 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x4 DUP5 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 DUP7 SWAP1 SSTORE PUSH1 0x9 DUP6 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP11 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE96 JUMPI PUSH2 0xE96 PUSH2 0x1DB7 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x3 DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x100 MUL AND PUSH2 0x100 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DUP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DIV PUSH1 0xFF AND SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH2 0xF24 PUSH1 0x0 PUSH2 0x1B6A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x20FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDF JUMPI PUSH2 0xFDF PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1008 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102A JUMPI PUSH2 0x102A PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1053 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1075 PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x109E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x11A9 JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10C1 JUMPI PUSH2 0x10C1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x10F2 JUMPI PUSH2 0x10F2 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1125 JUMPI PUSH2 0x1125 PUSH2 0x2132 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1149 JUMPI PUSH2 0x1149 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1168 JUMPI PUSH2 0x1168 PUSH2 0x2132 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x118C JUMPI PUSH2 0x118C PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x11A1 DUP2 PUSH2 0x2148 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10A4 JUMP JUMPDEST POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x124E DUP2 PUSH2 0x1B6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1299 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12BD SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E6 DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1338 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1392 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x13FE CALLER DUP4 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 DUP2 MSTORE SWAP2 DUP2 ADD DUP5 DUP2 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x3 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA SWAP1 SWAP2 ADD SSTORE PUSH1 0x2 SLOAD PUSH2 0x14CB SWAP1 DUP5 SWAP1 PUSH2 0x21EE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF52701B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF52701B7 SWAP1 PUSH2 0x1522 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x209C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x153C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1550 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15C6 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EF DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x163C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1660 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0x167E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1696 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x16AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP2 MSTORE SWAP2 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x3 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA SWAP1 SWAP2 ADD SSTORE PUSH1 0x2 SLOAD PUSH2 0x177A SWAP1 DUP4 SWAP1 PUSH2 0x21EE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF52701B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF52701B7 SWAP1 PUSH2 0x17D1 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x209C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1832 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x186F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x18D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A204554485F5452414E534645525F464149 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x131151 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x196F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x199E JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x199E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x199E SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH2 0x19EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP2 EQ PUSH2 0x1A4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204D554C54495F54524144455F4E4F545F454E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1050931151 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A59 DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACA SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0x1AE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH2 0x16AD SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP CALLER SWAP1 POP DUP4 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x1C1E SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C5B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1C8A JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1C8A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C8A SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH2 0x1CE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x124E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1D4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1D59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP8 POP PUSH2 0x1D67 PUSH1 0x20 DUP11 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP7 POP PUSH2 0x1D75 PUSH1 0x40 DUP11 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x1D9A DUP2 PUSH2 0x1D1F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA8 PUSH1 0xE0 DUP11 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1DEF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E25 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E09 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E72 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E4D JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1E86 DUP2 DUP8 PUSH2 0x1DF5 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E9B DUP2 DUP6 PUSH2 0x1DF5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC0 DUP3 PUSH2 0x1D03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x537943726F774261727465723A20494E414354495645 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204E4F545F494E495449414C495A4544000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1EC0 DUP2 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204261736520436F6E74726163742050617573 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E56414C49445F4241525445525F545950 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20414D4F554E545F4C4F5745525F5448414E5F PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x149154555492549151 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x20F5 JUMPI PUSH2 0x20F5 PUSH2 0x20C5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2117 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x215A JUMPI PUSH2 0x215A PUSH2 0x20C5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F42414C414E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x4345 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F434F4E5452 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x4143545F42414C414E4345 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2201 JUMPI PUSH2 0x2201 PUSH2 0x20C5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2227 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x220D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2236 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x409E083D708FFBF307E2D16B4E25B1559346863D3880AC8FCFC49974 0xC5 0xC5 0x1E PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "332:10180:3:-:0;;;620:32;;;-1:-1:-1;;;;620:32:3;;;1824:51;;;;;;;;;-1:-1:-1;921:32:0;719:10:2;921:18:0;:32::i;:::-;1701:1:1;1806:22;;1858:10:3;1848:20;;332:10180;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;332:10180:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1109": {
									"entryPoint": null,
									"id": 1109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_initialized_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_tradeEthForToken_925": {
									"entryPoint": 6641,
									"id": 925,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_tradeTokenForEth_836": {
									"entryPoint": 4689,
									"id": 836,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_tradeTokenForToken_726": {
									"entryPoint": 5466,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 7018,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowMultiBarter_187": {
									"entryPoint": null,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@barterType_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deadline_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@factory_183": {
									"entryPoint": null,
									"id": 183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAmounts_412": {
									"entryPoint": 2666,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getTokens_427": {
									"entryPoint": 3878,
									"id": 427,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getTradeOutAmount_1105": {
									"entryPoint": 3949,
									"id": 1105,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTrades_524": {
									"entryPoint": 3984,
									"id": 524,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@initialize_397": {
									"entryPoint": 3143,
									"id": 397,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 3824,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferETH_1504": {
									"entryPoint": 6152,
									"id": 1504,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1479": {
									"entryPoint": 7098,
									"id": 1479,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1433": {
									"entryPoint": 6358,
									"id": 1433,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalTradeAmount_185": {
									"entryPoint": null,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradeEthForToken_627": {
									"entryPoint": 2724,
									"id": 627,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tradeTokenForEth_592": {
									"entryPoint": 897,
									"id": 592,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tradeTokenForToken_558": {
									"entryPoint": 1334,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 4534,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1090": {
									"entryPoint": 1752,
									"id": 1090,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 7427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_ISyCrowBarterType_$1130t_addresst_addresst_uint256t_uint256t_uint256t_boolt_address": {
									"entryPoint": 7469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 7669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8348,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7728,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_ISyCrowBarterType_$1130__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_08e3709bf4c0b831cf8bc5788c36b99c92ad6a02cff038f75ddd0795dadbe1e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_53c2ce6ed47c179816a9c6f0033c5d03f04949b869cef6fd14d5246b67912975__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a273cae0d429ffac620d41ddcccea1b71b9e6e453a8ce90983b3e22305b1505__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60471f58a070287600518638a3de995e7f8b72f058b8593fb94e6702bacc457b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79383cfc7011af228083c91a74f19d88be46e1e2713e67b50fb07b6b50771355__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b599e4ab958a4499af0e5f2ac52329fcb13f4955c7283e3523e952de95899b8c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c34f7dbf762d3d0b96bf148f8cc4593d2b9473ef3d73cd2c557f8a9dbd3100e5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd025a8b4dac45f94633765487ac16f8ad7e1a6ee7e724cd8d9bc6ef3ad676e1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e50a0ae171cffc9efca2ecf30038ab4bcc5d422964b87e2fe386b4e70f368d12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e99d902835ef330efdeb5defc7644c488a1d9bd398555c575e8f17cb2a43c8b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7607,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 7455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14999:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nodeType": "YulIf",
															"src": "94:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:9",
														"type": ""
													}
												],
												"src": "199:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "486:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "494:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "486:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "528:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "553:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "546:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "546:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "539:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "539:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "521:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "445:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "456:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "467:4:9",
														"type": ""
													}
												],
												"src": "381:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "702:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "712:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "724:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "720:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "720:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "712:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "754:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "765:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "792:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "803:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "808:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "781:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "781:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "663:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "674:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "682:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "693:4:9",
														"type": ""
													}
												],
												"src": "573:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "875:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "885:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "907:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "894:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "977:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "986:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "979:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "979:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "979:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "936:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "947:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "962:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "967:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "958:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "958:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "971:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "954:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "954:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "943:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "943:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "933:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "926:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:50:9"
															},
															"nodeType": "YulIf",
															"src": "923:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "854:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "865:5:9",
														"type": ""
													}
												],
												"src": "826:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1100:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1102:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1102:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1102:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1090:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1083:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1083:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1076:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:40:9"
															},
															"nodeType": "YulIf",
															"src": "1056:60:9"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1035:5:9",
														"type": ""
													}
												],
												"src": "1004:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:636:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1382:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1391:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1394:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1384:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1384:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1384:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1356:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1365:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1352:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1352:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:3:9",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:33:9"
															},
															"nodeType": "YulIf",
															"src": "1345:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1407:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1420:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1411:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1476:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1485:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1488:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1478:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1478:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1478:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1465:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1472:1:9",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1462:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1462:12:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1455:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:20:9"
															},
															"nodeType": "YulIf",
															"src": "1452:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1501:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1511:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1525:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1569:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1554:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1554:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1535:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1582:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1615:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1626:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1611:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1592:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:38:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1582:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1639:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1666:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1677:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1662:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1662:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1649:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1649:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1639:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1690:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1728:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1713:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1713:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1700:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:33:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1742:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1769:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1780:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1765:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1765:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1752:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:33:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1794:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1826:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1837:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1822:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:33:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1798:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1873:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1851:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1851:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1890:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1900:7:9"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "1890:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1916:49:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1949:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1960:3:9",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1945:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1945:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1926:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:39:9"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_ISyCrowBarterType_$1130t_addresst_addresst_uint256t_uint256t_uint256t_boolt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1245:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1256:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1268:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1276:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1284:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1292:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1300:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1308:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1316:6:9",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "1324:6:9",
														"type": ""
													}
												],
												"src": "1127:844:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2025:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2032:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2037:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2018:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2065:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2068:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2058:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2058:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2058:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2089:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2082:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2082:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1976:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2229:229:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2239:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2251:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2239:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2307:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2335:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2340:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2331:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2331:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2321:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2321:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2321:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2372:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:4:9",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2365:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2365:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2400:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2403:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2393:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2393:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2393:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2287:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2295:1:9",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2284:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2284:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:21:9"
															},
															"nodeType": "YulIf",
															"src": "2274:144:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2434:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2445:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2427:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_ISyCrowBarterType_$1130__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2198:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2209:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2220:4:9",
														"type": ""
													}
												],
												"src": "2108:350:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2564:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2574:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2586:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2574:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2616:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2631:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2647:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2652:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2643:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2643:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2656:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2639:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2639:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2609:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2609:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2533:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2544:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2555:4:9",
														"type": ""
													}
												],
												"src": "2463:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2800:175:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2810:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2822:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2818:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2818:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2810:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2845:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2863:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2868:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2859:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2859:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2855:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2849:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2890:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2905:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2913:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2901:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2901:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2883:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2937:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2948:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2933:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2933:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2957:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2965:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2953:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2953:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2926:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2926:43:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2761:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2772:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2780:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2791:4:9",
														"type": ""
													}
												],
												"src": "2671:304:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3041:374:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3071:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3065:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3055:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3093:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3098:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3086:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3086:19:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3114:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3124:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3118:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3137:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3148:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3153:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3144:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:12:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3137:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3165:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3183:5:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3190:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3179:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:14:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3169:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3202:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3211:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3206:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3270:120:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3291:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3302:6:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3296:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3296:13:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3284:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3284:26:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3284:26:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3323:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3334:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3339:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3330:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3323:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3355:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3369:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3377:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3365:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3365:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3355:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3232:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3235:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3229:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3243:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3245:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3254:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3257:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3250:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3245:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3225:3:9",
																"statements": []
															},
															"src": "3221:169:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3399:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3406:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3399:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3018:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3025:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3033:3:9",
														"type": ""
													}
												],
												"src": "2980:435:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3727:730:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3737:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3755:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3766:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3751:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3741:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3785:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3796:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3778:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3808:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3819:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3812:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3834:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3854:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3848:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3838:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3877:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3885:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3870:22:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3901:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3912:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3923:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:19:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3901:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3946:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3940:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3959:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3977:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3985:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3973:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3973:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3963:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3997:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4006:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4001:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4065:146:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4086:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4101:6:9"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4095:5:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4095:13:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4118:3:9",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4123:1:9",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4114:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4114:11:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4127:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4110:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4110:19:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4091:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4091:39:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4079:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4079:52:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4079:52:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4144:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4155:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4160:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4151:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4151:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4144:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4176:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4190:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4198:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4186:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4186:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4176:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4027:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4030:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4024:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4038:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4040:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4049:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4052:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4045:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4045:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4040:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4020:3:9",
																"statements": []
															},
															"src": "4016:195:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4231:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4242:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4227:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4227:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4251:3:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4256:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4247:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4247:19:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4220:47:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4276:55:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4319:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4327:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4290:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:41:9"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "4280:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4351:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4362:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "4371:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4379:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4367:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4340:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4340:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4340:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4399:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4436:6:9"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "4444:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4407:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:44:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4399:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3680:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3691:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3699:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3707:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3718:4:9",
														"type": ""
													}
												],
												"src": "3420:1037:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4532:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4578:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4553:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4562:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4574:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4545:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:32:9"
															},
															"nodeType": "YulIf",
															"src": "4542:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4603:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4632:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4613:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4498:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4509:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4521:6:9",
														"type": ""
													}
												],
												"src": "4462:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4827:172:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4844:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4837:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4837:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4878:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4889:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4874:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4874:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4894:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4867:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4867:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4867:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4917:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4928:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4913:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4913:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20494e414354495645",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4933:24:9",
																		"type": "",
																		"value": "SyCrowBarter: INACTIVE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4906:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4906:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4967:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4979:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4967:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c34f7dbf762d3d0b96bf148f8cc4593d2b9473ef3d73cd2c557f8a9dbd3100e5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4804:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4818:4:9",
														"type": ""
													}
												],
												"src": "4653:346:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5178:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5195:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5188:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5229:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5240:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5225:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5225:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5245:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5218:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5218:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5268:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5279:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5264:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a204e4f545f494e495449414c495a4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5284:31:9",
																		"type": "",
																		"value": "SyCrowBarter: NOT_INITIALIZED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5257:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5257:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5257:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5325:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5337:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5348:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5333:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5333:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5325:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_08e3709bf4c0b831cf8bc5788c36b99c92ad6a02cff038f75ddd0795dadbe1e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5155:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5169:4:9",
														"type": ""
													}
												],
												"src": "5004:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5440:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5486:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5495:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5498:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5488:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5488:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5488:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5461:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5470:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5457:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5457:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5482:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5453:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5453:32:9"
															},
															"nodeType": "YulIf",
															"src": "5450:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5511:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5530:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5524:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5515:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5571:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5549:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5549:28:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5586:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5596:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5406:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5417:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5429:6:9",
														"type": ""
													}
												],
												"src": "5362:245:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5786:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5803:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5814:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5796:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5796:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5796:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5837:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5848:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5833:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5833:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5853:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5826:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5826:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5826:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5876:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5887:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5872:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5872:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a204261736520436f6e74726163742050617573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5892:34:9",
																		"type": "",
																		"value": "SyCrowBarter: Base Contract Paus"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5865:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5865:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5947:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5958:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5943:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5943:18:9"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5963:4:9",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5936:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5936:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5936:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5977:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5989:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5985:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5985:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5977:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79383cfc7011af228083c91a74f19d88be46e1e2713e67b50fb07b6b50771355__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5763:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5777:4:9",
														"type": ""
													}
												],
												"src": "5612:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6189:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6206:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6217:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6199:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6199:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6240:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6251:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6236:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6236:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6256:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6229:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6229:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6279:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6290:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6275:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6275:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20494e56414c49445f4241525445525f545950",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6295:34:9",
																		"type": "",
																		"value": "SyCrowBarter: INVALID_BARTER_TYP"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6268:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6268:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6268:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6350:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6361:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6346:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6346:18:9"
																	},
																	{
																		"hexValue": "45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6366:3:9",
																		"type": "",
																		"value": "E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6339:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6339:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6379:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6391:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6402:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6387:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6387:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6379:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e50a0ae171cffc9efca2ecf30038ab4bcc5d422964b87e2fe386b4e70f368d12__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6166:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6180:4:9",
														"type": ""
													}
												],
												"src": "6015:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6608:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6619:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6638:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6658:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6631:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6631:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6631:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6681:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6692:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6677:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6677:18:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6697:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6670:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6670:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6670:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6740:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6752:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6763:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6748:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6740:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6568:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6582:4:9",
														"type": ""
													}
												],
												"src": "6417:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6951:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6968:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6979:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6961:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6961:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6961:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7002:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7013:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6998:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6998:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7018:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6991:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6991:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6991:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7041:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7052:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7037:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7037:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7057:34:9",
																		"type": "",
																		"value": "SyCrowBarter: AMOUNT_LOWER_THAN_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7030:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7030:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7030:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7112:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7123:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7108:18:9"
																	},
																	{
																		"hexValue": "524551555249524544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7128:11:9",
																		"type": "",
																		"value": "REQURIRED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7101:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7101:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7101:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7149:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7161:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7172:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7157:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7157:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7149:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6928:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6942:4:9",
														"type": ""
													}
												],
												"src": "6777:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7361:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7378:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7389:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7371:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7371:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7371:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7412:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7423:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7408:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7408:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7428:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7401:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7401:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7401:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7451:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7462:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7447:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7447:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414354495645",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7467:22:9",
																		"type": "",
																		"value": "SyCrowBarter: ACTIVE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7440:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7440:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7499:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7511:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7507:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7507:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7499:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b599e4ab958a4499af0e5f2ac52329fcb13f4955c7283e3523e952de95899b8c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7338:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7352:4:9",
														"type": ""
													}
												],
												"src": "7187:344:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7710:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7727:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7738:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7720:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7720:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7761:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7772:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7757:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7757:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7777:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7750:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7750:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7750:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7800:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7811:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7796:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7796:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7816:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7789:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7789:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7789:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7860:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7872:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7883:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7868:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7868:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7860:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7687:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7701:4:9",
														"type": ""
													}
												],
												"src": "7536:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7978:103:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7999:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8008:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7995:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7995:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8020:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7991:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7991:32:9"
															},
															"nodeType": "YulIf",
															"src": "7988:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8049:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8065:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8059:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8059:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8049:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7944:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7955:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7967:6:9",
														"type": ""
													}
												],
												"src": "7897:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8271:262:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8281:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8293:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8304:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8289:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8289:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8281:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8317:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8335:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8340:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8331:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8331:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8344:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8327:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8327:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8321:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8362:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8377:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8385:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8373:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8373:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8355:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8355:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8355:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8409:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8420:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8405:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8405:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8429:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8437:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8425:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8425:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8398:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8398:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8398:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8472:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8457:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8457:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8477:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8450:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8450:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8450:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8504:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8515:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8500:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8500:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8520:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8493:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8493:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8493:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8216:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8227:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8235:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8243:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8251:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8262:4:9",
														"type": ""
													}
												],
												"src": "8086:447:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8712:173:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8729:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8740:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8722:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8722:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8722:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8763:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8774:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8759:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8759:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8779:2:9",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8752:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8752:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8752:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8802:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8813:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8798:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8798:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20464f5242494444454e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8818:25:9",
																		"type": "",
																		"value": "SyCrowBarter: FORBIDDEN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8791:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8791:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8791:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8853:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8865:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8876:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8861:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8861:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8853:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e99d902835ef330efdeb5defc7644c488a1d9bd398555c575e8f17cb2a43c8b2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8689:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8703:4:9",
														"type": ""
													}
												],
												"src": "8538:347:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9064:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9081:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9092:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9074:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9074:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9074:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9115:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9126:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9111:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9111:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9131:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9104:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9104:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9104:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9154:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9165:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9150:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9150:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414c52454144595f494e495449414c495a45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9170:34:9",
																		"type": "",
																		"value": "SyCrowBarter: ALREADY_INITIALIZE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9143:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9143:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9143:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9225:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9236:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9221:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9221:18:9"
																	},
																	{
																		"hexValue": "44",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9241:3:9",
																		"type": "",
																		"value": "D"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9214:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9214:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9214:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9254:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9266:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9277:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9262:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9262:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9254:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_53c2ce6ed47c179816a9c6f0033c5d03f04949b869cef6fd14d5246b67912975__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9041:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9055:4:9",
														"type": ""
													}
												],
												"src": "8890:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9466:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9483:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9494:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9476:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9476:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9517:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9528:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9513:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9513:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9533:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9506:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9506:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9506:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9556:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9567:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9552:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9552:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20504153545f444541444c494e45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9572:29:9",
																		"type": "",
																		"value": "SyCrowBarter: PAST_DEADLINE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9545:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9545:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9545:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9611:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9623:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9634:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9619:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9619:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9611:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a273cae0d429ffac620d41ddcccea1b71b9e6e453a8ce90983b3e22305b1505__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9443:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9457:4:9",
														"type": ""
													}
												],
												"src": "9292:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9822:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9839:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9850:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9832:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9873:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9884:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9869:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9869:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9889:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9862:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9862:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9862:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9912:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9923:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9908:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9908:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20494e53554646494349454e545f4445504f53",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9928:34:9",
																		"type": "",
																		"value": "SyCrowBarter: INSUFFICIENT_DEPOS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9901:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9901:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9983:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9994:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9979:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9979:18:9"
																	},
																	{
																		"hexValue": "4954",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9999:4:9",
																		"type": "",
																		"value": "IT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9972:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9972:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9972:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10013:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10025:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10036:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10021:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10021:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10013:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60471f58a070287600518638a3de995e7f8b72f058b8593fb94e6702bacc457b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9799:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9813:4:9",
														"type": ""
													}
												],
												"src": "9648:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10083:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10100:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10107:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10112:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10103:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10103:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10093:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10093:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10093:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10140:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10143:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10133:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10133:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10133:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10164:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10167:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10157:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10157:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10051:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10235:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10294:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10296:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10296:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10296:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10266:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10259:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10259:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10252:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10252:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10274:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10285:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10281:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10281:6:9"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10289:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10277:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10277:14:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10271:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10271:21:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10248:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10248:45:9"
															},
															"nodeType": "YulIf",
															"src": "10245:71:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10325:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10340:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10343:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10336:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10336:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10325:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10214:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10217:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10223:7:9",
														"type": ""
													}
												],
												"src": "10183:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10402:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10433:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10454:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10461:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10466:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10457:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10457:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10447:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10447:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10447:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10498:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10501:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10491:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10491:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10491:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10529:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10519:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10519:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10519:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10422:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10415:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10415:9:9"
															},
															"nodeType": "YulIf",
															"src": "10412:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10553:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10562:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10565:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10558:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10558:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10553:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10387:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10390:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10396:1:9",
														"type": ""
													}
												],
												"src": "10356:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10610:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10627:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10634:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10639:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10630:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10630:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10620:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10620:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10620:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10667:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10670:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10660:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10660:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10660:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10691:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10694:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10684:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10684:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10684:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10578:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10742:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10759:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10766:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10762:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10762:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10752:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10752:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10752:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10799:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10802:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10792:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10792:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10792:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10823:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10826:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10816:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10816:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10816:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10710:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10889:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10920:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10922:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10922:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10922:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10905:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10916:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10912:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10912:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10902:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10902:17:9"
															},
															"nodeType": "YulIf",
															"src": "10899:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10951:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10962:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10969:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10958:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10951:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10871:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10881:3:9",
														"type": ""
													}
												],
												"src": "10842:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11156:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11173:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11184:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11166:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11166:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11207:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11218:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11203:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11223:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11196:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11196:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11246:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11257:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11242:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11242:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11262:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11235:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11235:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11235:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11317:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11328:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11313:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11313:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11333:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11306:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11306:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11306:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11351:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11363:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11374:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11359:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11359:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11351:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11133:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11147:4:9",
														"type": ""
													}
												],
												"src": "10982:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11563:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11580:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11591:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11573:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11573:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11573:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11614:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11625:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11610:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11610:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11630:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11603:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11603:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11603:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11653:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11664:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11649:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11649:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20494e53554646494349454e545f42414c414e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11669:34:9",
																		"type": "",
																		"value": "SyCrowBarter: INSUFFICIENT_BALAN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11642:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11642:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11642:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11724:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11735:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11720:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11720:18:9"
																	},
																	{
																		"hexValue": "4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11740:4:9",
																		"type": "",
																		"value": "CE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11713:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11713:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11713:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11754:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11766:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11777:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11762:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11762:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11754:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11540:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11554:4:9",
														"type": ""
													}
												],
												"src": "11389:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11966:233:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11983:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11994:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11976:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11976:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11976:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12017:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12028:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12013:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12013:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12033:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12006:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12006:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12006:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12056:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12067:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12052:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12052:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a20494e53554646494349454e545f434f4e5452",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12072:34:9",
																		"type": "",
																		"value": "SyCrowBarter: INSUFFICIENT_CONTR"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12045:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12045:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12045:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12127:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12138:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12123:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12123:18:9"
																	},
																	{
																		"hexValue": "4143545f42414c414e4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12143:13:9",
																		"type": "",
																		"value": "ACT_BALANCE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12116:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12116:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12116:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12166:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12178:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12189:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12174:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12174:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12166:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11943:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11957:4:9",
														"type": ""
													}
												],
												"src": "11792:407:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12252:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12279:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12281:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12281:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12281:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12268:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12275:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12271:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12271:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12265:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12265:13:9"
															},
															"nodeType": "YulIf",
															"src": "12262:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12310:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12321:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12324:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12317:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12317:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12310:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12235:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12238:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12244:3:9",
														"type": ""
													}
												],
												"src": "12204:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12474:289:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12484:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12504:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12498:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12498:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12488:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12520:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12529:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12524:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12591:77:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "12616:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12621:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12612:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12612:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "12639:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "12647:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "12635:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12635:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12651:4:9",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12631:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12631:25:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12625:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12625:32:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12605:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12605:53:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12605:53:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12550:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12553:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12547:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12547:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12561:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12563:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12572:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12575:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12568:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12568:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12563:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12543:3:9",
																"statements": []
															},
															"src": "12539:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12694:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "12707:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12712:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12703:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12703:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12721:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12696:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12696:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12696:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12683:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12686:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12680:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12680:13:9"
															},
															"nodeType": "YulIf",
															"src": "12677:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12734:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12745:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12750:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12741:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12741:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12734:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12450:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12455:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12466:3:9",
														"type": ""
													}
												],
												"src": "12337:426:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12942:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12959:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12970:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12952:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12952:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12952:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12993:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13004:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12989:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12989:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13009:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12982:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12982:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12982:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13032:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13043:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13028:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13028:18:9"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a204554485f5452414e534645525f464149",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13048:34:9",
																		"type": "",
																		"value": "TransferHelper: ETH_TRANSFER_FAI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13021:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13021:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13021:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13103:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13114:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13099:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13099:18:9"
																	},
																	{
																		"hexValue": "4c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13119:5:9",
																		"type": "",
																		"value": "LED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13092:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13092:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13092:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13134:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13146:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13157:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13142:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13142:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13134:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12919:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12933:4:9",
														"type": ""
													}
												],
												"src": "12768:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13301:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13311:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13323:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13334:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13319:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13319:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13311:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13353:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13368:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13384:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13389:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13380:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13380:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13393:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13376:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13376:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13364:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13364:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13346:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13346:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13346:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13417:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13428:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13413:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13413:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13433:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13406:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13406:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13406:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13262:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13273:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13281:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13292:4:9",
														"type": ""
													}
												],
												"src": "13172:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13625:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13642:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13653:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13635:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13635:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13635:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13676:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13687:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13672:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13672:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13692:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13665:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13665:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13665:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13715:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13726:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13711:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13711:18:9"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13731:33:9",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13704:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13704:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13704:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13774:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13786:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13797:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13782:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13782:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13774:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13602:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13616:4:9",
														"type": ""
													}
												],
												"src": "13451:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13985:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14002:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14013:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13995:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13995:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13995:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14036:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14047:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14032:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14032:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14052:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14025:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14025:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14025:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14075:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14086:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14071:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14071:18:9"
																	},
																	{
																		"hexValue": "537943726f774261727465723a204d554c54495f54524144455f4e4f545f454e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14091:34:9",
																		"type": "",
																		"value": "SyCrowBarter: MULTI_TRADE_NOT_EN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14064:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14064:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14064:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14146:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14157:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14142:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14142:18:9"
																	},
																	{
																		"hexValue": "41424c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14162:7:9",
																		"type": "",
																		"value": "ABLED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14135:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14135:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14135:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14179:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14191:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14202:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14187:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14187:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14179:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd025a8b4dac45f94633765487ac16f8ad7e1a6ee7e724cd8d9bc6ef3ad676e1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13962:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13976:4:9",
														"type": ""
													}
												],
												"src": "13811:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14374:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14384:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14396:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14407:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14392:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14392:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14384:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14419:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14437:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14442:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14433:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14433:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14446:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14429:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14429:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14423:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14464:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14479:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14487:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14475:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14475:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14457:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14457:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14457:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14511:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14522:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14507:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14507:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14531:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14539:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14527:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14527:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14500:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14500:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14500:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14563:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14574:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14559:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14559:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14579:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14552:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14552:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14552:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14327:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14338:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14346:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14354:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14365:4:9",
														"type": ""
													}
												],
												"src": "14217:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14771:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14788:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14799:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14781:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14781:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14781:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14822:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14833:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14818:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14818:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14838:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14811:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14811:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14811:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14861:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14872:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14857:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14857:18:9"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14877:34:9",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FROM_FA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14850:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14850:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14850:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14932:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14943:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14928:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14928:18:9"
																	},
																	{
																		"hexValue": "494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14948:6:9",
																		"type": "",
																		"value": "ILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14921:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14921:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14921:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14964:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14976:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14987:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14972:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14972:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14964:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14748:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14762:4:9",
														"type": ""
													}
												],
												"src": "14597:400:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_enum$_ISyCrowBarterType_$1130t_addresst_addresst_uint256t_uint256t_uint256t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        let value_1 := calldataload(add(headStart, 192))\n        validator_revert_bool(value_1)\n        value6 := value_1\n        value7 := abi_decode_address(add(headStart, 224))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_ISyCrowBarterType_$1130__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, 96)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value1, pos)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_array_uint256_dyn(value2, tail_2)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_c34f7dbf762d3d0b96bf148f8cc4593d2b9473ef3d73cd2c557f8a9dbd3100e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"SyCrowBarter: INACTIVE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_08e3709bf4c0b831cf8bc5788c36b99c92ad6a02cff038f75ddd0795dadbe1e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"SyCrowBarter: NOT_INITIALIZED\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_79383cfc7011af228083c91a74f19d88be46e1e2713e67b50fb07b6b50771355__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"SyCrowBarter: Base Contract Paus\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e50a0ae171cffc9efca2ecf30038ab4bcc5d422964b87e2fe386b4e70f368d12__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SyCrowBarter: INVALID_BARTER_TYP\")\n        mstore(add(headStart, 96), \"E\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"SyCrowBarter: AMOUNT_LOWER_THAN_\")\n        mstore(add(headStart, 96), \"REQURIRED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b599e4ab958a4499af0e5f2ac52329fcb13f4955c7283e3523e952de95899b8c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"SyCrowBarter: ACTIVE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e99d902835ef330efdeb5defc7644c488a1d9bd398555c575e8f17cb2a43c8b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"SyCrowBarter: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_53c2ce6ed47c179816a9c6f0033c5d03f04949b869cef6fd14d5246b67912975__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SyCrowBarter: ALREADY_INITIALIZE\")\n        mstore(add(headStart, 96), \"D\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5a273cae0d429ffac620d41ddcccea1b71b9e6e453a8ce90983b3e22305b1505__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SyCrowBarter: PAST_DEADLINE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60471f58a070287600518638a3de995e7f8b72f058b8593fb94e6702bacc457b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"SyCrowBarter: INSUFFICIENT_DEPOS\")\n        mstore(add(headStart, 96), \"IT\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"SyCrowBarter: INSUFFICIENT_BALAN\")\n        mstore(add(headStart, 96), \"CE\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"SyCrowBarter: INSUFFICIENT_CONTR\")\n        mstore(add(headStart, 96), \"ACT_BALANCE\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TransferHelper: ETH_TRANSFER_FAI\")\n        mstore(add(headStart, 96), \"LED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"TransferHelper: TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dd025a8b4dac45f94633765487ac16f8ad7e1a6ee7e724cd8d9bc6ef3ad676e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"SyCrowBarter: MULTI_TRADE_NOT_EN\")\n        mstore(add(headStart, 96), \"ABLED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"TransferHelper: TRANSFER_FROM_FA\")\n        mstore(add(headStart, 96), \"ILED\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"183": [
									{
										"length": 32,
										"start": 737
									},
									{
										"length": 32,
										"start": 1000
									},
									{
										"length": 32,
										"start": 1428
									},
									{
										"length": 32,
										"start": 2538
									},
									{
										"length": 32,
										"start": 2818
									},
									{
										"length": 32,
										"start": 3156
									},
									{
										"length": 32,
										"start": 5341
									},
									{
										"length": 32,
										"start": 6028
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101015760003560e01c8063715018a61161008f578063c45a015511610061578063c45a0155146102cf578063c6ea703814610303578063dab5a8df1461031d578063e43372e91461033d578063f2fde38b1461036157005b8063715018a61461022c57806389523742146102415780638da5cb5b14610268578063aa6ca8081461029a57005b80633ccfd60b116100d35780633ccfd60b146101a45780633d370b4e146101b957806340a6f1ab146101e35780634341f920146101f95780635f5780e51461020c57005b80630d1826051461010a57806329dcb0cf1461012a5780632ffc6887146101535780633072cf601461017357005b3661010857005b005b34801561011657600080fd5b50610108610125366004611cea565b610381565b34801561013657600080fd5b5061014060045481565b6040519081526020015b60405180910390f35b34801561015f57600080fd5b5061010861016e366004611cea565b610536565b34801561017f57600080fd5b5060055461019490600160a81b900460ff1681565b604051901515815260200161014a565b3480156101b057600080fd5b506101086106d8565b3480156101c557600080fd5b506101ce610a6a565b6040805192835260208301919091520161014a565b3480156101ef57600080fd5b5061014060025481565b610108610207366004611cea565b610aa4565b34801561021857600080fd5b50610194610227366004611d2d565b610c47565b34801561023857600080fd5b50610108610ef0565b34801561024d57600080fd5b5060055461025b9060ff1681565b60405161014a9190611dcd565b34801561027457600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161014a565b3480156102a657600080fd5b506102af610f26565b604080516001600160a01b0393841681529290911660208301520161014a565b3480156102db57600080fd5b506102827f000000000000000000000000000000000000000000000000000000000000000081565b34801561030f57600080fd5b506003546101949060ff1681565b34801561032957600080fd5b50610140610338366004611cea565b610f6d565b34801561034957600080fd5b50610352610f90565b60405161014a93929190611e30565b34801561036d57600080fd5b5061010861037c366004611ea5565b6111b6565b42600454101580156103965750600954600254105b6103bb5760405162461bcd60e51b81526004016103b290611ec7565b60405180910390fd5b600554600160a81b900460ff166103e45760405162461bcd60e51b81526004016103b290611ef7565b60007f00000000000000000000000000000000000000000000000000000000000000009050806001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b9190611f2e565b156104885760405162461bcd60e51b81526004016103b290611f4b565b60055460009060ff1660028111156104a2576104a2611db7565b8160028111156104b4576104b4611db7565b146104d15760405162461bcd60e51b81526004016103b290611f8d565b6002600154036104f35760405162461bcd60e51b81526004016103b290611fce565b600260015560035460ff16610524576009548310156105245760405162461bcd60e51b81526004016103b290612005565b61052d83611251565b50506001805550565b426004541015801561054b5750600954600254105b6105675760405162461bcd60e51b81526004016103b290611ec7565b600554600160a81b900460ff166105905760405162461bcd60e51b81526004016103b290611ef7565b60007f00000000000000000000000000000000000000000000000000000000000000009050806001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190611f2e565b156106345760405162461bcd60e51b81526004016103b290611f4b565b60055460029060ff168181111561064d5761064d611db7565b81600281111561065f5761065f611db7565b1461067c5760405162461bcd60e51b81526004016103b290611f8d565b60026001540361069e5760405162461bcd60e51b81526004016103b290611fce565b600260015560035460ff166106cf576009548310156106cf5760405162461bcd60e51b81526004016103b290612005565b61052d8361155a565b4260045410806106ec575060095460025410155b61072f5760405162461bcd60e51b8152602060048201526014602482015273537943726f774261727465723a2041435449564560601b60448201526064016103b2565b600554600160a81b900460ff166107585760405162461bcd60e51b81526004016103b290611ef7565b6000546001600160a01b031633146107825760405162461bcd60e51b81526004016103b29061204e565b6005546040516370a0823160e01b81523060048201526101009091046001600160a01b03169060009082906370a0823190602401602060405180830381865afa1580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f79190612083565b9050801561086b57600554604051632e1a7d4d60e01b8152600481018390526101009091046001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561084957600080fd5b505af115801561085d573d6000803e3d6000fd5b5050505061086b3382611808565b6007546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190612083565b905080156108f7576007546108f7906001600160a01b031633836118d6565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190612083565b9050801561098357600654610983906001600160a01b031633836118d6565b6000808060055460ff16600281111561099e5761099e611db7565b036109ad5750839050826109db565b600260055460ff1660028111156109c6576109c6611db7565b036109d55750819050826109db565b50819050835b6040516319bcb50760e11b81527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038216906333796a0e90610a2f90309033908890889060040161209c565b600060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b5050505050505050505050565b6005546000908190600160a81b900460ff16610a985760405162461bcd60e51b81526004016103b290611ef7565b50506008546009549091565b4260045410158015610ab95750600954600254105b610ad55760405162461bcd60e51b81526004016103b290611ec7565b600554600160a81b900460ff16610afe5760405162461bcd60e51b81526004016103b290611ef7565b60007f00000000000000000000000000000000000000000000000000000000000000009050806001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190611f2e565b15610ba25760405162461bcd60e51b81526004016103b290611f4b565b60055460019060ff166002811115610bbc57610bbc611db7565b816002811115610bce57610bce611db7565b14610beb5760405162461bcd60e51b81526004016103b290611f8d565b600260015403610c0d5760405162461bcd60e51b81526004016103b290611fce565b600260015560035460ff16610c3e57600954341015610c3e5760405162461bcd60e51b81526004016103b290612005565b61052d836119f1565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cc15760405162461bcd60e51b815260206004820152601760248201527f537943726f774261727465723a20464f5242494444454e00000000000000000060448201526064016103b2565b600554600160a81b900460ff1615610d255760405162461bcd60e51b815260206004820152602160248201527f537943726f774261727465723a20414c52454144595f494e495449414c495a456044820152601160fa1b60648201526084016103b2565b42841015610d755760405162461bcd60e51b815260206004820152601b60248201527f537943726f774261727465723a20504153545f444541444c494e45000000000060448201526064016103b2565b6040516370a0823160e01b815230600482015286906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddf9190612083565b1015610e385760405162461bcd60e51b815260206004820152602260248201527f537943726f774261727465723a20494e53554646494349454e545f4445504f53604482015261125560f21b60648201526084016103b2565b6004849055600680546001600160a01b03808b166001600160a01b03199283161790925560078054928a169290911691909117905560088690556009859055600580548a919060ff19166001836002811115610e9657610e96611db7565b0217905550506003805483151560ff199091161790556005805460ff60a81b196001600160a01b0384166101000216610100600160b01b031990911617600160a81b90811791829055900460ff1698975050505050505050565b6000546001600160a01b03163314610f1a5760405162461bcd60e51b81526004016103b29061204e565b610f246000611b6a565b565b6005546000908190600160a81b900460ff16610f545760405162461bcd60e51b81526004016103b290611ef7565b50506006546007546001600160a01b0391821691169091565b600060095460085483610f8091906120db565b610f8a91906120fa565b92915050565b6060806060600560159054906101000a900460ff16610fc15760405162461bcd60e51b81526004016103b290611ef7565b600a5460009067ffffffffffffffff811115610fdf57610fdf61211c565b604051908082528060200260200182016040528015611008578160200160208202803683370190505b50600a5490915060009067ffffffffffffffff81111561102a5761102a61211c565b604051908082528060200260200182016040528015611053578160200160208202803683370190505b50600a5490915060009067ffffffffffffffff8111156110755761107561211c565b60405190808252806020026020018201604052801561109e578160200160208202803683370190505b50905060005b600a548110156111a957600a81815481106110c1576110c1612132565b600091825260209091206003909102015484516001600160a01b03909116908590839081106110f2576110f2612132565b60200260200101906001600160a01b031690816001600160a01b031681525050600a818154811061112557611125612132565b90600052602060002090600302016001015483828151811061114957611149612132565b602002602001018181525050600a818154811061116857611168612132565b90600052602060002090600302016002015482828151811061118c5761118c612132565b6020908102919091010152806111a181612148565b9150506110a4565b5091945092509050909192565b6000546001600160a01b031633146111e05760405162461bcd60e51b81526004016103b29061204e565b6001600160a01b0381166112455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b2565b61124e81611b6a565b50565b6007546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bd9190612083565b10156112db5760405162461bcd60e51b81526004016103b290612161565b60006112e682610f6d565b6005546040516370a0823160e01b815230600482015291925061010090046001600160a01b031690829082906370a0823190602401602060405180830381865afa158015611338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135c9190612083565b101561137a5760405162461bcd60e51b81526004016103b2906121a3565b600754611392906001600160a01b0316333086611bba565b600554604051632e1a7d4d60e01b8152600481018490526101009091046001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156113dc57600080fd5b505af11580156113f0573d6000803e3d6000fd5b505050506113fe3383611808565b6040805160608101825233815260208101858152918101848152600a805460018101825560009190915291517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8600390930292830180546001600160a01b0319166001600160a01b0390921691909117905591517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a982015590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa909101556002546114cb9084906121ee565b60025560405163f52701b760e01b81527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063f52701b79061152290309033908990899060040161209c565b600060405180830381600087803b15801561153c57600080fd5b505af1158015611550573d6000803e3d6000fd5b5050505050505050565b6007546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156115a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c69190612083565b10156115e45760405162461bcd60e51b81526004016103b290612161565b60006115ef82610f6d565b6006546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561163c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116609190612083565b101561167e5760405162461bcd60e51b81526004016103b2906121a3565b600754611696906001600160a01b0316333085611bba565b6006546116ad906001600160a01b031633836118d6565b6040805160608101825233815260208101848152918101838152600a805460018101825560009190915291517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8600390930292830180546001600160a01b0319166001600160a01b0390921691909117905591517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a982015590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa9091015560025461177a9083906121ee565b60025560405163f52701b760e01b81527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063f52701b7906117d190309033908890889060040161209c565b600060405180830381600087803b1580156117eb57600080fd5b505af11580156117ff573d6000803e3d6000fd5b50505050505050565b604080516000808252602082019092526001600160a01b0384169083906040516118329190612206565b60006040518083038185875af1925050503d806000811461186f576040519150601f19603f3d011682016040523d82523d6000602084013e611874565b606091505b50509050806118d15760405162461bcd60e51b815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201526213115160ea1b60648201526084016103b2565b505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916119329190612206565b6000604051808303816000865af19150503d806000811461196f576040519150601f19603f3d011682016040523d82523d6000602084013e611974565b606091505b509150915081801561199e57508051158061199e57508080602001905181019061199e9190611f2e565b6119ea5760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c45440060448201526064016103b2565b5050505050565b348114611a4e5760405162461bcd60e51b815260206004820152602560248201527f537943726f774261727465723a204d554c54495f54524144455f4e4f545f454e604482015264105093115160da1b60648201526084016103b2565b6000611a5982610f6d565b6006546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611aa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aca9190612083565b1015611ae85760405162461bcd60e51b81526004016103b2906121a3565b600560019054906101000a90046001600160a01b03166001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b3857600080fd5b505af1158015611b4c573d6000803e3d6000fd5b50506006546116ad93506001600160a01b03169150339050836118d6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691611c1e9190612206565b6000604051808303816000865af19150503d8060008114611c5b576040519150601f19603f3d011682016040523d82523d6000602084013e611c60565b606091505b5091509150818015611c8a575080511580611c8a575080806020019051810190611c8a9190611f2e565b611ce25760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b60648201526084016103b2565b505050505050565b600060208284031215611cfc57600080fd5b5035919050565b80356001600160a01b0381168114611d1a57600080fd5b919050565b801515811461124e57600080fd5b600080600080600080600080610100898b031215611d4a57600080fd5b883560038110611d5957600080fd5b9750611d6760208a01611d03565b9650611d7560408a01611d03565b9550606089013594506080890135935060a0890135925060c0890135611d9a81611d1f565b9150611da860e08a01611d03565b90509295985092959890939650565b634e487b7160e01b600052602160045260246000fd5b6020810160038310611def57634e487b7160e01b600052602160045260246000fd5b91905290565b600081518084526020808501945080840160005b83811015611e2557815187529582019590820190600101611e09565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b82811015611e725781516001600160a01b031684529284019290840190600101611e4d565b50505083810382850152611e868187611df5565b9150508281036040840152611e9b8185611df5565b9695505050505050565b600060208284031215611eb757600080fd5b611ec082611d03565b9392505050565b602080825260169082015275537943726f774261727465723a20494e41435449564560501b604082015260600190565b6020808252601d908201527f537943726f774261727465723a204e4f545f494e495449414c495a4544000000604082015260600190565b600060208284031215611f4057600080fd5b8151611ec081611d1f565b60208082526022908201527f537943726f774261727465723a204261736520436f6e74726163742050617573604082015261195960f21b606082015260800190565b60208082526021908201527f537943726f774261727465723a20494e56414c49445f4241525445525f5459506040820152604560f81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526029908201527f537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f60408201526814915455549254915160ba1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561209557600080fd5b5051919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156120f5576120f56120c5565b500290565b60008261211757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161215a5761215a6120c5565b5060010190565b60208082526022908201527f537943726f774261727465723a20494e53554646494349454e545f42414c414e604082015261434560f01b606082015260800190565b6020808252602b908201527f537943726f774261727465723a20494e53554646494349454e545f434f4e545260408201526a4143545f42414c414e434560a81b606082015260800190565b60008219821115612201576122016120c5565b500190565b6000825160005b81811015612227576020818601810151858301520161220d565b81811115612236576000828501525b50919091019291505056fea26469706673582212207b409e083d708ffbf307e2d16b4e25b1559346863d3880ac8fcfc49974c5c51e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x101 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8F JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0x61 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xC6EA7038 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xDAB5A8DF EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xE43372E9 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x361 JUMPI STOP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x89523742 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x29A JUMPI STOP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x3D370B4E EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x40A6F1AB EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x4341F920 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x5F5780E5 EQ PUSH2 0x20C JUMPI STOP JUMPDEST DUP1 PUSH4 0xD182605 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x2FFC6887 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x3072CF60 EQ PUSH2 0x173 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x108 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x194 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x6D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0xC47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0xEF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x25B SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x194 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0xF6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x352 PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x2 SLOAD LT JUMPDEST PUSH2 0x3BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4A2 JUMPI PUSH2 0x4A2 PUSH2 0x1DB7 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4B4 JUMPI PUSH2 0x4B4 PUSH2 0x1DB7 JUMP JUMPDEST EQ PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x524 JUMPI PUSH1 0x9 SLOAD DUP4 LT ISZERO PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x52D DUP4 PUSH2 0x1251 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x54B JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x2 SLOAD LT JUMPDEST PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x2 SWAP1 PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x64D JUMPI PUSH2 0x64D PUSH2 0x1DB7 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x65F JUMPI PUSH2 0x65F PUSH2 0x1DB7 JUMP JUMPDEST EQ PUSH2 0x67C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x6CF JUMPI PUSH1 0x9 SLOAD DUP4 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x52D DUP4 PUSH2 0x155A JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD LT DUP1 PUSH2 0x6EC JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x2 SLOAD LT ISZERO JUMPDEST PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x537943726F774261727465723A20414354495645 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x86B JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x849 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x85D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x86B CALLER DUP3 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x7 SLOAD PUSH2 0x8F7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x940 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x983 JUMPI PUSH1 0x6 SLOAD PUSH2 0x983 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x99E JUMPI PUSH2 0x99E PUSH2 0x1DB7 JUMP JUMPDEST SUB PUSH2 0x9AD JUMPI POP DUP4 SWAP1 POP DUP3 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C6 JUMPI PUSH2 0x9C6 PUSH2 0x1DB7 JUMP JUMPDEST SUB PUSH2 0x9D5 JUMPI POP DUP2 SWAP1 POP DUP3 PUSH2 0x9DB JUMP JUMPDEST POP DUP2 SWAP1 POP DUP4 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19BCB507 PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x33796A0E SWAP1 PUSH2 0xA2F SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x209C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST POP POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP1 SWAP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xAB9 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x2 SLOAD LT JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB187BD26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBBC JUMPI PUSH2 0xBBC PUSH2 0x1DB7 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBCE JUMPI PUSH2 0xBCE PUSH2 0x1DB7 JUMP JUMPDEST EQ PUSH2 0xBEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0xC3E JUMPI PUSH1 0x9 SLOAD CALLVALUE LT ISZERO PUSH2 0xC3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x52D DUP4 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xCC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20464F5242494444454E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20414C52454144595F494E495449414C495A45 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xD75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20504153545F444541444C494E450000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDDF SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F4445504F53 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x4 DUP5 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 DUP7 SWAP1 SSTORE PUSH1 0x9 DUP6 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP11 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE96 JUMPI PUSH2 0xE96 PUSH2 0x1DB7 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x3 DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x100 MUL AND PUSH2 0x100 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DUP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DIV PUSH1 0xFF AND SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH2 0xF24 PUSH1 0x0 PUSH2 0x1B6A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x20FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDF JUMPI PUSH2 0xFDF PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1008 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102A JUMPI PUSH2 0x102A PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1053 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1075 PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x109E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x11A9 JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10C1 JUMPI PUSH2 0x10C1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x10F2 JUMPI PUSH2 0x10F2 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1125 JUMPI PUSH2 0x1125 PUSH2 0x2132 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1149 JUMPI PUSH2 0x1149 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1168 JUMPI PUSH2 0x1168 PUSH2 0x2132 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x118C JUMPI PUSH2 0x118C PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x11A1 DUP2 PUSH2 0x2148 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10A4 JUMP JUMPDEST POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x124E DUP2 PUSH2 0x1B6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1299 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12BD SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E6 DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1338 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1392 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x13FE CALLER DUP4 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 DUP2 MSTORE SWAP2 DUP2 ADD DUP5 DUP2 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x3 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA SWAP1 SWAP2 ADD SSTORE PUSH1 0x2 SLOAD PUSH2 0x14CB SWAP1 DUP5 SWAP1 PUSH2 0x21EE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF52701B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF52701B7 SWAP1 PUSH2 0x1522 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x209C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x153C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1550 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15C6 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EF DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x163C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1660 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0x167E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1696 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x16AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP2 MSTORE SWAP2 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x3 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA SWAP1 SWAP2 ADD SSTORE PUSH1 0x2 SLOAD PUSH2 0x177A SWAP1 DUP4 SWAP1 PUSH2 0x21EE JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF52701B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF52701B7 SWAP1 PUSH2 0x17D1 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x209C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1832 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x186F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x18D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A204554485F5452414E534645525F464149 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x131151 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x196F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x199E JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x199E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x199E SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH2 0x19EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP2 EQ PUSH2 0x1A4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204D554C54495F54524144455F4E4F545F454E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1050931151 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A59 DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACA SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST LT ISZERO PUSH2 0x1AE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH2 0x16AD SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP CALLER SWAP1 POP DUP4 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x1C1E SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C5B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1C8A JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1C8A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C8A SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH2 0x1CE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x124E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1D4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1D59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP8 POP PUSH2 0x1D67 PUSH1 0x20 DUP11 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP7 POP PUSH2 0x1D75 PUSH1 0x40 DUP11 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x1D9A DUP2 PUSH2 0x1D1F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA8 PUSH1 0xE0 DUP11 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1DEF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E25 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E09 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP5 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP5 ADD SWAP1 DUP3 DUP9 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E72 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E4D JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1E86 DUP2 DUP8 PUSH2 0x1DF5 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E9B DUP2 DUP6 PUSH2 0x1DF5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC0 DUP3 PUSH2 0x1D03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x537943726F774261727465723A20494E414354495645 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204E4F545F494E495449414C495A4544000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1EC0 DUP2 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A204261736520436F6E74726163742050617573 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E56414C49445F4241525445525F545950 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20414D4F554E545F4C4F5745525F5448414E5F PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x149154555492549151 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x20F5 JUMPI PUSH2 0x20F5 PUSH2 0x20C5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2117 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x215A JUMPI PUSH2 0x215A PUSH2 0x20C5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F42414C414E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x4345 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x537943726F774261727465723A20494E53554646494349454E545F434F4E5452 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x4143545F42414C414E4345 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2201 JUMPI PUSH2 0x2201 PUSH2 0x20C5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2227 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x220D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2236 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x409E083D708FFBF307E2D16B4E25B1559346863D3880AC8FCFC49974 0xC5 0xC5 0x1E PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "332:10180:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4464:448;;;;;;;;;;-1:-1:-1;4464:448:3;;;;;:::i;:::-;;:::i;522:23::-;;;;;;;;;;;;;;;;;;;345:25:9;;;333:2;318:18;522:23:3;;;;;;;;4004:454;;;;;;;;;;-1:-1:-1;4004:454:3;;;;;:::i;:::-;;:::i;620:32::-;;;;;;;;;;-1:-1:-1;620:32:3;;;;-1:-1:-1;;;620:32:3;;;;;;;;;546:14:9;;539:22;521:41;;509:2;494:18;620:32:3;381:187:9;8495:1677:3;;;;;;;;;;;;;:::i;2915:187::-;;;;;;;;;;;;;:::i;:::-;;;;747:25:9;;;803:2;788:18;;781:34;;;;720:18;2915:187:3;573:248:9;450:31:3;;;;;;;;;;;;;;;;4918:465;;;;;;:::i;:::-;;:::i;1881:1028::-;;;;;;;;;;-1:-1:-1;1881:1028:3;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;551:35:3:-;;;;;;;;;;-1:-1:-1;551:35:3;;;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;2627:32:9;;;2609:51;;2597:2;2582:18;1036:85:0;2463:203:9;3108:198:3;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2901:15:9;;;2883:34;;2953:15;;;;2948:2;2933:18;;2926:43;2818:18;3108:198:3;2671:304:9;403:41:3;;;;;;;;;;;;;;;487:28;;;;;;;;;;-1:-1:-1;487:28:3;;;;;;;;10178:142;;;;;;;;;;-1:-1:-1;10178:142:3;;;;;:::i;:::-;;:::i;3312:686::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;4464:448:3:-;1033:15;1021:8;;:27;;:65;;;;;1071:15;;1052:16;;:34;1021:65;1000:134;;;;-1:-1:-1;;;1000:134:3;;;;;;;:::i;:::-;;;;;;;;;1551:12:::1;::::0;-1:-1:-1;;;1551:12:3;::::1;;;1543:54;;;;-1:-1:-1::0;;;1543:54:3::1;;;;;;;:::i;:::-;1654:33:::2;1711:7;1654:65;;1738:12;-1:-1:-1::0;;;;;1738:21:3::2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1737:24;1729:71;;;;-1:-1:-1::0;;;1729:71:3::2;;;;;;;:::i;:::-;1247:10:::3;::::0;4626:31:::3;::::0;1247:10:::3;;1232:25;::::0;::::3;;;;;;:::i;:::-;:11;:25;;;;;;;;:::i;:::-;;1224:71;;;;-1:-1:-1::0;;;1224:71:3::3;;;;;;;:::i;:::-;1744:1:1::4;2325:7;;:19:::0;2317:63:::4;;;;-1:-1:-1::0;;;2317:63:1::4;;;;;;;:::i;:::-;1744:1;2455:7;:18:::0;4699:16:3::5;::::0;::::5;;4694:175;;4768:15;;4756:8;:27;;4731:127;;;;-1:-1:-1::0;;;4731:127:3::5;;;;;;;:::i;:::-;4878:27;4896:8;4878:17;:27::i;:::-;-1:-1:-1::0;;1701:1:1::4;2628:22:::0;;-1:-1:-1;4464:448:3:o;4004:454::-;1033:15;1021:8;;:27;;:65;;;;;1071:15;;1052:16;;:34;1021:65;1000:134;;;;-1:-1:-1;;;1000:134:3;;;;;;;:::i;:::-;1551:12:::1;::::0;-1:-1:-1;;;1551:12:3;::::1;;;1543:54;;;;-1:-1:-1::0;;;1543:54:3::1;;;;;;;:::i;:::-;1654:33:::2;1711:7;1654:65;;1738:12;-1:-1:-1::0;;;;;1738:21:3::2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1737:24;1729:71;;;;-1:-1:-1::0;;;1729:71:3::2;;;;;;;:::i;:::-;1247:10:::3;::::0;4168:33:::3;::::0;1247:10:::3;;1232:25:::0;;::::3;;;;;;:::i;:::-;:11;:25;;;;;;;;:::i;:::-;;1224:71;;;;-1:-1:-1::0;;;1224:71:3::3;;;;;;;:::i;:::-;1744:1:1::4;2325:7;;:19:::0;2317:63:::4;;;;-1:-1:-1::0;;;2317:63:1::4;;;;;;;:::i;:::-;1744:1;2455:7;:18:::0;4243:16:3::5;::::0;::::5;;4238:175;;4312:15;;4300:8;:27;;4275:127;;;;-1:-1:-1::0;;;4275:127:3::5;;;;;;;:::i;:::-;4422:29;4442:8;4422:19;:29::i;8495:1677::-:0;1386:15;1375:8;;:26;:65;;;;1425:15;;1405:16;;:35;;1375:65;1354:132;;;;-1:-1:-1;;;1354:132:3;;7389:2:9;1354:132:3;;;7371:21:9;7428:2;7408:18;;;7401:30;-1:-1:-1;;;7447:18:9;;;7440:50;7507:18;;1354:132:3;7187:344:9;1354:132:3;1551:12:::1;::::0;-1:-1:-1;;;1551:12:3;::::1;;;1543:54;;;;-1:-1:-1::0;;;1543:54:3::1;;;;;;;:::i;:::-;1082:7:0::0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0::2;1240:68;;;;-1:-1:-1::0;;;1240:68:0::2;;;;;;;:::i;:::-;8606:4:3::3;::::0;8643:35:::3;::::0;-1:-1:-1;;;8643:35:3;;8672:4:::3;8643:35;::::0;::::3;2609:51:9::0;8606:4:3::3;::::0;;::::3;-1:-1:-1::0;;;;;8606:4:3::3;::::0;8579:17:::3;::::0;8606:4;;8643:20:::3;::::0;2582:18:9;;8643:35:3::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8622:56:::0;-1:-1:-1;8693:14:3;;8689:145:::3;;8729:4;::::0;8723:32:::3;::::0;-1:-1:-1;;;8723:32:3;;::::3;::::0;::::3;345:25:9::0;;;8729:4:3::3;::::0;;::::3;-1:-1:-1::0;;;;;8729:4:3::3;::::0;8723:20:::3;::::0;318:18:9;;8723:32:3::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;8769:54;8800:10;8812;8769:30;:54::i;:::-;8882:21;::::0;8875:76:::3;::::0;-1:-1:-1;;;8875:76:3;;8936:4:::3;8875:76;::::0;::::3;2609:51:9::0;8844:28:3::3;::::0;-1:-1:-1;;;;;8882:21:3::3;::::0;8875:39:::3;::::0;2582:18:9;;8875:76:3::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8844:107:::0;-1:-1:-1;8966:24:3;;8962:201:::3;;9051:21;::::0;9006:146:::3;::::0;-1:-1:-1;;;;;9051:21:3::3;9090:10;9118:20:::0;9006:27:::3;:146::i;:::-;9212:22;::::0;9205:68:::3;::::0;-1:-1:-1;;;9205:68:3;;9267:4:::3;9205:68;::::0;::::3;2609:51:9::0;9173:29:3::3;::::0;-1:-1:-1;;;;;9212:22:3::3;::::0;9205:53:::3;::::0;2582:18:9;;9205:68:3::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9173:100:::0;-1:-1:-1;9288:25:3;;9284:204:::3;;9374:22;::::0;9329:148:::3;::::0;-1:-1:-1;;;;;9374:22:3::3;9414:10;9442:21:::0;9329:27:::3;:148::i;:::-;9497:14;::::0;;9558:10:::3;::::0;::::3;;:45;::::0;::::3;;;;;;:::i;:::-;::::0;9554:389:::3;;-1:-1:-1::0;9628:10:3;;-1:-1:-1;9661:20:3;9554:389:::3;;;9716:33;9702:10;::::0;::::3;;:47;::::0;::::3;;;;;;:::i;:::-;::::0;9698:245:::3;;-1:-1:-1::0;9774:21:3;;-1:-1:-1;9818:20:3;9698:245:::3;;;-1:-1:-1::0;9878:21:3;;-1:-1:-1;9922:10:3;9698:245:::3;10028:137;::::0;-1:-1:-1;;;10028:137:3;;10009:7:::3;::::0;-1:-1:-1;;;;;10028:36:3;::::3;::::0;::::3;::::0;:137:::3;::::0;10086:4:::3;::::0;10105:10:::3;::::0;10129:6;;10149;;10028:137:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;8569:1603;;;;;;;8495:1677::o:0;2915:187::-;1551:12;;3021:7;;;;-1:-1:-1;;;1551:12:3;;;;1543:54;;;;-1:-1:-1;;;1543:54:3;;;;;;;:::i;:::-;-1:-1:-1;;3061:16:3::1;::::0;3079:15:::1;::::0;2915:187;;:::o;4918:465::-;1033:15;1021:8;;:27;;:65;;;;;1071:15;;1052:16;;:34;1021:65;1000:134;;;;-1:-1:-1;;;1000:134:3;;;;;;;:::i;:::-;1551:12:::1;::::0;-1:-1:-1;;;1551:12:3;::::1;;;1543:54;;;;-1:-1:-1::0;;;1543:54:3::1;;;;;;;:::i;:::-;1654:33:::2;1711:7;1654:65;;1738:12;-1:-1:-1::0;;;;;1738:21:3::2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1737:24;1729:71;;;;-1:-1:-1::0;;;1729:71:3::2;;;;;;;:::i;:::-;1247:10:::3;::::0;5096:31:::3;::::0;1247:10:::3;;1232:25;::::0;::::3;;;;;;:::i;:::-;:11;:25;;;;;;;;:::i;:::-;;1224:71;;;;-1:-1:-1::0;;;1224:71:3::3;;;;;;;:::i;:::-;1744:1:1::4;2325:7;;:19:::0;2317:63:::4;;;;-1:-1:-1::0;;;2317:63:1::4;;;;;;;:::i;:::-;1744:1;2455:7;:18:::0;5169:16:3::5;::::0;::::5;;5164:176;;5239:15;;5226:9;:28;;5201:128;;;;-1:-1:-1::0;;;5201:128:3::5;;;;;;;:::i;:::-;5349:27;5367:8;5349:17;:27::i;1881:1028::-:0;2162:4;2186:10;-1:-1:-1;;;;;2200:7:3;2186:21;;2178:57;;;;-1:-1:-1;;;2178:57:3;;8740:2:9;2178:57:3;;;8722:21:9;8779:2;8759:18;;;8752:30;8818:25;8798:18;;;8791:53;8861:18;;2178:57:3;8538:347:9;2178:57:3;2255:12;;-1:-1:-1;;;2255:12:3;;;;2254:13;2246:59;;;;-1:-1:-1;;;2246:59:3;;9092:2:9;2246:59:3;;;9074:21:9;9131:2;9111:18;;;9104:30;9170:34;9150:18;;;9143:62;-1:-1:-1;;;9221:18:9;;;9214:31;9262:19;;2246:59:3;8890:397:9;2246:59:3;2336:15;2323:9;:28;;2315:68;;;;-1:-1:-1;;;2315:68:3;;9494:2:9;2315:68:3;;;9476:21:9;9533:2;9513:18;;;9506:30;9572:29;9552:18;;;9545:57;9619:18;;2315:68:3;9292:351:9;2315:68:3;2415:40;;-1:-1:-1;;;2415:40:3;;2449:4;2415:40;;;2609:51:9;2459:15:3;;-1:-1:-1;;;;;2415:25:3;;;;;2582:18:9;;2415:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;2394:140;;;;-1:-1:-1;;;2394:140:3;;9850:2:9;2394:140:3;;;9832:21:9;9889:2;9869:18;;;9862:30;9928:34;9908:18;;;9901:62;-1:-1:-1;;;9979:18:9;;;9972:32;10021:19;;2394:140:3;9648:398:9;2394:140:3;2545:8;:20;;;2576:22;:32;;-1:-1:-1;;;;;2576:32:3;;;-1:-1:-1;;;;;;2576:32:3;;;;;;;2618:21;:32;;;;;;;;;;;;;;;2661:16;:34;;;2705:15;:32;;;2748:10;:24;;2761:11;;2748:10;-1:-1:-1;;2748:24:3;2576:32;2761:11;2748:24;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;2783:16:3;:36;;;;;-1:-1:-1;;2783:36:3;;;;;;2830:4;:12;;-1:-1:-1;;;;;;;;;2830:12:3;;2783:36;2830:12;2853:19;-1:-1:-1;;;;;;2853:19:3;;;;-1:-1:-1;;;2853:19:3;;;;;;;2890:12;;2783:36;2890:12;1881:1028;;;;;;;;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3108:198:3:-;1551:12;;3213:7;;;;-1:-1:-1;;;1551:12:3;;;;1543:54;;;;-1:-1:-1;;;1543:54:3;;;;;;;:::i;:::-;-1:-1:-1;;3253:22:3::1;::::0;3277:21:::1;::::0;-1:-1:-1;;;;;3253:22:3;;::::1;::::0;3277:21:::1;3108:198:::0;;:::o;10178:142::-;10242:7;10298:15;;10278:16;;10269:6;:25;;;;:::i;:::-;10268:45;;;;:::i;:::-;10261:52;10178:142;-1:-1:-1;;10178:142:3:o;3312:686::-;3430:16;3460;3490;1551:12;;;;;;;;;;;1543:54;;;;-1:-1:-1;;;1543:54:3;;;;;;;:::i;:::-;3574:7:::1;:14:::0;3531:26:::1;::::0;3560:29:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3560:29:3::1;-1:-1:-1::0;3642:7:3::1;:14:::0;3531:58;;-1:-1:-1;3599:26:3::1;::::0;3628:29:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3628:29:3::1;-1:-1:-1::0;3711:7:3::1;:14:::0;3599:58;;-1:-1:-1;3667:27:3::1;::::0;3697:29:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;3697:29:3::1;;3667:59;;3742:9;3737:203;3761:7;:14:::0;3757:18;::::1;3737:203;;;3811:7;3819:1;3811:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:18:::0;3796:12;;-1:-1:-1;;;;;3811:18:3;;::::1;::::0;3796:9;;3806:1;;3796:12;::::1;;;;;:::i;:::-;;;;;;:33;-1:-1:-1::0;;;;;3796:33:3::1;;;-1:-1:-1::0;;;;;3796:33:3::1;;;::::0;::::1;3858:7;3866:1;3858:10;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;3843:9;3853:1;3843:12;;;;;;;;:::i;:::-;;;;;;:35;;;::::0;::::1;3908:7;3916:1;3908:10;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;3892:10;3903:1;3892:13;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:37;3777:3;::::1;::::0;::::1;:::i;:::-;;;;3737:203;;;-1:-1:-1::0;3958:9:3;;-1:-1:-1;3969:9:3;-1:-1:-1;3980:10:3;-1:-1:-1;3312:686:3;;;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11184:2:9;1998:73:0::1;::::0;::::1;11166:21:9::0;11223:2;11203:18;;;11196:30;11262:34;11242:18;;;11235:62;-1:-1:-1;;;11313:18:9;;;11306:36;11359:19;;1998:73:0::1;10982:402:9::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6493:1079:3:-;6585:21;;6578:51;;-1:-1:-1;;;6578:51:3;;6618:10;6578:51;;;2609::9;6633:8:3;;-1:-1:-1;;;;;6585:21:3;;6578:39;;2582:18:9;;6578:51:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;6557:144;;;;-1:-1:-1;;;6557:144:3;;;;;;;:::i;:::-;6712:17;6732:27;6750:8;6732:17;:27::i;:::-;6797:4;;6834:35;;-1:-1:-1;;;6834:35:3;;6863:4;6834:35;;;2609:51:9;6712:47:3;;-1:-1:-1;6797:4:3;;;-1:-1:-1;;;;;6797:4:3;;6712:47;;6797:4;;6834:20;;2582:18:9;;6834:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;6813:138;;;;-1:-1:-1;;;6813:138:3;;;;;;;:::i;:::-;7007:21;;6962:149;;-1:-1:-1;;;;;7007:21:3;7042:10;7074:4;7093:8;6962:31;:149::i;:::-;7128:4;;7122:31;;-1:-1:-1;;;7122:31:3;;;;;345:25:9;;;7128:4:3;;;;-1:-1:-1;;;;;7128:4:3;;7122:20;;318:18:9;;7122:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7164:53;7195:10;7207:9;7164:30;:53::i;:::-;7241:43;;;;;;;;7252:10;7241:43;;;;;;;;;;;;;;7228:7;:57;;;;;;;-1:-1:-1;7228:57:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7228:57:3;-1:-1:-1;;;;;7228:57:3;;;;;;;;;;;;;;;;;;;;;;;7315:16;:27;;7241:43;;7315:27;:::i;:::-;7296:16;:46;7428:137;;-1:-1:-1;;;7428:137:3;;7409:7;;-1:-1:-1;;;;;7428:31:3;;;;;:137;;7481:4;;7500:10;;7524:8;;7546:9;;7428:137;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6547:1025;;;6493:1079;:::o;5389:1098::-;5483:21;;5476:51;;-1:-1:-1;;;5476:51:3;;5516:10;5476:51;;;2609::9;5531:8:3;;-1:-1:-1;;;;;5483:21:3;;5476:39;;2582:18:9;;5476:51:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;5455:144;;;;-1:-1:-1;;;5455:144:3;;;;;;;:::i;:::-;5610:17;5630:27;5648:8;5630:17;:27::i;:::-;5696:22;;5689:55;;-1:-1:-1;;;5689:55:3;;5738:4;5689:55;;;2609:51:9;5610:47:3;;-1:-1:-1;5610:47:3;;-1:-1:-1;;;;;5696:22:3;;;;5689:40;;2582:18:9;;5689:55:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:84;;5668:174;;;;-1:-1:-1;;;5668:174:3;;;;;;;:::i;:::-;5898:21;;5853:149;;-1:-1:-1;;;;;5898:21:3;5933:10;5965:4;5984:8;5853:31;:149::i;:::-;6053:22;;6012:120;;-1:-1:-1;;;;;6053:22:3;6089:10;6113:9;6012:27;:120::i;:::-;6156:43;;;;;;;;6167:10;6156:43;;;;;;;;;;;;;;6143:7;:57;;;;;;;-1:-1:-1;6143:57:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6143:57:3;-1:-1:-1;;;;;6143:57:3;;;;;;;;;;;;;;;;;;;;;;;6230:16;:27;;6156:43;;6230:27;:::i;:::-;6211:16;:46;6343:137;;-1:-1:-1;;;6343:137:3;;6324:7;;-1:-1:-1;;;;;6343:31:3;;;;;:137;;6396:4;;6415:10;;6439:8;;6461:9;;6343:137;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:1042;;5389:1098;:::o;1333:192:8:-;1440:12;;;1402;1440;;;;;;;;;-1:-1:-1;;;;;1419:7:8;;;1433:5;;1419:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1401:52;;;1471:7;1463:55;;;;-1:-1:-1;;;1463:55:8;;12970:2:9;1463:55:8;;;12952:21:9;13009:2;12989:18;;;12982:30;13048:34;13028:18;;;13021:62;-1:-1:-1;;;13099:18:9;;;13092:33;13142:19;;1463:55:8;12768:399:9;1463:55:8;1391:134;1333:192;;:::o;566:357::-;759:45;;;-1:-1:-1;;;;;13364:32:9;;;759:45:8;;;13346:51:9;13413:18;;;;13406:34;;;759:45:8;;;;;;;;;;13319:18:9;;;;759:45:8;;;;;;;-1:-1:-1;;;;;759:45:8;-1:-1:-1;;;759:45:8;;;748:57;;-1:-1:-1;;;;748:10:8;;;;:57;;759:45;748:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:93;;;;823:7;:57;;;;-1:-1:-1;835:11:8;;:16;;:44;;;866:4;855:24;;;;;;;;;;;;:::i;:::-;815:101;;;;-1:-1:-1;;;815:101:8;;13653:2:9;815:101:8;;;13635:21:9;13692:2;13672:18;;;13665:30;13731:33;13711:18;;;13704:61;13782:18;;815:101:8;13451:355:9;815:101:8;636:287;;566:357;;;:::o;7578:911:3:-;7662:9;7650:8;:21;7642:71;;;;-1:-1:-1;;;7642:71:3;;14013:2:9;7642:71:3;;;13995:21:9;14052:2;14032:18;;;14025:30;14091:34;14071:18;;;14064:62;-1:-1:-1;;;14142:18:9;;;14135:35;14187:19;;7642:71:3;13811:401:9;7642:71:3;7724:17;7744:27;7762:8;7744:17;:27::i;:::-;7810:22;;7803:55;;-1:-1:-1;;;7803:55:3;;7852:4;7803:55;;;2609:51:9;7724:47:3;;-1:-1:-1;7724:47:3;;-1:-1:-1;;;;;7810:22:3;;;;7803:40;;2582:18:9;;7803:55:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:84;;7782:174;;;;-1:-1:-1;;;7782:174:3;;;;;;;:::i;:::-;7973:4;;;;;;;;;-1:-1:-1;;;;;7973:4:3;-1:-1:-1;;;;;7967:19:3;;7994:8;7967:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8057:22:3;;8016:120;;-1:-1:-1;;;;;;8057:22:3;;-1:-1:-1;8093:10:3;;-1:-1:-1;8117:9:3;8016:27;:120::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;929:398:8:-;1152:51;;;-1:-1:-1;;;;;14475:15:9;;;1152:51:8;;;14457:34:9;14527:15;;;14507:18;;;14500:43;14559:18;;;;14552:34;;;1152:51:8;;;;;;;;;;14392:18:9;;;;1152:51:8;;;;;;;-1:-1:-1;;;;;1152:51:8;-1:-1:-1;;;1152:51:8;;;1141:63;;-1:-1:-1;;;;1141:10:8;;;;:63;;1152:51;1141:63;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1105:99;;;;1222:7;:57;;;;-1:-1:-1;1234:11:8;;:16;;:44;;;1265:4;1254:24;;;;;;;;;;;;:::i;:::-;1214:106;;;;-1:-1:-1;;;1214:106:8;;14799:2:9;1214:106:8;;;14781:21:9;14838:2;14818:18;;;14811:30;14877:34;14857:18;;;14850:62;-1:-1:-1;;;14928:18:9;;;14921:34;14972:19;;1214:106:8;14597:400:9;1214:106:8;1017:310;;929:398;;;;:::o;14:180:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:9;;14:180;-1:-1:-1;14:180:9:o;826:173::-;894:20;;-1:-1:-1;;;;;943:31:9;;933:42;;923:70;;989:1;986;979:12;923:70;826:173;;;:::o;1004:118::-;1090:5;1083:13;1076:21;1069:5;1066:32;1056:60;;1112:1;1109;1102:12;1127:844;1268:6;1276;1284;1292;1300;1308;1316;1324;1377:3;1365:9;1356:7;1352:23;1348:33;1345:53;;;1394:1;1391;1384:12;1345:53;1433:9;1420:23;1472:1;1465:5;1462:12;1452:40;;1488:1;1485;1478:12;1452:40;1511:5;-1:-1:-1;1535:38:9;1569:2;1554:18;;1535:38;:::i;:::-;1525:48;;1592:38;1626:2;1615:9;1611:18;1592:38;:::i;:::-;1582:48;;1677:2;1666:9;1662:18;1649:32;1639:42;;1728:3;1717:9;1713:19;1700:33;1690:43;;1780:3;1769:9;1765:19;1752:33;1742:43;;1837:3;1826:9;1822:19;1809:33;1851:30;1873:7;1851:30;:::i;:::-;1900:7;-1:-1:-1;1926:39:9;1960:3;1945:19;;1926:39;:::i;:::-;1916:49;;1127:844;;;;;;;;;;;:::o;1976:127::-;2037:10;2032:3;2028:20;2025:1;2018:31;2068:4;2065:1;2058:15;2092:4;2089:1;2082:15;2108:350;2262:2;2247:18;;2295:1;2284:13;;2274:144;;2340:10;2335:3;2331:20;2328:1;2321:31;2375:4;2372:1;2365:15;2403:4;2400:1;2393:15;2274:144;2427:25;;;2108:350;:::o;2980:435::-;3033:3;3071:5;3065:12;3098:6;3093:3;3086:19;3124:4;3153:2;3148:3;3144:12;3137:19;;3190:2;3183:5;3179:14;3211:1;3221:169;3235:6;3232:1;3229:13;3221:169;;;3296:13;;3284:26;;3330:12;;;;3365:15;;;;3257:1;3250:9;3221:169;;;-1:-1:-1;3406:3:9;;2980:435;-1:-1:-1;;;;;2980:435:9:o;3420:1037::-;3766:2;3778:21;;;3848:13;;3751:18;;;3870:22;;;3718:4;;3946;;3923:3;3908:19;;;3973:15;;;3718:4;4016:195;4030:6;4027:1;4024:13;4016:195;;;4095:13;;-1:-1:-1;;;;;4091:39:9;4079:52;;4151:12;;;;4186:15;;;;4127:1;4045:9;4016:195;;;4020:3;;;4256:9;4251:3;4247:19;4242:2;4231:9;4227:18;4220:47;4290:41;4327:3;4319:6;4290:41;:::i;:::-;4276:55;;;4379:9;4371:6;4367:22;4362:2;4351:9;4347:18;4340:50;4407:44;4444:6;4436;4407:44;:::i;:::-;4399:52;3420:1037;-1:-1:-1;;;;;;3420:1037:9:o;4462:186::-;4521:6;4574:2;4562:9;4553:7;4549:23;4545:32;4542:52;;;4590:1;4587;4580:12;4542:52;4613:29;4632:9;4613:29;:::i;:::-;4603:39;4462:186;-1:-1:-1;;;4462:186:9:o;4653:346::-;4855:2;4837:21;;;4894:2;4874:18;;;4867:30;-1:-1:-1;;;4928:2:9;4913:18;;4906:52;4990:2;4975:18;;4653:346::o;5004:353::-;5206:2;5188:21;;;5245:2;5225:18;;;5218:30;5284:31;5279:2;5264:18;;5257:59;5348:2;5333:18;;5004:353::o;5362:245::-;5429:6;5482:2;5470:9;5461:7;5457:23;5453:32;5450:52;;;5498:1;5495;5488:12;5450:52;5530:9;5524:16;5549:28;5571:5;5549:28;:::i;5612:398::-;5814:2;5796:21;;;5853:2;5833:18;;;5826:30;5892:34;5887:2;5872:18;;5865:62;-1:-1:-1;;;5958:2:9;5943:18;;5936:32;6000:3;5985:19;;5612:398::o;6015:397::-;6217:2;6199:21;;;6256:2;6236:18;;;6229:30;6295:34;6290:2;6275:18;;6268:62;-1:-1:-1;;;6361:2:9;6346:18;;6339:31;6402:3;6387:19;;6015:397::o;6417:355::-;6619:2;6601:21;;;6658:2;6638:18;;;6631:30;6697:33;6692:2;6677:18;;6670:61;6763:2;6748:18;;6417:355::o;6777:405::-;6979:2;6961:21;;;7018:2;6998:18;;;6991:30;7057:34;7052:2;7037:18;;7030:62;-1:-1:-1;;;7123:2:9;7108:18;;7101:39;7172:3;7157:19;;6777:405::o;7536:356::-;7738:2;7720:21;;;7757:18;;;7750:30;7816:34;7811:2;7796:18;;7789:62;7883:2;7868:18;;7536:356::o;7897:184::-;7967:6;8020:2;8008:9;7999:7;7995:23;7991:32;7988:52;;;8036:1;8033;8026:12;7988:52;-1:-1:-1;8059:16:9;;7897:184;-1:-1:-1;7897:184:9:o;8086:447::-;-1:-1:-1;;;;;8373:15:9;;;8355:34;;8425:15;;;;8420:2;8405:18;;8398:43;8472:2;8457:18;;8450:34;8515:2;8500:18;;8493:34;;;;8304:3;8289:19;;8086:447::o;10051:127::-;10112:10;10107:3;10103:20;10100:1;10093:31;10143:4;10140:1;10133:15;10167:4;10164:1;10157:15;10183:168;10223:7;10289:1;10285;10281:6;10277:14;10274:1;10271:21;10266:1;10259:9;10252:17;10248:45;10245:71;;;10296:18;;:::i;:::-;-1:-1:-1;10336:9:9;;10183:168::o;10356:217::-;10396:1;10422;10412:132;;10466:10;10461:3;10457:20;10454:1;10447:31;10501:4;10498:1;10491:15;10529:4;10526:1;10519:15;10412:132;-1:-1:-1;10558:9:9;;10356:217::o;10578:127::-;10639:10;10634:3;10630:20;10627:1;10620:31;10670:4;10667:1;10660:15;10694:4;10691:1;10684:15;10710:127;10771:10;10766:3;10762:20;10759:1;10752:31;10802:4;10799:1;10792:15;10826:4;10823:1;10816:15;10842:135;10881:3;10902:17;;;10899:43;;10922:18;;:::i;:::-;-1:-1:-1;10969:1:9;10958:13;;10842:135::o;11389:398::-;11591:2;11573:21;;;11630:2;11610:18;;;11603:30;11669:34;11664:2;11649:18;;11642:62;-1:-1:-1;;;11735:2:9;11720:18;;11713:32;11777:3;11762:19;;11389:398::o;11792:407::-;11994:2;11976:21;;;12033:2;12013:18;;;12006:30;12072:34;12067:2;12052:18;;12045:62;-1:-1:-1;;;12138:2:9;12123:18;;12116:41;12189:3;12174:19;;11792:407::o;12204:128::-;12244:3;12275:1;12271:6;12268:1;12265:13;12262:39;;;12281:18;;:::i;:::-;-1:-1:-1;12317:9:9;;12204:128::o;12337:426::-;12466:3;12504:6;12498:13;12529:1;12539:129;12553:6;12550:1;12547:13;12539:129;;;12651:4;12635:14;;;12631:25;;12625:32;12612:11;;;12605:53;12568:12;12539:129;;;12686:6;12683:1;12680:13;12677:48;;;12721:1;12712:6;12707:3;12703:16;12696:27;12677:48;-1:-1:-1;12741:16:9;;;;;12337:426;-1:-1:-1;;12337:426:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1764600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "185",
								"_initialized()": "2417",
								"allowMultiBarter()": "2354",
								"barterType()": "2396",
								"deadline()": "2330",
								"factory()": "infinite",
								"getAmounts()": "6638",
								"getTokens()": "6736",
								"getTradeOutAmount(uint256)": "4707",
								"getTrades()": "infinite",
								"initialize(uint8,address,address,uint256,uint256,uint256,bool,address)": "infinite",
								"owner()": "2387",
								"renounceOwnership()": "28137",
								"totalTradeAmount()": "2351",
								"tradeEthForToken(uint256)": "infinite",
								"tradeTokenForEth(uint256)": "infinite",
								"tradeTokenForToken(uint256)": "infinite",
								"transferOwnership(address)": "28419",
								"withdraw()": "infinite"
							},
							"internal": {
								"_tradeEthForToken(uint256)": "infinite",
								"_tradeTokenForEth(uint256)": "infinite",
								"_tradeTokenForToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 332,
									"end": 10512,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 620,
									"end": 652,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 620,
									"end": 652,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 620,
									"end": 652,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 620,
									"end": 652,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 620,
									"end": 652,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 620,
									"end": 652,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1824,
									"end": 1875,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1824,
									"end": 1875,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1824,
									"end": 1875,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1824,
									"end": 1875,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1824,
									"end": 1875,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1824,
									"end": 1875,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1824,
									"end": 1875,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1824,
									"end": 1875,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1824,
									"end": 1875,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1824,
									"end": 1875,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1858,
									"end": 1868,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1848,
									"end": 1868,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1848,
									"end": 1868,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "183"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 10512,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b409e083d708ffbf307e2d16b4e25b1559346863d3880ac8fcfc49974c5c51e64736f6c634300080d0033",
									".code": [
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "C45A0155"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "C45A0155"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "C6EA7038"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "DAB5A8DF"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "E43372E9"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "89523742"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "AA6CA808"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "3CCFD60B"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "3CCFD60B"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "3D370B4E"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "40A6F1AB"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "4341F920"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "5F5780E5"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "D182605"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "29DCB0CF"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "2FFC6887"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "3072CF60"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 332,
											"end": 10512,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 522,
											"end": 545,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 522,
											"end": 545,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 620,
											"end": 652,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 620,
											"end": 652,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 620,
											"end": 652,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 546,
											"end": 560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 546,
											"end": 560,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 539,
											"end": 561,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 521,
											"end": 562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 521,
											"end": 562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 509,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 620,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 381,
											"end": 568,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 747,
											"end": 772,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 747,
											"end": 772,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 747,
											"end": 772,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 803,
											"end": 805,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 788,
											"end": 806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 781,
											"end": 815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 781,
											"end": 815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 781,
											"end": 815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 781,
											"end": 815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 720,
											"end": 738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 573,
											"end": 821,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 450,
											"end": 481,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 450,
											"end": 481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 450,
											"end": 481,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 450,
											"end": 481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 450,
											"end": 481,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 450,
											"end": 481,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 450,
											"end": 481,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 551,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 551,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 551,
											"end": 586,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2463,
											"end": 2666,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 2916,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2901,
											"end": 2916,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2901,
											"end": 2916,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2917,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2917,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2968,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2968,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2968,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2950,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2969,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2818,
											"end": 2836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2671,
											"end": 2975,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 403,
											"end": 444,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 487,
											"end": 515,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 487,
											"end": 515,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1033,
											"end": 1048,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1086,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1071,
											"end": 1086,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1068,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1052,
											"end": 1068,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1086,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1654,
											"end": 1719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "PUSH",
											"source": 3,
											"value": "B187BD26"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4699,
											"end": 4715,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4699,
											"end": 4715,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4715,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4699,
											"end": 4715,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4694,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4694,
											"end": 4869,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4783,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4768,
											"end": 4783,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4756,
											"end": 4764,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4756,
											"end": 4783,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4756,
											"end": 4783,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4731,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4896,
											"end": 4904,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4878,
											"end": 4905,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4878,
											"end": 4905,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4878,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4912,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4004,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1033,
											"end": 1048,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1086,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1071,
											"end": 1086,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1068,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1052,
											"end": 1068,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1086,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1654,
											"end": 1719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "PUSH",
											"source": 3,
											"value": "B187BD26"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4168,
											"end": 4201,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4168,
											"end": 4201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4259,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4243,
											"end": 4259,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4259,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4243,
											"end": 4259,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4238,
											"end": 4413,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4312,
											"end": 4327,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4312,
											"end": 4327,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4300,
											"end": 4308,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4300,
											"end": 4327,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4300,
											"end": 4327,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4275,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4442,
											"end": 4450,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4422,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1383,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1375,
											"end": 1383,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1401,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1440,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1375,
											"end": 1440,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1440,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1425,
											"end": 1440,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1405,
											"end": 1421,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1440,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1440,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1440,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1375,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7389,
											"end": 7391,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7371,
											"end": 7392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7428,
											"end": 7430,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7408,
											"end": 7426,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7408,
											"end": 7426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7408,
											"end": 7426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "537943726F774261727465723A20414354495645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7490,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7525,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7507,
											"end": 7525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 7187,
											"end": 7531,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1354,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8672,
											"end": 8676,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8579,
											"end": 8596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8579,
											"end": 8596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8663,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 8643,
											"end": 8663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 8643,
											"end": 8678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8622,
											"end": 8678,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8693,
											"end": 8707,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8693,
											"end": 8707,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8689,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 8689,
											"end": 8834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8743,
											"name": "PUSH",
											"source": 3,
											"value": "2E1A7D4D"
										},
										{
											"begin": 8723,
											"end": 8743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8769,
											"end": 8823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 8800,
											"end": 8810,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8812,
											"end": 8822,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8769,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 8769,
											"end": 8823,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8769,
											"end": 8823,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 8769,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8882,
											"end": 8903,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 8882,
											"end": 8903,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8936,
											"end": 8940,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8844,
											"end": 8872,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8844,
											"end": 8872,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8882,
											"end": 8903,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8882,
											"end": 8903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8914,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 8875,
											"end": 8914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8875,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8966,
											"end": 8990,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8966,
											"end": 8990,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8962,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 8962,
											"end": 9163,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9051,
											"end": 9072,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 9051,
											"end": 9072,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9006,
											"end": 9152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9006,
											"end": 9152,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9051,
											"end": 9072,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9090,
											"end": 9100,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9138,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9006,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 9006,
											"end": 9152,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9006,
											"end": 9152,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9006,
											"end": 9152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9212,
											"end": 9234,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 9212,
											"end": 9234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9267,
											"end": 9271,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9173,
											"end": 9202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9173,
											"end": 9202,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9212,
											"end": 9234,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9212,
											"end": 9234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9258,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 9205,
											"end": 9258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 9205,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9173,
											"end": 9273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9288,
											"end": 9313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9288,
											"end": 9313,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9284,
											"end": 9488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 9284,
											"end": 9488,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9396,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 9374,
											"end": 9396,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9329,
											"end": 9477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 9329,
											"end": 9477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9374,
											"end": 9396,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9424,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9442,
											"end": 9463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9329,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 9329,
											"end": 9477,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9329,
											"end": 9477,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 9329,
											"end": 9477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9497,
											"end": 9511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9497,
											"end": 9511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9568,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 9558,
											"end": 9568,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9568,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 9558,
											"end": 9568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9603,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9554,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 9554,
											"end": 9943,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9628,
											"end": 9638,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9628,
											"end": 9638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9661,
											"end": 9681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9554,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 9554,
											"end": 9943,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9554,
											"end": 9943,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 9554,
											"end": 9943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9716,
											"end": 9749,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9702,
											"end": 9712,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 9702,
											"end": 9712,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9712,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 9702,
											"end": 9712,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 9698,
											"end": 9943,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9774,
											"end": 9795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9774,
											"end": 9795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9818,
											"end": 9838,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 9698,
											"end": 9943,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 9943,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 9698,
											"end": 9943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9878,
											"end": 9899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9878,
											"end": 9899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9922,
											"end": 9932,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 9943,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 9698,
											"end": 9943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19BCB507"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10009,
											"end": 10016,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10009,
											"end": 10016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "PUSH",
											"source": 3,
											"value": "33796A0E"
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10086,
											"end": 10090,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 10086,
											"end": 10090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10105,
											"end": 10115,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 10105,
											"end": 10115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10129,
											"end": 10135,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 10129,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10149,
											"end": 10155,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 10149,
											"end": 10155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8569,
											"end": 10172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8569,
											"end": 10172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8569,
											"end": 10172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8569,
											"end": 10172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8569,
											"end": 10172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8569,
											"end": 10172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8569,
											"end": 10172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 10172,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3061,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3061,
											"end": 3077,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3079,
											"end": 3094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 3102,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4918,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1033,
											"end": 1048,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1086,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1071,
											"end": 1086,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1068,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1052,
											"end": 1068,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1086,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1021,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1000,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1654,
											"end": 1719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "PUSH",
											"source": 3,
											"value": "B187BD26"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1738,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5096,
											"end": 5127,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5096,
											"end": 5127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1224,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5185,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5169,
											"end": 5185,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5169,
											"end": 5185,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5169,
											"end": 5185,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5164,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5164,
											"end": 5340,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5239,
											"end": 5254,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 5239,
											"end": 5254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5226,
											"end": 5235,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5226,
											"end": 5254,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5226,
											"end": 5254,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5201,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5367,
											"end": 5375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5349,
											"end": 5376,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2166,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2196,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2200,
											"end": 2207,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8740,
											"end": 8742,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8722,
											"end": 8743,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8781,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 8759,
											"end": 8777,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8759,
											"end": 8777,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8759,
											"end": 8777,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 8782,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8843,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A20464F5242494444454E000000000000000000"
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8791,
											"end": 8844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 8538,
											"end": 8885,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 2178,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2267,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2255,
											"end": 2267,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2267,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2267,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2255,
											"end": 2267,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2267,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9094,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9074,
											"end": 9095,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9133,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 9111,
											"end": 9129,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9111,
											"end": 9129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9111,
											"end": 9129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9204,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A20414C52454144595F494E495449414C495A45"
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9221,
											"end": 9239,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9221,
											"end": 9239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9214,
											"end": 9245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9262,
											"end": 9281,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9262,
											"end": 9281,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 8890,
											"end": 9287,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2246,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2351,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2332,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9494,
											"end": 9496,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9533,
											"end": 9535,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9506,
											"end": 9536,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9572,
											"end": 9601,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A20504153545F444541444C494E450000000000"
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9545,
											"end": 9602,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9619,
											"end": 9637,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9619,
											"end": 9637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 9292,
											"end": 9643,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2315,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2453,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2474,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2440,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2440,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2440,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2440,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 2415,
											"end": 2440,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9850,
											"end": 9852,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9832,
											"end": 9853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9889,
											"end": 9891,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9862,
											"end": 9892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9962,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A20494E53554646494349454E545F4445504F53"
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 9963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9972,
											"end": 10004,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10021,
											"end": 10040,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10021,
											"end": 10040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 9648,
											"end": 10046,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2394,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2553,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2545,
											"end": 2565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2565,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2598,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2639,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2677,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2661,
											"end": 2695,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2695,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2705,
											"end": 2737,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2737,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2737,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2799,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2830,
											"end": 2842,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2830,
											"end": 2842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "OR",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 2909,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3220,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3220,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3220,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3253,
											"end": 3275,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3253,
											"end": 3275,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3298,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3277,
											"end": 3298,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3253,
											"end": 3275,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3275,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3275,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3298,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3306,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10242,
											"end": 10249,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10298,
											"end": 10313,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 10298,
											"end": 10313,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10278,
											"end": 10294,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 10278,
											"end": 10294,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10269,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 10269,
											"end": 10294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10269,
											"end": 10294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10269,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 10269,
											"end": 10294,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10269,
											"end": 10294,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 10269,
											"end": 10294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10268,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 10268,
											"end": 10313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10268,
											"end": 10313,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10268,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 10268,
											"end": 10313,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10268,
											"end": 10313,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 10268,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10261,
											"end": 10313,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10178,
											"end": 10320,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3430,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 1543,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3574,
											"end": 3588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3531,
											"end": 3557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 3560,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3642,
											"end": 3656,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3531,
											"end": 3589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3531,
											"end": 3589,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3599,
											"end": 3625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3718,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3940,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 3737,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3761,
											"end": 3775,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 3940,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 3737,
											"end": 3940,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3818,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3819,
											"end": 3820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3805,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3806,
											"end": 3807,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3806,
											"end": 3807,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3865,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3866,
											"end": 3867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3878,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3858,
											"end": 3878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3878,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3852,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3853,
											"end": 3854,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3878,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3878,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3878,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3929,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3908,
											"end": 3929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3929,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3902,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 3904,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3929,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 3737,
											"end": 3940,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 3940,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 3737,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3958,
											"end": 3967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3958,
											"end": 3967,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3969,
											"end": 3978,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3980,
											"end": 3990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3998,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11186,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11166,
											"end": 11187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11223,
											"end": 11225,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 11203,
											"end": 11221,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11203,
											"end": 11221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11203,
											"end": 11221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11196,
											"end": 11226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11262,
											"end": 11296,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11297,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11306,
											"end": 11342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11359,
											"end": 11378,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11359,
											"end": 11378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10982,
											"end": 11384,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6493,
											"end": 7572,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 6493,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6606,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 6585,
											"end": 6606,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6628,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6633,
											"end": 6641,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6633,
											"end": 6641,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6585,
											"end": 6606,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6617,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 6578,
											"end": 6617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6578,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6641,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6641,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 6557,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6729,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 6750,
											"end": 6758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 6732,
											"end": 6759,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6759,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 6732,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6863,
											"end": 6867,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6712,
											"end": 6759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6759,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6854,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 6834,
											"end": 6854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 6834,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6882,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6882,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 6813,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7007,
											"end": 7028,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7007,
											"end": 7028,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6962,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 6962,
											"end": 7111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7007,
											"end": 7028,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7042,
											"end": 7052,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7074,
											"end": 7078,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 7093,
											"end": 7101,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6962,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 6962,
											"end": 7111,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6962,
											"end": 7111,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 6962,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7142,
											"name": "PUSH",
											"source": 3,
											"value": "2E1A7D4D"
										},
										{
											"begin": 7122,
											"end": 7142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 7195,
											"end": 7205,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7207,
											"end": 7216,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7164,
											"end": 7217,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7164,
											"end": 7217,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 7164,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7262,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7235,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "PUSH",
											"source": 3,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "PUSH",
											"source": 3,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9"
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "PUSH",
											"source": 3,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA"
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7285,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7315,
											"end": 7331,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7296,
											"end": 7312,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7296,
											"end": 7342,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F52701B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7409,
											"end": 7416,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7409,
											"end": 7416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7428,
											"end": 7459,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7459,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7459,
											"name": "PUSH",
											"source": 3,
											"value": "F52701B7"
										},
										{
											"begin": 7428,
											"end": 7459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7485,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7510,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7532,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7546,
											"end": 7555,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 7546,
											"end": 7555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 7572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 7572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 7572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 7572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 7572,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5389,
											"end": 6487,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5389,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5483,
											"end": 5504,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 5483,
											"end": 5504,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5516,
											"end": 5526,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5531,
											"end": 5539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5531,
											"end": 5539,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5483,
											"end": 5504,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5483,
											"end": 5504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5515,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 5476,
											"end": 5515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 5476,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5539,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5539,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 5455,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5627,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 5648,
											"end": 5656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5630,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5630,
											"end": 5657,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5630,
											"end": 5657,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 5630,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5718,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5696,
											"end": 5718,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5657,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5696,
											"end": 5718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5718,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5729,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 5689,
											"end": 5729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 5689,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5773,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5773,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 5668,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5898,
											"end": 5919,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 5898,
											"end": 5919,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5853,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 5853,
											"end": 6002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5898,
											"end": 5919,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 5943,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5965,
											"end": 5969,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5853,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5853,
											"end": 6002,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5853,
											"end": 6002,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 5853,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6053,
											"end": 6075,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6053,
											"end": 6075,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6012,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 6012,
											"end": 6132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6053,
											"end": 6075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6099,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6122,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6012,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6012,
											"end": 6132,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6012,
											"end": 6132,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 6012,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6167,
											"end": 6177,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6150,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "PUSH",
											"source": 3,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "PUSH",
											"source": 3,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9"
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "PUSH",
											"source": 3,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA"
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6230,
											"end": 6246,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 6230,
											"end": 6257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6199,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 6230,
											"end": 6257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6230,
											"end": 6257,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 6230,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6211,
											"end": 6257,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F52701B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6343,
											"end": 6374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6374,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6374,
											"name": "PUSH",
											"source": 3,
											"value": "F52701B7"
										},
										{
											"begin": 6343,
											"end": 6374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6396,
											"end": 6400,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 6396,
											"end": 6400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6415,
											"end": 6425,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6415,
											"end": 6425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6439,
											"end": 6447,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6439,
											"end": 6447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5445,
											"end": 6487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5445,
											"end": 6487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 6487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 6487,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1333,
											"end": 1525,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1333,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1401,
											"end": 1453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1401,
											"end": 1453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1401,
											"end": 1453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12970,
											"end": 12972,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12952,
											"end": 12973,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13009,
											"end": 13011,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12982,
											"end": 13012,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13048,
											"end": 13082,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E7366657248656C7065723A204554485F5452414E534645525F464149"
										},
										{
											"begin": 13028,
											"end": 13046,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13028,
											"end": 13046,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13021,
											"end": 13083,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13099,
											"end": 13117,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13099,
											"end": 13117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13099,
											"end": 13117,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13125,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13142,
											"end": 13161,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13142,
											"end": 13161,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 12768,
											"end": 13167,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 1463,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1525,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 566,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 566,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13364,
											"end": 13396,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13364,
											"end": 13396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13364,
											"end": 13396,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 759,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13397,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13413,
											"end": 13431,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13413,
											"end": 13431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13413,
											"end": 13431,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13413,
											"end": 13431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13406,
											"end": 13440,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13406,
											"end": 13440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13406,
											"end": 13440,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 759,
											"end": 804,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 759,
											"end": 804,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 748,
											"end": 758,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 758,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 748,
											"end": 758,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 759,
											"end": 804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 748,
											"end": 805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 712,
											"end": 805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 712,
											"end": 805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 712,
											"end": 805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 712,
											"end": 805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 823,
											"end": 830,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 823,
											"end": 880,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 823,
											"end": 880,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 823,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 823,
											"end": 880,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 835,
											"end": 846,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 835,
											"end": 846,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 835,
											"end": 851,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 835,
											"end": 851,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 835,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 835,
											"end": 879,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 835,
											"end": 879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 866,
											"end": 870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 855,
											"end": 879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 855,
											"end": 879,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 855,
											"end": 879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 855,
											"end": 879,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 855,
											"end": 879,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 855,
											"end": 879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 855,
											"end": 879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 855,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 855,
											"end": 879,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 855,
											"end": 879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 855,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 855,
											"end": 879,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 879,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 855,
											"end": 879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 815,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 815,
											"end": 916,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 815,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 916,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 815,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 815,
											"end": 916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13653,
											"end": 13655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 815,
											"end": 916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 815,
											"end": 916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13635,
											"end": 13656,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13692,
											"end": 13694,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 13672,
											"end": 13690,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13672,
											"end": 13690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13672,
											"end": 13690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13665,
											"end": 13695,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13731,
											"end": 13764,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E7366657248656C7065723A205452414E534645525F4641494C454400"
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13704,
											"end": 13765,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 815,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 13451,
											"end": 13806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 815,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 815,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 636,
											"end": 923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 636,
											"end": 923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 566,
											"end": 923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 566,
											"end": 923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 566,
											"end": 923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 566,
											"end": 923,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7578,
											"end": 8489,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7578,
											"end": 8489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7650,
											"end": 7658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7650,
											"end": 7671,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14013,
											"end": 14015,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13995,
											"end": 14016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14052,
											"end": 14054,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14025,
											"end": 14055,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14091,
											"end": 14125,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A204D554C54495F54524144455F4E4F545F454E"
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14064,
											"end": 14126,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1050931151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14135,
											"end": 14170,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14187,
											"end": 14206,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 14187,
											"end": 14206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 13811,
											"end": 14212,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "tag",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 7642,
											"end": 7713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7724,
											"end": 7741,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 7762,
											"end": 7770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7744,
											"end": 7771,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7744,
											"end": 7771,
											"name": "tag",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 7744,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7832,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 7810,
											"end": 7832,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2660,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7724,
											"end": 7771,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7724,
											"end": 7771,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7724,
											"end": 7771,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7724,
											"end": 7771,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7810,
											"end": 7832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7832,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7843,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 7803,
											"end": 7843,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "tag",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "tag",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 7803,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7887,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7803,
											"end": 7887,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "435"
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "tag",
											"source": 3,
											"value": "435"
										},
										{
											"begin": 7782,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7967,
											"end": 7986,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 7986,
											"name": "PUSH",
											"source": 3,
											"value": "D0E30DB0"
										},
										{
											"begin": 7994,
											"end": 8002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "tag",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 7967,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8057,
											"end": 8079,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 8057,
											"end": 8079,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 8016,
											"end": 8136,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8057,
											"end": 8079,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8079,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8093,
											"end": 8103,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8093,
											"end": 8103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8117,
											"end": 8126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 8016,
											"end": 8136,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14475,
											"end": 14490,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14475,
											"end": 14490,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14475,
											"end": 14490,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14457,
											"end": 14491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14527,
											"end": 14542,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14527,
											"end": 14542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14527,
											"end": 14542,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14500,
											"end": 14543,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14552,
											"end": 14586,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14552,
											"end": 14586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14552,
											"end": 14586,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1105,
											"end": 1204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1105,
											"end": 1204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1105,
											"end": 1204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1105,
											"end": 1204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1222,
											"end": 1229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1222,
											"end": 1279,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1222,
											"end": 1279,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1222,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1222,
											"end": 1279,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1245,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1245,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1234,
											"end": 1278,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1265,
											"end": 1269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1254,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14799,
											"end": 14801,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14781,
											"end": 14802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14838,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14818,
											"end": 14836,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14818,
											"end": 14836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14818,
											"end": 14836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14811,
											"end": 14841,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14877,
											"end": 14911,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641"
										},
										{
											"begin": 14857,
											"end": 14875,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14857,
											"end": 14875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14857,
											"end": 14875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14850,
											"end": 14912,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14928,
											"end": 14946,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14928,
											"end": 14946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14928,
											"end": 14946,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14921,
											"end": 14955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14972,
											"end": 14991,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 14972,
											"end": 14991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 14597,
											"end": 14997,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 1214,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1017,
											"end": 1327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1017,
											"end": 1327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 929,
											"end": 1327,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 826,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 826,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 894,
											"end": 914,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 894,
											"end": 914,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 943,
											"end": 974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 943,
											"end": 974,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 933,
											"end": 975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 933,
											"end": 975,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 923,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 923,
											"end": 993,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 989,
											"end": 990,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 979,
											"end": 991,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 923,
											"end": 993,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 923,
											"end": 993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 826,
											"end": 999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 826,
											"end": 999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 826,
											"end": 999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 826,
											"end": 999,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1004,
											"end": 1122,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 1004,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1095,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1083,
											"end": 1096,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1097,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1066,
											"end": 1098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 1056,
											"end": 1116,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1306,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1380,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1356,
											"end": 1363,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1375,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1381,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1345,
											"end": 1398,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1345,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 1345,
											"end": 1398,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1394,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1396,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1345,
											"end": 1398,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 1345,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1442,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1474,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1478,
											"end": 1490,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1511,
											"end": 1516,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1535,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 1535,
											"end": 1573,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1535,
											"end": 1573,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 1535,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1573,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 1626,
											"end": 1628,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 1592,
											"end": 1630,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1630,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 1592,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1582,
											"end": 1630,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1582,
											"end": 1630,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1681,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 1731,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1733,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1733,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1780,
											"end": 1783,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1769,
											"end": 1778,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1785,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1837,
											"end": 1840,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1822,
											"end": 1841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1842,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1851,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 1873,
											"end": 1880,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1851,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 1851,
											"end": 1881,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1881,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 1851,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1907,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 1960,
											"end": 1963,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 1926,
											"end": 1965,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1926,
											"end": 1965,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 1926,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 1965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 1965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1971,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1976,
											"end": 2103,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1976,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2047,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2028,
											"end": 2048,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2058,
											"end": 2073,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2092,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2458,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2108,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2295,
											"end": 2296,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2284,
											"end": 2297,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2297,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 2274,
											"end": 2418,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2340,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2335,
											"end": 2338,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2331,
											"end": 2351,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2379,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2407,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2418,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 2274,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2452,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2452,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2458,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3415,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 2980,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3076,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3077,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3104,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3093,
											"end": 3096,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3105,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3124,
											"end": 3128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3155,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3156,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3192,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3188,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3179,
											"end": 3193,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3212,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3242,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3258,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 3221,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3415,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2980,
											"end": 3415,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3420,
											"end": 4457,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 3420,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3768,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3778,
											"end": 3799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 3722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3722,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 3950,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3946,
											"end": 3950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 3927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 3988,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 3988,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 3988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3718,
											"end": 3722,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4030,
											"end": 4036,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4037,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4095,
											"end": 4108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4095,
											"end": 4108,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4131,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4128,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 4016,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4256,
											"end": 4265,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4251,
											"end": 4254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4247,
											"end": 4266,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4240,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 4327,
											"end": 4330,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 4290,
											"end": 4331,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4290,
											"end": 4331,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 4290,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4331,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4379,
											"end": 4388,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4436,
											"end": 4442,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4451,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 4457,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3420,
											"end": 4457,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4462,
											"end": 4648,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4462,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4553,
											"end": 4560,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4545,
											"end": 4577,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 4632,
											"end": 4641,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4642,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4648,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4462,
											"end": 4648,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4653,
											"end": 4999,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4653,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 4857,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4858,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4837,
											"end": 4858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4837,
											"end": 4858,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4894,
											"end": 4896,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4897,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "537943726F774261727465723A20494E414354495645"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4928,
											"end": 4930,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 4958,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4653,
											"end": 4999,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5004,
											"end": 5357,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 5004,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5188,
											"end": 5209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5209,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5218,
											"end": 5248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5284,
											"end": 5315,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A204E4F545F494E495449414C495A4544000000"
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5316,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5350,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5004,
											"end": 5357,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5362,
											"end": 5607,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5362,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5435,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5482,
											"end": 5484,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5461,
											"end": 5468,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5480,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5485,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5488,
											"end": 5500,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5540,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5549,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 5571,
											"end": 5576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5549,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 5549,
											"end": 5577,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5612,
											"end": 6010,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5612,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5814,
											"end": 5816,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5817,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 5817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 5817,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5853,
											"end": 5855,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5856,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5892,
											"end": 5926,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A204261736520436F6E74726163742050617573"
										},
										{
											"begin": 5887,
											"end": 5889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5872,
											"end": 5890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5872,
											"end": 5890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5865,
											"end": 5927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5958,
											"end": 5960,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5943,
											"end": 5961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5943,
											"end": 5961,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5936,
											"end": 5968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6000,
											"end": 6003,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5985,
											"end": 6004,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5612,
											"end": 6010,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6015,
											"end": 6412,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 6015,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6219,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 6220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6220,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6258,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6259,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6295,
											"end": 6329,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A20494E56414C49445F4241525445525F545950"
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6275,
											"end": 6293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6268,
											"end": 6330,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6361,
											"end": 6363,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6346,
											"end": 6364,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6346,
											"end": 6364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6339,
											"end": 6370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6402,
											"end": 6405,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6387,
											"end": 6406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6387,
											"end": 6406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6015,
											"end": 6412,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6417,
											"end": 6772,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6417,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6619,
											"end": 6621,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6601,
											"end": 6622,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6660,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6730,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6692,
											"end": 6694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6765,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6748,
											"end": 6766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6748,
											"end": 6766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6772,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6777,
											"end": 7182,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6777,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6979,
											"end": 6981,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6982,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6961,
											"end": 6982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6961,
											"end": 6982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7020,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6998,
											"end": 7016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7021,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7091,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A20414D4F554E545F4C4F5745525F5448414E5F"
										},
										{
											"begin": 7052,
											"end": 7054,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149154555492549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7123,
											"end": 7125,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7108,
											"end": 7126,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7108,
											"end": 7126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7101,
											"end": 7140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 7182,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7536,
											"end": 7892,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 7536,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7750,
											"end": 7780,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7816,
											"end": 7850,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7811,
											"end": 7813,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7789,
											"end": 7851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7883,
											"end": 7885,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7868,
											"end": 7886,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7868,
											"end": 7886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7536,
											"end": 7892,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7897,
											"end": 8081,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 7897,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7967,
											"end": 7973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8022,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8017,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8006,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7995,
											"end": 8018,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8023,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8036,
											"end": 8037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8059,
											"end": 8075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7897,
											"end": 8081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7897,
											"end": 8081,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8086,
											"end": 8533,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8086,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8355,
											"end": 8389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8355,
											"end": 8389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8425,
											"end": 8440,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8425,
											"end": 8440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8425,
											"end": 8440,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8425,
											"end": 8440,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8420,
											"end": 8422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8398,
											"end": 8441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8474,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8450,
											"end": 8484,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8517,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8500,
											"end": 8518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8500,
											"end": 8518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 8527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 8527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 8527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8493,
											"end": 8527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8304,
											"end": 8307,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8289,
											"end": 8308,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8086,
											"end": 8533,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10051,
											"end": 10178,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 10051,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10112,
											"end": 10122,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10107,
											"end": 10110,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10103,
											"end": 10123,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10100,
											"end": 10101,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10093,
											"end": 10124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10143,
											"end": 10147,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10140,
											"end": 10141,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10133,
											"end": 10148,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10164,
											"end": 10165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10157,
											"end": 10172,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10183,
											"end": 10351,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 10183,
											"end": 10351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10223,
											"end": 10230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10289,
											"end": 10290,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10281,
											"end": 10287,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10277,
											"end": 10291,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10274,
											"end": 10275,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10292,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10266,
											"end": 10267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10259,
											"end": 10268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10252,
											"end": 10269,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10248,
											"end": 10293,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10245,
											"end": 10316,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10245,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 10245,
											"end": 10316,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10336,
											"end": 10345,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10183,
											"end": 10351,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10356,
											"end": 10573,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 10356,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10396,
											"end": 10397,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10412,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 10412,
											"end": 10544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10466,
											"end": 10476,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10461,
											"end": 10464,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10457,
											"end": 10477,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10447,
											"end": 10478,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10501,
											"end": 10505,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 10498,
											"end": 10499,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10491,
											"end": 10506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10533,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10519,
											"end": 10534,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10412,
											"end": 10544,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 10412,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10567,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10558,
											"end": 10567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10356,
											"end": 10573,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10578,
											"end": 10705,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 10578,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10639,
											"end": 10649,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10634,
											"end": 10637,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10630,
											"end": 10650,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10627,
											"end": 10628,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10620,
											"end": 10651,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10674,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 10667,
											"end": 10668,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10660,
											"end": 10675,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10694,
											"end": 10698,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10691,
											"end": 10692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10684,
											"end": 10699,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10710,
											"end": 10837,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 10710,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10771,
											"end": 10781,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10766,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10762,
											"end": 10782,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10759,
											"end": 10760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10752,
											"end": 10783,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10802,
											"end": 10806,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 10799,
											"end": 10800,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10792,
											"end": 10807,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10826,
											"end": 10830,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10823,
											"end": 10824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10816,
											"end": 10831,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10842,
											"end": 10977,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 10842,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 10884,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10902,
											"end": 10919,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10902,
											"end": 10919,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10902,
											"end": 10919,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10899,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 10899,
											"end": 10942,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 10922,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10969,
											"end": 10970,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10958,
											"end": 10971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10842,
											"end": 10977,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11389,
											"end": 11787,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 11389,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11591,
											"end": 11593,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11573,
											"end": 11594,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11594,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11630,
											"end": 11632,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 11610,
											"end": 11628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11610,
											"end": 11628,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11610,
											"end": 11628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11603,
											"end": 11633,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11669,
											"end": 11703,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A20494E53554646494349454E545F42414C414E"
										},
										{
											"begin": 11664,
											"end": 11666,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11642,
											"end": 11704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11735,
											"end": 11737,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11720,
											"end": 11738,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11720,
											"end": 11738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11713,
											"end": 11745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11777,
											"end": 11780,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11762,
											"end": 11781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11762,
											"end": 11781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11389,
											"end": 11787,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11792,
											"end": 12199,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 11792,
											"end": 12199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11994,
											"end": 11996,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11976,
											"end": 11997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 11997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 11997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12033,
											"end": 12035,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 12013,
											"end": 12031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12013,
											"end": 12031,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12013,
											"end": 12031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12006,
											"end": 12036,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12106,
											"name": "PUSH",
											"source": 9,
											"value": "537943726F774261727465723A20494E53554646494349454E545F434F4E5452"
										},
										{
											"begin": 12067,
											"end": 12069,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12052,
											"end": 12070,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12052,
											"end": 12070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12107,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4143545F42414C414E4345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12138,
											"end": 12140,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12123,
											"end": 12141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12116,
											"end": 12157,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12189,
											"end": 12192,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12174,
											"end": 12193,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12174,
											"end": 12193,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 12199,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12204,
											"end": 12332,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 12204,
											"end": 12332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12244,
											"end": 12247,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12271,
											"end": 12277,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12265,
											"end": 12278,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12262,
											"end": 12301,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12262,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 12262,
											"end": 12301,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 12281,
											"end": 12299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 12281,
											"end": 12299,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12281,
											"end": 12299,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 12281,
											"end": 12299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12317,
											"end": 12326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12317,
											"end": 12326,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12204,
											"end": 12332,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12337,
											"end": 12763,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 12337,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12466,
											"end": 12469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12498,
											"end": 12511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12529,
											"end": 12530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12539,
											"end": 12668,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 12539,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12553,
											"end": 12559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12547,
											"end": 12560,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12539,
											"end": 12668,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12539,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 12539,
											"end": 12668,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12651,
											"end": 12655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12635,
											"end": 12649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12635,
											"end": 12649,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12635,
											"end": 12649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12631,
											"end": 12656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12631,
											"end": 12656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12625,
											"end": 12657,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12612,
											"end": 12623,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12612,
											"end": 12623,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12612,
											"end": 12623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12605,
											"end": 12658,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12568,
											"end": 12580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12539,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 12539,
											"end": 12668,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12539,
											"end": 12668,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 12539,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12683,
											"end": 12684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12680,
											"end": 12693,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12677,
											"end": 12725,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12677,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 12677,
											"end": 12725,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 12722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12712,
											"end": 12718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12707,
											"end": 12710,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12703,
											"end": 12719,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12696,
											"end": 12723,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12677,
											"end": 12725,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 12677,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12741,
											"end": 12757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12741,
											"end": 12757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12741,
											"end": 12757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12741,
											"end": 12757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12741,
											"end": 12757,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12337,
											"end": 12763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12337,
											"end": 12763,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_initialized()": "3072cf60",
							"allowMultiBarter()": "c6ea7038",
							"barterType()": "89523742",
							"deadline()": "29dcb0cf",
							"factory()": "c45a0155",
							"getAmounts()": "3d370b4e",
							"getTokens()": "aa6ca808",
							"getTradeOutAmount(uint256)": "dab5a8df",
							"getTrades()": "e43372e9",
							"initialize(uint8,address,address,uint256,uint256,uint256,bool,address)": "5f5780e5",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"totalTradeAmount()": "40a6f1ab",
							"tradeEthForToken(uint256)": "4341f920",
							"tradeTokenForEth(uint256)": "0d182605",
							"tradeTokenForToken(uint256)": "2ffc6887",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMultiBarter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"barterType\",\"outputs\":[{\"internalType\":\"enum ISyCrowBarterType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTradeOutAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrades\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ISyCrowBarterType\",\"name\":\"_barterType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"inToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountExpected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_allowMultiBarter\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTradeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeEthForToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeTokenForEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeTokenForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SycrowBarter.sol\":\"SyCrowBarter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/SycrowBarter.sol\":{\"keccak256\":\"0xe516452114e3983ec2def9f2ba8d7d871c4a962ddbb2641fdd7a89e7b82497c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16f440a3405d02283662e4baa9dac21fbf3d42c3696d9ca4ac05ffeecd9b11b8\",\"dweb:/ipfs/QmQyUHDVQHNAQD2cHaNaRvh6xCakgw8XYc1A5k5Gnq8BhP\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6a893389aeb9cf9b279b402c7d4b56196c6cdcc13dcb1802dfcf6e29559d3ba3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d554598212ea1aa0c0fccee4b9b469df5d938bafa5c42c2a67a93f3b715fd63\",\"dweb:/ipfs/QmVbvYR5QFtpY39fzwTWKk1ghpXusizgz62wbpf75GLXkn\"]},\"contracts/interfaces/ISyCrowBarter.sol\":{\"keccak256\":\"0xfda4532f79218f318917a7e6eead42c9b8304ae2198009951a8f015d6f1f7fd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d4becdae792a02fe9fc65aa7805565943ffde6cae75653df6571ee2327d35e\",\"dweb:/ipfs/QmVw3JBK8zztQ1aPbfSHASfwh2sN9ceSXen1Vo5cteahV4\"]},\"contracts/interfaces/ISyCrowBarterFactory.sol\":{\"keccak256\":\"0x0b1fabbedd2b3879a1ff66ea2b9369b547490475f4275a02a4b7f7b6e937b759\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b247d38e8e59a175bbded7a94c62cf87e3d2ab3d2a15a8f33432bcdc1d455863\",\"dweb:/ipfs/QmYBeQkcovGLykFLfLy1kTasHK6r2DGVQLQVCLT9u8J5z3\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x48429d7752165439258d8d6a26ea29150d5af05374b9182de97982a544ef35d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b09b55a8331e9de6a903b319e3e0a89e2fafb38bdce098ca14aa05b08723c792\",\"dweb:/ipfs/QmdQtkqgCdwAfVFWX1cAGi8urTS7D23ax3ETs4ykLXFYNT\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x4d076df1676fb5f85d7dda5ef0b5610c3aebd2729a7c32a1bf3bad105f1aac7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://354e47ea2ac17432f862c476e95a7e504607c1829a125e9f4257c4ec99fcb4e6\",\"dweb:/ipfs/Qme2sV3FsSvN3uALvpN1tbQkTpUgFEjg2gHXSrwEkGjgCZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 115,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 185,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "totalTradeAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 187,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "allowMultiBarter",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 189,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "deadline",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 192,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "barterType",
								"offset": 0,
								"slot": "5",
								"type": "t_enum(ISyCrowBarterType)1130"
							},
							{
								"astId": 194,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "WETH",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 197,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_initialized",
								"offset": 21,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 199,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_depositedTokenAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 201,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_expectedTokenAddress",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 203,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_depositedAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 205,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_expectedAmount",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 209,
								"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
								"label": "_trades",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_struct(BaterTrade)216_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(BaterTrade)216_storage)dyn_storage": {
								"base": "t_struct(BaterTrade)216_storage",
								"encoding": "dynamic_array",
								"label": "struct SyCrowBarter.BaterTrade[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(ISyCrowBarterType)1130": {
								"encoding": "inplace",
								"label": "enum ISyCrowBarterType",
								"numberOfBytes": "1"
							},
							"t_struct(BaterTrade)216_storage": {
								"encoding": "inplace",
								"label": "struct SyCrowBarter.BaterTrade",
								"members": [
									{
										"astId": 211,
										"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
										"label": "_trader",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 213,
										"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
										"label": "_amountIn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 215,
										"contract": "contracts/SycrowBarter.sol:SyCrowBarter",
										"label": "_amountOut",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6a893389aeb9cf9b279b402c7d4b56196c6cdcc13dcb1802dfcf6e29559d3ba3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d554598212ea1aa0c0fccee4b9b469df5d938bafa5c42c2a67a93f3b715fd63\",\"dweb:/ipfs/QmVbvYR5QFtpY39fzwTWKk1ghpXusizgz62wbpf75GLXkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ISyCrowBarter.sol": {
				"ISyCrowBarter": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrades",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeEthForToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeTokenForEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inAmount",
									"type": "uint256"
								}
							],
							"name": "tradeTokenForToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"getAmounts()": "3d370b4e",
							"getTokens()": "aa6ca808",
							"getTrades()": "e43372e9",
							"tradeEthForToken(uint256)": "4341f920",
							"tradeTokenForEth(uint256)": "0d182605",
							"tradeTokenForToken(uint256)": "2ffc6887",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrades\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeEthForToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeTokenForEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"}],\"name\":\"tradeTokenForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISyCrowBarter.sol\":\"ISyCrowBarter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISyCrowBarter.sol\":{\"keccak256\":\"0xfda4532f79218f318917a7e6eead42c9b8304ae2198009951a8f015d6f1f7fd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d4becdae792a02fe9fc65aa7805565943ffde6cae75653df6571ee2327d35e\",\"dweb:/ipfs/QmVw3JBK8zztQ1aPbfSHASfwh2sN9ceSXen1Vo5cteahV4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ISyCrowBarterFactory.sol": {
				"ISyCrowBarterFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "enum ISyCrowBarterType",
									"name": "_barterType",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_createdBy",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_barter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_inToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_outToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_deadline",
									"type": "uint256"
								}
							],
							"name": "SyCrowBarterCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_barter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_inAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "outAmount",
									"type": "uint256"
								}
							],
							"name": "SyCrowTradeByBarter",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_barter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value2",
									"type": "uint256"
								}
							],
							"name": "SyCrowWithdrawFromBater",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allBarters",
							"outputs": [
								{
									"internalType": "address",
									"name": "barter",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allBartersLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_inToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_outToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_deposited",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_expected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deadline",
									"type": "uint256"
								},
								{
									"internalType": "enum ISyCrowBarterType",
									"name": "_type",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "_allowMultiBarter",
									"type": "bool"
								}
							],
							"name": "createBarter",
							"outputs": [
								{
									"internalType": "address",
									"name": "barter",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeCollector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getUserBarter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserBarters",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "barters",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserBartersLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_barter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_trader",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_inAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "outAmount",
									"type": "uint256"
								}
							],
							"name": "notifyTradeByBarter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_barter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_trader",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value2",
									"type": "uint256"
								}
							],
							"name": "notifyWithdrawFromBarter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeCollector",
									"type": "address"
								}
							],
							"name": "setFeeCollector",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "pause",
									"type": "bool"
								}
							],
							"name": "setPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_baseFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "enable",
									"type": "bool"
								}
							],
							"name": "setUsePriceFeeds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBarterDeployed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allBarters(uint256)": "e55ef116",
							"allBartersLength()": "5c56559f",
							"createBarter(address,address,uint256,uint256,uint256,uint8,bool)": "db52d829",
							"feeCollector()": "c415b95c",
							"getFee()": "ced72f87",
							"getUserBarter(address,uint256)": "60612180",
							"getUserBarters(address)": "e71a76c9",
							"getUserBartersLength(address)": "48403459",
							"isPaused()": "b187bd26",
							"notifyTradeByBarter(address,address,uint256,uint256)": "f52701b7",
							"notifyWithdrawFromBarter(address,address,uint256,uint256)": "33796a0e",
							"setFeeCollector(address)": "a42dce80",
							"setPause(bool)": "bedb86fb",
							"setUsePriceFeeds(uint256,bool)": "ac9e981c",
							"totalBarterDeployed()": "be931a41"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum ISyCrowBarterType\",\"name\":\"_barterType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_createdBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_barter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_inToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_outToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"SyCrowBarterCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_barter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_inAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outAmount\",\"type\":\"uint256\"}],\"name\":\"SyCrowTradeByBarter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_barter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value2\",\"type\":\"uint256\"}],\"name\":\"SyCrowWithdrawFromBater\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allBarters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"barter\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allBartersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_inToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_outToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"enum ISyCrowBarterType\",\"name\":\"_type\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"_allowMultiBarter\",\"type\":\"bool\"}],\"name\":\"createBarter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"barter\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUserBarter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserBarters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"barters\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserBartersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_barter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_inAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outAmount\",\"type\":\"uint256\"}],\"name\":\"notifyTradeByBarter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_barter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value2\",\"type\":\"uint256\"}],\"name\":\"notifyWithdrawFromBarter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setUsePriceFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBarterDeployed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISyCrowBarterFactory.sol\":\"ISyCrowBarterFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISyCrowBarter.sol\":{\"keccak256\":\"0xfda4532f79218f318917a7e6eead42c9b8304ae2198009951a8f015d6f1f7fd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d4becdae792a02fe9fc65aa7805565943ffde6cae75653df6571ee2327d35e\",\"dweb:/ipfs/QmVw3JBK8zztQ1aPbfSHASfwh2sN9ceSXen1Vo5cteahV4\"]},\"contracts/interfaces/ISyCrowBarterFactory.sol\":{\"keccak256\":\"0x0b1fabbedd2b3879a1ff66ea2b9369b547490475f4275a02a4b7f7b6e937b759\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b247d38e8e59a175bbded7a94c62cf87e3d2ab3d2a15a8f33432bcdc1d455863\",\"dweb:/ipfs/QmYBeQkcovGLykFLfLy1kTasHK6r2DGVQLQVCLT9u8J5z3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x48429d7752165439258d8d6a26ea29150d5af05374b9182de97982a544ef35d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b09b55a8331e9de6a903b319e3e0a89e2fafb38bdce098ca14aa05b08723c792\",\"dweb:/ipfs/QmdQtkqgCdwAfVFWX1cAGi8urTS7D23ax3ETs4ykLXFYNT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/TransferHelper.sol\":177:1527  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/TransferHelper.sol\":177:1527  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e6b81340e295accd9367be2d091dac8ac0f2f3a9d762e70d05c726ed1c9006064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e6b81340e295accd9367be2d091dac8ac0f2f3a9d762e70d05c726ed1c9006064736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY PUSH12 0x81340E295ACCD9367BE2D091 0xDA 0xC8 0xAC 0xF 0x2F GASPRICE SWAP14 PUSH23 0x2E70D05C726ED1C9006064736F6C634300080D00330000 ",
							"sourceMap": "177:1350:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;177:1350:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e6b81340e295accd9367be2d091dac8ac0f2f3a9d762e70d05c726ed1c9006064736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY PUSH12 0x81340E295ACCD9367BE2D091 0xDA 0xC8 0xAC 0xF 0x2F GASPRICE SWAP14 PUSH23 0x2E70D05C726ED1C9006064736F6C634300080D00330000 ",
							"sourceMap": "177:1350:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 177,
									"end": 1527,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e6b81340e295accd9367be2d091dac8ac0f2f3a9d762e70d05c726ed1c9006064736f6c634300080d0033",
									".code": [
										{
											"begin": 177,
											"end": 1527,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 177,
											"end": 1527,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x4d076df1676fb5f85d7dda5ef0b5610c3aebd2729a7c32a1bf3bad105f1aac7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://354e47ea2ac17432f862c476e95a7e504607c1829a125e9f4257c4ec99fcb4e6\",\"dweb:/ipfs/Qme2sV3FsSvN3uALvpN1tbQkTpUgFEjg2gHXSrwEkGjgCZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							166
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 167,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								166
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 110,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 144,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 128,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 134,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 143,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 152,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 151,
												"id": 154,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 166,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 161,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 160,
												"id": 163,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 166,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 167,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"contracts/SycrowBarter.sol": {
				"ast": {
					"absolutePath": "contracts/SycrowBarter.sol",
					"exportedSymbols": {
						"Context": [
							166
						],
						"IERC20": [
							1124
						],
						"ISyCrowBarter": [
							1180
						],
						"ISyCrowBarterFactory": [
							1334
						],
						"ISyCrowBarterType": [
							1130
						],
						"IWETH": [
							1345
						],
						"Ownable": [
							104
						],
						"ReentrancyGuard": [
							144
						],
						"SyCrowBarter": [
							1114
						],
						"TransferHelper": [
							1505
						]
					},
					"id": 1115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1115,
							"sourceUnit": 105,
							"src": "59:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1115,
							"sourceUnit": 145,
							"src": "112:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ISyCrowBarterFactory.sol",
							"file": "./interfaces/ISyCrowBarterFactory.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1115,
							"sourceUnit": 1335,
							"src": "175:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1115,
							"sourceUnit": 1125,
							"src": "223:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TransferHelper.sol",
							"file": "./libraries/TransferHelper.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1115,
							"sourceUnit": 1506,
							"src": "257:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IWETH.sol",
							"file": "./interfaces/IWETH.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1115,
							"sourceUnit": 1346,
							"src": "298:32:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 175,
										"name": "ISyCrowBarter",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1180,
										"src": "357:13:3"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "357:13:3"
								},
								{
									"baseName": {
										"id": 177,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "372:7:3"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:3"
								},
								{
									"baseName": {
										"id": 179,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 144,
										"src": "381:15:3"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "381:15:3"
								}
							],
							"canonicalName": "SyCrowBarter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1114,
							"linearizedBaseContracts": [
								1114,
								144,
								104,
								166,
								1180
							],
							"name": "SyCrowBarter",
							"nameLocation": "341:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1135
									],
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 183,
									"mutability": "immutable",
									"name": "factory",
									"nameLocation": "437:7:3",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "428:8:3"
									},
									"scope": 1114,
									"src": "403:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 181,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "403:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "40a6f1ab",
									"id": 185,
									"mutability": "mutable",
									"name": "totalTradeAmount",
									"nameLocation": "465:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "450:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 184,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "450:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6ea7038",
									"id": 187,
									"mutability": "mutable",
									"name": "allowMultiBarter",
									"nameLocation": "499:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "487:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 186,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "487:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "29dcb0cf",
									"id": 189,
									"mutability": "mutable",
									"name": "deadline",
									"nameLocation": "537:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "522:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "522:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89523742",
									"id": 192,
									"mutability": "mutable",
									"name": "barterType",
									"nameLocation": "576:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "551:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
										"typeString": "enum ISyCrowBarterType"
									},
									"typeName": {
										"id": 191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 190,
											"name": "ISyCrowBarterType",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1130,
											"src": "551:17:3"
										},
										"referencedDeclaration": 1130,
										"src": "551:17:3",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
											"typeString": "enum ISyCrowBarterType"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "609:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "593:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 193,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "593:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3072cf60",
									"id": 197,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "632:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "620:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 195,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "620:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 196,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "647:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 199,
									"mutability": "mutable",
									"name": "_depositedTokenAddress",
									"nameLocation": "674:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "658:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 198,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_expectedTokenAddress",
									"nameLocation": "718:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "702:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 200,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "702:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_depositedAmount",
									"nameLocation": "761:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "745:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "745:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "_expectedAmount",
									"nameLocation": "799:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "783:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "783:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 209,
									"mutability": "mutable",
									"name": "_trades",
									"nameLocation": "842:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "821:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
										"typeString": "struct SyCrowBarter.BaterTrade[]"
									},
									"typeName": {
										"baseType": {
											"id": 207,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 206,
												"name": "BaterTrade",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 216,
												"src": "821:10:3"
											},
											"referencedDeclaration": 216,
											"src": "821:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BaterTrade_$216_storage_ptr",
												"typeString": "struct SyCrowBarter.BaterTrade"
											}
										},
										"id": 208,
										"nodeType": "ArrayTypeName",
										"src": "821:12:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage_ptr",
											"typeString": "struct SyCrowBarter.BaterTrade[]"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "SyCrowBarter.BaterTrade",
									"id": 216,
									"members": [
										{
											"constant": false,
											"id": 211,
											"mutability": "mutable",
											"name": "_trader",
											"nameLocation": "892:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 216,
											"src": "884:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 210,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "884:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 213,
											"mutability": "mutable",
											"name": "_amountIn",
											"nameLocation": "917:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 216,
											"src": "909:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 212,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "909:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 215,
											"mutability": "mutable",
											"name": "_amountOut",
											"nameLocation": "944:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 216,
											"src": "936:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 214,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "936:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BaterTrade",
									"nameLocation": "863:10:3",
									"nodeType": "StructDefinition",
									"scope": 1114,
									"src": "856:105:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "990:162:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 219,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "1021:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 220,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1033:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1033:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1021:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "totalTradeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "1052:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 224,
																	"name": "_expectedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "1071:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1052:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1021:65:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e414354495645",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1100:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c34f7dbf762d3d0b96bf148f8cc4593d2b9473ef3d73cd2c557f8a9dbd3100e5",
																"typeString": "literal_string \"SyCrowBarter: INACTIVE\""
															},
															"value": "SyCrowBarter: INACTIVE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c34f7dbf762d3d0b96bf148f8cc4593d2b9473ef3d73cd2c557f8a9dbd3100e5",
																"typeString": "literal_string \"SyCrowBarter: INACTIVE\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1000:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1000:134:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1000:134:3"
											},
											{
												"id": 230,
												"nodeType": "PlaceholderStatement",
												"src": "1144:1:3"
											}
										]
									},
									"id": 232,
									"name": "checkActive",
									"nameLocation": "976:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:3"
									},
									"src": "967:185:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1214:99:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
																"typeString": "enum ISyCrowBarterType"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 238,
																"name": "_barterType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "1232:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
																	"typeString": "enum ISyCrowBarterType"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 239,
																"name": "barterType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1247:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
																	"typeString": "enum ISyCrowBarterType"
																}
															},
															"src": "1232:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e56414c49445f4241525445525f54595045",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1259:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e50a0ae171cffc9efca2ecf30038ab4bcc5d422964b87e2fe386b4e70f368d12",
																"typeString": "literal_string \"SyCrowBarter: INVALID_BARTER_TYPE\""
															},
															"value": "SyCrowBarter: INVALID_BARTER_TYPE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e50a0ae171cffc9efca2ecf30038ab4bcc5d422964b87e2fe386b4e70f368d12",
																"typeString": "literal_string \"SyCrowBarter: INVALID_BARTER_TYPE\""
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1224:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1224:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "1224:71:3"
											},
											{
												"id": 244,
												"nodeType": "PlaceholderStatement",
												"src": "1305:1:3"
											}
										]
									},
									"id": 246,
									"name": "checkBarterType",
									"nameLocation": "1167:15:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "_barterType",
												"nameLocation": "1201:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1183:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
													"typeString": "enum ISyCrowBarterType"
												},
												"typeName": {
													"id": 234,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 233,
														"name": "ISyCrowBarterType",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1130,
														"src": "1183:17:3"
													},
													"referencedDeclaration": 1130,
													"src": "1183:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
														"typeString": "enum ISyCrowBarterType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:31:3"
									},
									"src": "1158:155:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1344:160:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 249,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "1375:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 250,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1386:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1386:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1375:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 253,
																	"name": "totalTradeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "1405:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 254,
																	"name": "_expectedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "1425:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1405:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1375:65:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20414354495645",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1454:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b599e4ab958a4499af0e5f2ac52329fcb13f4955c7283e3523e952de95899b8c",
																"typeString": "literal_string \"SyCrowBarter: ACTIVE\""
															},
															"value": "SyCrowBarter: ACTIVE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b599e4ab958a4499af0e5f2ac52329fcb13f4955c7283e3523e952de95899b8c",
																"typeString": "literal_string \"SyCrowBarter: ACTIVE\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1354:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1354:132:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "1354:132:3"
											},
											{
												"id": 260,
												"nodeType": "PlaceholderStatement",
												"src": "1496:1:3"
											}
										]
									},
									"id": 262,
									"name": "checkInActive",
									"nameLocation": "1328:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1341:2:3"
									},
									"src": "1319:185:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "1533:82:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "_initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1551:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a204e4f545f494e495449414c495a4544",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1565:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08e3709bf4c0b831cf8bc5788c36b99c92ad6a02cff038f75ddd0795dadbe1e7",
																"typeString": "literal_string \"SyCrowBarter: NOT_INITIALIZED\""
															},
															"value": "SyCrowBarter: NOT_INITIALIZED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08e3709bf4c0b831cf8bc5788c36b99c92ad6a02cff038f75ddd0795dadbe1e7",
																"typeString": "literal_string \"SyCrowBarter: NOT_INITIALIZED\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1543:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1543:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "1543:54:3"
											},
											{
												"id": 269,
												"nodeType": "PlaceholderStatement",
												"src": "1607:1:3"
											}
										]
									},
									"id": 271,
									"name": "initialized",
									"nameLocation": "1519:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1530:2:3"
									},
									"src": "1510:105:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "1644:174:3",
										"statements": [
											{
												"assignments": [
													275
												],
												"declarations": [
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "isycrFactory",
														"nameLocation": "1675:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 289,
														"src": "1654:33:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
															"typeString": "contract ISyCrowBarterFactory"
														},
														"typeName": {
															"id": 274,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 273,
																"name": "ISyCrowBarterFactory",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1334,
																"src": "1654:20:3"
															},
															"referencedDeclaration": 1334,
															"src": "1654:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"arguments": [
														{
															"id": 277,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "1711:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 276,
														"name": "ISyCrowBarterFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "1690:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISyCrowBarterFactory_$1334_$",
															"typeString": "type(contract ISyCrowBarterFactory)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1690:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
														"typeString": "contract ISyCrowBarterFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1654:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1737:24:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 281,
																		"name": "isycrFactory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 275,
																		"src": "1738:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
																			"typeString": "contract ISyCrowBarterFactory"
																		}
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isPaused",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1299,
																	"src": "1738:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
																		"typeString": "function () view external returns (bool)"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1738:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a204261736520436f6e747261637420506175736564",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1763:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79383cfc7011af228083c91a74f19d88be46e1e2713e67b50fb07b6b50771355",
																"typeString": "literal_string \"SyCrowBarter: Base Contract Paused\""
															},
															"value": "SyCrowBarter: Base Contract Paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79383cfc7011af228083c91a74f19d88be46e1e2713e67b50fb07b6b50771355",
																"typeString": "literal_string \"SyCrowBarter: Base Contract Paused\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1729:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1729:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1729:71:3"
											},
											{
												"id": 288,
												"nodeType": "PlaceholderStatement",
												"src": "1810:1:3"
											}
										]
									},
									"id": 290,
									"name": "checkPaused",
									"nameLocation": "1630:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1641:2:3"
									},
									"src": "1621:197:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "1838:37:3",
										"statements": [
											{
												"expression": {
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 293,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1848:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 294,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1858:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1858:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1848:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "1848:20:3"
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1835:2:3"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1838:0:3"
									},
									"scope": 1114,
									"src": "1824:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "2168:741:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 322,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2186:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2186:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 324,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2200:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2186:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20464f5242494444454e",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2209:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e99d902835ef330efdeb5defc7644c488a1d9bd398555c575e8f17cb2a43c8b2",
																"typeString": "literal_string \"SyCrowBarter: FORBIDDEN\""
															},
															"value": "SyCrowBarter: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e99d902835ef330efdeb5defc7644c488a1d9bd398555c575e8f17cb2a43c8b2",
																"typeString": "literal_string \"SyCrowBarter: FORBIDDEN\""
															}
														],
														"id": 321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2178:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "2178:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2254:13:3",
															"subExpression": {
																"id": 330,
																"name": "_initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "2255:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20414c52454144595f494e495449414c495a4544",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2269:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53c2ce6ed47c179816a9c6f0033c5d03f04949b869cef6fd14d5246b67912975",
																"typeString": "literal_string \"SyCrowBarter: ALREADY_INITIALIZED\""
															},
															"value": "SyCrowBarter: ALREADY_INITIALIZED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_53c2ce6ed47c179816a9c6f0033c5d03f04949b869cef6fd14d5246b67912975",
																"typeString": "literal_string \"SyCrowBarter: ALREADY_INITIALIZED\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2246:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2246:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "2246:59:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 336,
																"name": "_deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "2323:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 337,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2336:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2336:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2323:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20504153545f444541444c494e45",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a273cae0d429ffac620d41ddcccea1b71b9e6e453a8ce90983b3e22305b1505",
																"typeString": "literal_string \"SyCrowBarter: PAST_DEADLINE\""
															},
															"value": "SyCrowBarter: PAST_DEADLINE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a273cae0d429ffac620d41ddcccea1b71b9e6e453a8ce90983b3e22305b1505",
																"typeString": "literal_string \"SyCrowBarter: PAST_DEADLINE\""
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2315:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2315:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "2315:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 350,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2449:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																					"typeString": "contract SyCrowBarter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																					"typeString": "contract SyCrowBarter"
																				}
																			],
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2441:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 348,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2441:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2441:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 345,
																				"name": "inToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 304,
																				"src": "2422:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 344,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1124,
																			"src": "2415:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1124_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2415:15:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1124",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1123,
																	"src": "2415:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2415:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 353,
																"name": "amountDeposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "2459:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2415:59:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f4445504f534954",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2488:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60471f58a070287600518638a3de995e7f8b72f058b8593fb94e6702bacc457b",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_DEPOSIT\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_DEPOSIT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60471f58a070287600518638a3de995e7f8b72f058b8593fb94e6702bacc457b",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_DEPOSIT\""
															}
														],
														"id": 343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:140:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2394:140:3"
											},
											{
												"expression": {
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 358,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2545:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 359,
														"name": "_deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "2556:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2545:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "2545:20:3"
											},
											{
												"expression": {
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 362,
														"name": "_depositedTokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "2576:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 363,
														"name": "inToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2601:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2576:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "2576:32:3"
											},
											{
												"expression": {
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 366,
														"name": "_expectedTokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "2618:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 367,
														"name": "outToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "2642:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2618:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "2618:32:3"
											},
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 370,
														"name": "_depositedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2661:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 371,
														"name": "amountDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2680:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2661:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "2661:34:3"
											},
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "_expectedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2705:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 375,
														"name": "amountExpected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "2723:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2705:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "2705:32:3"
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 378,
														"name": "barterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2748:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
															"typeString": "enum ISyCrowBarterType"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 379,
														"name": "_barterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2761:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
															"typeString": "enum ISyCrowBarterType"
														}
													},
													"src": "2748:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
														"typeString": "enum ISyCrowBarterType"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "2748:24:3"
											},
											{
												"expression": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 382,
														"name": "allowMultiBarter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "2783:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 383,
														"name": "_allowMultiBarter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "2802:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2783:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "2783:36:3"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 386,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "2830:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 387,
														"name": "_WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "2837:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2830:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "2830:12:3"
											},
											{
												"expression": {
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 390,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "2853:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2868:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2853:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "2853:19:3"
											},
											{
												"expression": {
													"id": 394,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 197,
													"src": "2890:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 320,
												"id": 395,
												"nodeType": "Return",
												"src": "2883:19:3"
											}
										]
									},
									"functionSelector": "5f5780e5",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1890:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "_barterType",
												"nameLocation": "1928:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1910:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
													"typeString": "enum ISyCrowBarterType"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "ISyCrowBarterType",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1130,
														"src": "1910:17:3"
													},
													"referencedDeclaration": 1130,
													"src": "1910:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
														"typeString": "enum ISyCrowBarterType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "1957:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1949:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1949:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "outToken",
												"nameLocation": "1982:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1974:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1974:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "amountDeposited",
												"nameLocation": "2008:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2000:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "amountExpected",
												"nameLocation": "2041:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2033:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "2073:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2065:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "_allowMultiBarter",
												"nameLocation": "2097:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2092:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2092:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_WETH",
												"nameLocation": "2132:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2124:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:243:3"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2162:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2162:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2161:6:3"
									},
									"scope": 1114,
									"src": "1881:1028:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1142
									],
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "3043:59:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 407,
															"name": "_depositedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "3061:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 408,
															"name": "_expectedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3079:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 409,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3060:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 406,
												"id": 410,
												"nodeType": "Return",
												"src": "3053:42:3"
											}
										]
									},
									"functionSelector": "3d370b4e",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 400,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "2992:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2992:11:3"
										}
									],
									"name": "getAmounts",
									"nameLocation": "2924:10:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 399,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2975:8:3"
									},
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2934:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3021:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3021:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3030:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3020:18:3"
									},
									"scope": 1114,
									"src": "2915:187:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1149
									],
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "3235:71:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 422,
															"name": "_depositedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3253:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "_expectedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "3277:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 424,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3252:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "3245:54:3"
											}
										]
									},
									"functionSelector": "aa6ca808",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 415,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "3184:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3184:11:3"
										}
									],
									"name": "getTokens",
									"nameLocation": "3117:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 414,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3167:8:3"
									},
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3126:2:3"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3213:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3222:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:18:3"
									},
									"scope": 1114,
									"src": "3108:198:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1161
									],
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "3521:477:3",
										"statements": [
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "addresses",
														"nameLocation": "3548:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "3531:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 444,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3531:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 445,
															"nodeType": "ArrayTypeName",
															"src": "3531:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 453,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 450,
																"name": "_trades",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "3574:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
																	"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3574:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3560:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 447,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3564:7:3",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 448,
															"nodeType": "ArrayTypeName",
															"src": "3564:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3560:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3531:58:3"
											},
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "amountsIn",
														"nameLocation": "3616:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "3599:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 456,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3599:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 457,
															"nodeType": "ArrayTypeName",
															"src": "3599:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 462,
																"name": "_trades",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "3642:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
																	"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3642:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3628:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 459,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 460,
															"nodeType": "ArrayTypeName",
															"src": "3632:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3628:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3599:58:3"
											},
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "amountsOut",
														"nameLocation": "3684:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "3667:27:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 468,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3667:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 469,
															"nodeType": "ArrayTypeName",
															"src": "3667:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 474,
																"name": "_trades",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "3711:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
																	"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3711:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3697:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 471,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3701:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 472,
															"nodeType": "ArrayTypeName",
															"src": "3701:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3667:59:3"
											},
											{
												"body": {
													"id": 516,
													"nodeType": "Block",
													"src": "3782:158:3",
													"statements": [
														{
															"expression": {
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 489,
																		"name": "addresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "3796:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 491,
																	"indexExpression": {
																		"id": 490,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "3806:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3796:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 492,
																			"name": "_trades",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 209,
																			"src": "3811:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
																				"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																			}
																		},
																		"id": 494,
																		"indexExpression": {
																			"id": 493,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 479,
																			"src": "3819:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3811:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BaterTrade_$216_storage",
																			"typeString": "struct SyCrowBarter.BaterTrade storage ref"
																		}
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_trader",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 211,
																	"src": "3811:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3796:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 497,
															"nodeType": "ExpressionStatement",
															"src": "3796:33:3"
														},
														{
															"expression": {
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 498,
																		"name": "amountsIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "3843:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 500,
																	"indexExpression": {
																		"id": 499,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "3853:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3843:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 501,
																			"name": "_trades",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 209,
																			"src": "3858:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
																				"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																			}
																		},
																		"id": 503,
																		"indexExpression": {
																			"id": 502,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 479,
																			"src": "3866:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3858:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BaterTrade_$216_storage",
																			"typeString": "struct SyCrowBarter.BaterTrade storage ref"
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_amountIn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 213,
																	"src": "3858:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3843:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 506,
															"nodeType": "ExpressionStatement",
															"src": "3843:35:3"
														},
														{
															"expression": {
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 507,
																		"name": "amountsOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "3892:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 509,
																	"indexExpression": {
																		"id": 508,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "3903:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3892:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 510,
																			"name": "_trades",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 209,
																			"src": "3908:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
																				"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
																			}
																		},
																		"id": 512,
																		"indexExpression": {
																			"id": 511,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 479,
																			"src": "3916:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3908:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BaterTrade_$216_storage",
																			"typeString": "struct SyCrowBarter.BaterTrade storage ref"
																		}
																	},
																	"id": 513,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_amountOut",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 215,
																	"src": "3908:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3892:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "3892:37:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3757:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 483,
															"name": "_trades",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3761:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
																"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
															}
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3761:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3757:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"initializationExpression": {
													"assignments": [
														479
													],
													"declarations": [
														{
															"constant": false,
															"id": 479,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3750:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 517,
															"src": "3742:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 478,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3742:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 481,
													"initialValue": {
														"hexValue": "30",
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3754:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3742:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3777:3:3",
														"subExpression": {
															"id": 486,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3777:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 488,
													"nodeType": "ExpressionStatement",
													"src": "3777:3:3"
												},
												"nodeType": "ForStatement",
												"src": "3737:203:3"
											},
											{
												"expression": {
													"components": [
														{
															"id": 518,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3958:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 519,
															"name": "amountsIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3969:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 520,
															"name": "amountsOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "3980:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 521,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3957:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(address[] memory,uint256[] memory,uint256[] memory)"
													}
												},
												"functionReturnParameters": 441,
												"id": 522,
												"nodeType": "Return",
												"src": "3950:41:3"
											}
										]
									},
									"functionSelector": "e43372e9",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 431,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 430,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "3388:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3388:11:3"
										}
									],
									"name": "getTrades",
									"nameLocation": "3321:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 429,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3371:8:3"
									},
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3330:2:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "3430:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3430:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "3430:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "3460:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 435,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 436,
													"nodeType": "ArrayTypeName",
													"src": "3460:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "3490:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 438,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3490:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 439,
													"nodeType": "ArrayTypeName",
													"src": "3490:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3416:100:3"
									},
									"scope": 1114,
									"src": "3312:686:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1166
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "4228:230:3",
										"statements": [
											{
												"condition": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4242:17:3",
													"subExpression": {
														"id": 542,
														"name": "allowMultiBarter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "4243:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 552,
												"nodeType": "IfStatement",
												"src": "4238:175:3",
												"trueBody": {
													"id": 551,
													"nodeType": "Block",
													"src": "4261:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 545,
																			"name": "inAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "4300:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 546,
																			"name": "_expectedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "4312:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4300:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f524551555249524544",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4345:43:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		},
																		"value": "SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		}
																	],
																	"id": 544,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4275:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4275:127:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 550,
															"nodeType": "ExpressionStatement",
															"src": "4275:127:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 554,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "4442:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 553,
														"name": "_tradeTokenForToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "4422:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4422:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "4422:29:3"
											}
										]
									},
									"functionSelector": "2ffc6887",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 530,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 529,
												"name": "checkActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "4092:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4092:11:3"
										},
										{
											"id": 532,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 531,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "4112:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4112:11:3"
										},
										{
											"id": 534,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 533,
												"name": "checkPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 290,
												"src": "4132:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4132:11:3"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 536,
														"name": "ISyCrowBarterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "4168:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ISyCrowBarterType_$1130_$",
															"typeString": "type(enum ISyCrowBarterType)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "TOKEN_FOR_TOKEN",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1129,
													"src": "4168:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
														"typeString": "enum ISyCrowBarterType"
													}
												}
											],
											"id": 538,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 535,
												"name": "checkBarterType",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 246,
												"src": "4152:15:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4152:50:3"
										},
										{
											"id": 540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 539,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "4211:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4211:12:3"
										}
									],
									"name": "tradeTokenForToken",
									"nameLocation": "4013:18:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 528,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4075:8:3"
									},
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "4040:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4032:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4031:18:3"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:0:3"
									},
									"scope": 1114,
									"src": "4004:454:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1171
									],
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "4684:228:3",
										"statements": [
											{
												"condition": {
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4698:17:3",
													"subExpression": {
														"id": 576,
														"name": "allowMultiBarter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "4699:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "4694:175:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "4717:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 579,
																			"name": "inAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "4756:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 580,
																			"name": "_expectedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "4768:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4756:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f524551555249524544",
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4801:43:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		},
																		"value": "SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		}
																	],
																	"id": 578,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4731:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4731:127:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 584,
															"nodeType": "ExpressionStatement",
															"src": "4731:127:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4896:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_tradeTokenForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "4878:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "4878:27:3"
											}
										]
									},
									"functionSelector": "0d182605",
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 563,
												"name": "checkActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "4550:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4550:11:3"
										},
										{
											"id": 566,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 565,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "4570:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4570:11:3"
										},
										{
											"id": 568,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 567,
												"name": "checkPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 290,
												"src": "4590:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4590:11:3"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 570,
														"name": "ISyCrowBarterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "4626:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ISyCrowBarterType_$1130_$",
															"typeString": "type(enum ISyCrowBarterType)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "ETH_FOR_TOKEN",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1127,
													"src": "4626:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
														"typeString": "enum ISyCrowBarterType"
													}
												}
											],
											"id": 572,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 569,
												"name": "checkBarterType",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 246,
												"src": "4610:15:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4610:48:3"
										},
										{
											"id": 574,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 573,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "4667:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4667:12:3"
										}
									],
									"name": "tradeTokenForEth",
									"nameLocation": "4473:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 562,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4533:8:3"
									},
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "4498:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "4490:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:3"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4684:0:3"
									},
									"scope": 1114,
									"src": "4464:448:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1176
									],
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5154:229:3",
										"statements": [
											{
												"condition": {
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5168:17:3",
													"subExpression": {
														"id": 610,
														"name": "allowMultiBarter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "5169:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 621,
												"nodeType": "IfStatement",
												"src": "5164:176:3",
												"trueBody": {
													"id": 620,
													"nodeType": "Block",
													"src": "5187:153:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 613,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5226:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "5226:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 615,
																			"name": "_expectedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "5239:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5226:28:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "537943726f774261727465723a20414d4f554e545f4c4f5745525f5448414e5f524551555249524544",
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5272:43:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		},
																		"value": "SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_afa9ba01945b008ec5177c9c9c5ed1eff5bda0d6702b75da0c88d3f653f22c23",
																			"typeString": "literal_string \"SyCrowBarter: AMOUNT_LOWER_THAN_REQURIRED\""
																		}
																	],
																	"id": 612,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5201:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5201:128:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5201:128:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 623,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "5367:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"name": "_tradeEthForToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "5349:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5349:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "5349:27:3"
											}
										]
									},
									"functionSelector": "4341f920",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 598,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 597,
												"name": "checkActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "5020:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5020:11:3"
										},
										{
											"id": 600,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 599,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "5040:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5040:11:3"
										},
										{
											"id": 602,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 601,
												"name": "checkPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 290,
												"src": "5060:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5060:11:3"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 604,
														"name": "ISyCrowBarterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "5096:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_ISyCrowBarterType_$1130_$",
															"typeString": "type(enum ISyCrowBarterType)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "TOKEN_FOR_ETH",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1128,
													"src": "5096:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
														"typeString": "enum ISyCrowBarterType"
													}
												}
											],
											"id": 606,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 603,
												"name": "checkBarterType",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 246,
												"src": "5080:15:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5080:48:3"
										},
										{
											"id": 608,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 607,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "5137:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5137:12:3"
										}
									],
									"name": "tradeEthForToken",
									"nameLocation": "4927:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 596,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5003:8:3"
									},
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "4952:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4944:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4944:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4943:18:3"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5154:0:3"
									},
									"scope": 1114,
									"src": "4918:465:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "5445:1042:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 637,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5516:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5516:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 634,
																				"name": "_expectedTokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 201,
																				"src": "5483:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 633,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1124,
																			"src": "5476:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1124_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5476:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1124",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1123,
																	"src": "5476:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5476:51:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 640,
																"name": "inAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "5531:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5476:63:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f42414c414e4345",
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5553:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_BALANCE\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_BALANCE\""
															}
														],
														"id": 632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5455:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5455:144:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "5455:144:3"
											},
											{
												"assignments": [
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "outAmount",
														"nameLocation": "5618:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5610:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 645,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5610:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 650,
												"initialValue": {
													"arguments": [
														{
															"id": 648,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "5648:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 647,
														"name": "getTradeOutAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "5630:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5630:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5610:47:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 658,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5738:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																					"typeString": "contract SyCrowBarter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																					"typeString": "contract SyCrowBarter"
																				}
																			],
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5730:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 656,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5730:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5730:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 653,
																				"name": "_depositedTokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "5696:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 652,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1124,
																			"src": "5689:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1124_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5689:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1124",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1123,
																	"src": "5689:40:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5689:55:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 661,
																"name": "outAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "5764:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5689:84:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f434f4e54524143545f42414c414e4345",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5787:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															}
														],
														"id": 651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5668:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5668:174:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "5668:174:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "_expectedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "5898:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 670,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5933:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5933:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 674,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5965:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5957:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5957:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5957:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "5984:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 666,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "5853:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1505_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1479,
														"src": "5853:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5853:149:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "5853:149:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"name": "_depositedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6053:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 683,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6089:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6089:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "6113:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 679,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "6012:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1505_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1433,
														"src": "6012:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6012:120:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "6012:120:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 692,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6167:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6167:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 694,
																	"name": "inAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "6179:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 695,
																	"name": "outAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "6189:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 691,
																"name": "BaterTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "6156:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_BaterTrade_$216_storage_ptr_$",
																	"typeString": "type(struct SyCrowBarter.BaterTrade storage pointer)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BaterTrade_$216_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_BaterTrade_$216_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														],
														"expression": {
															"id": 688,
															"name": "_trades",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "6143:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
																"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6143:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage_ptr_$_t_struct$_BaterTrade_$216_storage_$returns$__$bound_to$_t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct SyCrowBarter.BaterTrade storage ref[] storage pointer,struct SyCrowBarter.BaterTrade storage ref)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6143:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "6143:57:3"
											},
											{
												"expression": {
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 699,
														"name": "totalTradeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6211:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 700,
															"name": "totalTradeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6230:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 701,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "6249:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6230:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6211:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "6211:46:3"
											},
											{
												"assignments": [
													707
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"mutability": "mutable",
														"name": "sycrFactory",
														"nameLocation": "6289:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "6268:32:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
															"typeString": "contract ISyCrowBarterFactory"
														},
														"typeName": {
															"id": 706,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 705,
																"name": "ISyCrowBarterFactory",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1334,
																"src": "6268:20:3"
															},
															"referencedDeclaration": 1334,
															"src": "6268:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 711,
												"initialValue": {
													"arguments": [
														{
															"id": 709,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6324:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 708,
														"name": "ISyCrowBarterFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "6303:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISyCrowBarterFactory_$1334_$",
															"typeString": "type(contract ISyCrowBarterFactory)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6303:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
														"typeString": "contract ISyCrowBarterFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6268:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 717,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6396:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6388:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 715,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6388:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6388:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 719,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6415:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "6439:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 722,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "6461:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 712,
															"name": "sycrFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "6343:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "notifyTradeByBarter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1322,
														"src": "6343:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256) external"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6343:137:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "6343:137:3"
											}
										]
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tradeTokenForToken",
									"nameLocation": "5398:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "5426:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5418:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5418:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5417:18:3"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5445:0:3"
									},
									"scope": 1114,
									"src": "5389:1098:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "6547:1025:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 736,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6618:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6618:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 733,
																				"name": "_expectedTokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 201,
																				"src": "6585:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 732,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1124,
																			"src": "6578:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1124_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6578:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1124",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1123,
																	"src": "6578:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6578:51:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 739,
																"name": "inAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "6633:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6578:63:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f42414c414e4345",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6655:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_BALANCE\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f8dc9b202f780fa15ca6321fa8d9205ad93888a08ba1e37f642b873ac64e7ba",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_BALANCE\""
															}
														],
														"id": 731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6557:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6557:144:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "6557:144:3"
											},
											{
												"assignments": [
													745
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "outAmount",
														"nameLocation": "6720:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 835,
														"src": "6712:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 744,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6712:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 749,
												"initialValue": {
													"arguments": [
														{
															"id": 747,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "6750:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 746,
														"name": "getTradeOutAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "6732:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6732:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6712:47:3"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "_wethErc20",
														"nameLocation": "6777:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 835,
														"src": "6770:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1124",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 751,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 750,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1124,
																"src": "6770:6:3"
															},
															"referencedDeclaration": 1124,
															"src": "6770:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1124",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"initialValue": {
													"arguments": [
														{
															"id": 754,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6797:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 753,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "6790:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$1124_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6790:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1124",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6770:32:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 762,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6863:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																					"typeString": "contract SyCrowBarter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																					"typeString": "contract SyCrowBarter"
																				}
																			],
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6855:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 760,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6855:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6855:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 758,
																		"name": "_wethErc20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "6834:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1124",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1123,
																	"src": "6834:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6834:35:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 765,
																"name": "outAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "6873:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6834:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f434f4e54524143545f42414c414e4345",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6896:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															}
														],
														"id": 757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6813:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6813:138:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "6813:138:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "_expectedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "7007:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 774,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7042:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7042:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 778,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7074:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7066:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 776,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7066:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7066:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "7093:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 770,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "6962:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1505_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1479,
														"src": "6962:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6962:149:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "6962:149:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "7143:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 784,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "7128:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 783,
																"name": "IWETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "7122:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH_$1345_$",
																	"typeString": "type(contract IWETH)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7122:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH_$1345",
																"typeString": "contract IWETH"
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1344,
														"src": "7122:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "7122:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 793,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7195:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7195:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "7207:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 790,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "7164:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1505_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1504,
														"src": "7164:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7164:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "7164:53:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 802,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7252:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7252:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 804,
																	"name": "inAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7264:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 805,
																	"name": "outAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "7274:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 801,
																"name": "BaterTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "7241:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_BaterTrade_$216_storage_ptr_$",
																	"typeString": "type(struct SyCrowBarter.BaterTrade storage pointer)"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7241:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BaterTrade_$216_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_BaterTrade_$216_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														],
														"expression": {
															"id": 798,
															"name": "_trades",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "7228:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
																"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7228:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage_ptr_$_t_struct$_BaterTrade_$216_storage_$returns$__$bound_to$_t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct SyCrowBarter.BaterTrade storage ref[] storage pointer,struct SyCrowBarter.BaterTrade storage ref)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7228:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "7228:57:3"
											},
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 809,
														"name": "totalTradeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "7296:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 810,
															"name": "totalTradeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "7315:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 811,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "7334:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7315:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7296:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "7296:46:3"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "sycrFactory",
														"nameLocation": "7374:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 835,
														"src": "7353:32:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
															"typeString": "contract ISyCrowBarterFactory"
														},
														"typeName": {
															"id": 816,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 815,
																"name": "ISyCrowBarterFactory",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1334,
																"src": "7353:20:3"
															},
															"referencedDeclaration": 1334,
															"src": "7353:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"initialValue": {
													"arguments": [
														{
															"id": 819,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "7409:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 818,
														"name": "ISyCrowBarterFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "7388:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISyCrowBarterFactory_$1334_$",
															"typeString": "type(contract ISyCrowBarterFactory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7388:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
														"typeString": "contract ISyCrowBarterFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7353:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 827,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7481:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7473:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 825,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7473:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7473:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 829,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7500:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7500:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 831,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "7524:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 832,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "7546:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 822,
															"name": "sycrFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "7428:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "notifyTradeByBarter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1322,
														"src": "7428:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256) external"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7428:137:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "7428:137:3"
											}
										]
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tradeTokenForEth",
									"nameLocation": "6502:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "6528:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "6520:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6520:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6519:18:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6547:0:3"
									},
									"scope": 1114,
									"src": "6493:1079:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "7632:857:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 842,
																"name": "inAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "7650:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 843,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7662:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7662:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7650:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a204d554c54495f54524144455f4e4f545f454e41424c4544",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7673:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd025a8b4dac45f94633765487ac16f8ad7e1a6ee7e724cd8d9bc6ef3ad676e1",
																"typeString": "literal_string \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\""
															},
															"value": "SyCrowBarter: MULTI_TRADE_NOT_ENABLED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd025a8b4dac45f94633765487ac16f8ad7e1a6ee7e724cd8d9bc6ef3ad676e1",
																"typeString": "literal_string \"SyCrowBarter: MULTI_TRADE_NOT_ENABLED\""
															}
														],
														"id": 841,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7642:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7642:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "7642:71:3"
											},
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "outAmount",
														"nameLocation": "7732:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 924,
														"src": "7724:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7724:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 854,
												"initialValue": {
													"arguments": [
														{
															"id": 852,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "7762:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 851,
														"name": "getTradeOutAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "7744:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7724:47:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 862,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7852:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																					"typeString": "contract SyCrowBarter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																					"typeString": "contract SyCrowBarter"
																				}
																			],
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7844:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 860,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7844:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7844:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 857,
																				"name": "_depositedTokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "7810:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 856,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1124,
																			"src": "7803:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1124_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7803:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1124",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1123,
																	"src": "7803:40:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7803:55:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 865,
																"name": "outAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "7878:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7803:84:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537943726f774261727465723a20494e53554646494349454e545f434f4e54524143545f42414c414e4345",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7901:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															},
															"value": "SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60140a13319e72e72c5e5e7a847aee776b87247a71f73a2435526948c50b6137",
																"typeString": "literal_string \"SyCrowBarter: INSUFFICIENT_CONTRACT_BALANCE\""
															}
														],
														"id": 855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7782:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7782:174:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "7782:174:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 871,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "7973:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 870,
																	"name": "IWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "7967:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IWETH_$1345_$",
																		"typeString": "type(contract IWETH)"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7967:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH_$1345",
																	"typeString": "contract IWETH"
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1339,
															"src": "7967:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 874,
																"name": "inAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "7994:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7967:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7967:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "7967:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "_depositedTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "8057:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 882,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8093:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8093:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "8117:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 878,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "8016:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1505_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1433,
														"src": "8016:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8016:120:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "8016:120:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 891,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8171:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8171:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 893,
																	"name": "inAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "8183:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 894,
																	"name": "outAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "8193:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 890,
																"name": "BaterTrade",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "8160:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_BaterTrade_$216_storage_ptr_$",
																	"typeString": "type(struct SyCrowBarter.BaterTrade storage pointer)"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8160:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BaterTrade_$216_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_BaterTrade_$216_memory_ptr",
																"typeString": "struct SyCrowBarter.BaterTrade memory"
															}
														],
														"expression": {
															"id": 887,
															"name": "_trades",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "8147:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage",
																"typeString": "struct SyCrowBarter.BaterTrade storage ref[] storage ref"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "8147:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage_ptr_$_t_struct$_BaterTrade_$216_storage_$returns$__$bound_to$_t_array$_t_struct$_BaterTrade_$216_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct SyCrowBarter.BaterTrade storage ref[] storage pointer,struct SyCrowBarter.BaterTrade storage ref)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8147:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "8147:57:3"
											},
											{
												"expression": {
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 898,
														"name": "totalTradeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "8214:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 899,
															"name": "totalTradeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "8233:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 900,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "8252:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8233:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8214:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "8214:46:3"
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "sycrFactory",
														"nameLocation": "8292:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 924,
														"src": "8271:32:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
															"typeString": "contract ISyCrowBarterFactory"
														},
														"typeName": {
															"id": 905,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 904,
																"name": "ISyCrowBarterFactory",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1334,
																"src": "8271:20:3"
															},
															"referencedDeclaration": 1334,
															"src": "8271:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 910,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "8327:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "ISyCrowBarterFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "8306:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISyCrowBarterFactory_$1334_$",
															"typeString": "type(contract ISyCrowBarterFactory)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8306:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
														"typeString": "contract ISyCrowBarterFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8271:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 916,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8398:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8390:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 914,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8390:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8390:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 918,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8417:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8417:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "inAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "8441:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 921,
															"name": "outAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "8463:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 911,
															"name": "sycrFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "8345:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "notifyTradeByBarter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1322,
														"src": "8345:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256) external"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8345:137:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "8345:137:3"
											}
										]
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tradeEthForToken",
									"nameLocation": "7587:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "7613:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "7605:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7605:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7604:18:3"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7632:0:3"
									},
									"scope": 1114,
									"src": "7578:911:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1179
									],
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "8569:1603:3",
										"statements": [
											{
												"assignments": [
													937
												],
												"declarations": [
													{
														"constant": false,
														"id": 937,
														"mutability": "mutable",
														"name": "_wethErc20",
														"nameLocation": "8586:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "8579:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1124",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 936,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 935,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1124,
																"src": "8579:6:3"
															},
															"referencedDeclaration": 1124,
															"src": "8579:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1124",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"initialValue": {
													"arguments": [
														{
															"id": 939,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "8606:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 938,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "8599:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$1124_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8599:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1124",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8579:32:3"
											},
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "ethBalance",
														"nameLocation": "8630:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "8622:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 942,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8622:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 951,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 948,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8672:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8664:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 946,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8664:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8664:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 944,
															"name": "_wethErc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "8643:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1124",
																"typeString": "contract IERC20"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1123,
														"src": "8643:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8643:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8622:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 952,
														"name": "ethBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "8693:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8706:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8693:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 971,
												"nodeType": "IfStatement",
												"src": "8689:145:3",
												"trueBody": {
													"id": 970,
													"nodeType": "Block",
													"src": "8709:125:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 959,
																		"name": "ethBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "8744:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 956,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 194,
																				"src": "8729:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 955,
																			"name": "IWETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "8723:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IWETH_$1345_$",
																				"typeString": "type(contract IWETH)"
																			}
																		},
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8723:11:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$1345",
																			"typeString": "contract IWETH"
																		}
																	},
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1344,
																	"src": "8723:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8723:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 961,
															"nodeType": "ExpressionStatement",
															"src": "8723:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 965,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8800:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8800:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 967,
																		"name": "ethBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "8812:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 962,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "8769:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1505_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1504,
																	"src": "8769:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8769:54:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 969,
															"nodeType": "ExpressionStatement",
															"src": "8769:54:3"
														}
													]
												}
											},
											{
												"assignments": [
													973
												],
												"declarations": [
													{
														"constant": false,
														"id": 973,
														"mutability": "mutable",
														"name": "expectedTokenBalance",
														"nameLocation": "8852:20:3",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "8844:28:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 972,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8844:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 983,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 980,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8936:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8928:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 978,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8928:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8928:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 975,
																	"name": "_expectedTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "8882:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 974,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "8875:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1124_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8875:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1124",
																"typeString": "contract IERC20"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1123,
														"src": "8875:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8875:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8844:107:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "expectedTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "8966:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8989:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8966:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 997,
												"nodeType": "IfStatement",
												"src": "8962:201:3",
												"trueBody": {
													"id": 996,
													"nodeType": "Block",
													"src": "8992:171:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 990,
																		"name": "_expectedTokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 201,
																		"src": "9051:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 991,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9090:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9090:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 993,
																		"name": "expectedTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "9118:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 987,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "9006:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1505_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1433,
																	"src": "9006:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9006:146:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "9006:146:3"
														}
													]
												}
											},
											{
												"assignments": [
													999
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"mutability": "mutable",
														"name": "depositedTokenBalance",
														"nameLocation": "9181:21:3",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "9173:29:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 998,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9173:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1006,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9267:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9259:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9259:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9259:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"name": "_depositedTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "9212:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1000,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "9205:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1124_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9205:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1124",
																"typeString": "contract IERC20"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1123,
														"src": "9205:53:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9205:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9173:100:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "depositedTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "9288:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9312:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9288:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1023,
												"nodeType": "IfStatement",
												"src": "9284:204:3",
												"trueBody": {
													"id": 1022,
													"nodeType": "Block",
													"src": "9315:173:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1016,
																		"name": "_depositedTokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "9374:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1017,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9414:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9414:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1019,
																		"name": "depositedTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "9442:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1013,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "9329:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1505_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1433,
																	"src": "9329:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9329:148:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1021,
															"nodeType": "ExpressionStatement",
															"src": "9329:148:3"
														}
													]
												}
											},
											{
												"assignments": [
													1025
												],
												"declarations": [
													{
														"constant": false,
														"id": 1025,
														"mutability": "mutable",
														"name": "value1",
														"nameLocation": "9505:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "9497:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1024,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9497:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1027,
												"initialValue": {
													"hexValue": "30",
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9514:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9497:18:3"
											},
											{
												"assignments": [
													1029
												],
												"declarations": [
													{
														"constant": false,
														"id": 1029,
														"mutability": "mutable",
														"name": "value2",
														"nameLocation": "9533:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "9525:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1028,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9525:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"hexValue": "30",
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9542:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9525:18:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
														"typeString": "enum ISyCrowBarterType"
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1032,
														"name": "barterType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "9558:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
															"typeString": "enum ISyCrowBarterType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1033,
															"name": "ISyCrowBarterType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "9572:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ISyCrowBarterType_$1130_$",
																"typeString": "type(enum ISyCrowBarterType)"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "ETH_FOR_TOKEN",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1127,
														"src": "9572:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
															"typeString": "enum ISyCrowBarterType"
														}
													},
													"src": "9558:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
															"typeString": "enum ISyCrowBarterType"
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1045,
															"name": "barterType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "9702:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
																"typeString": "enum ISyCrowBarterType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1046,
																"name": "ISyCrowBarterType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "9716:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_ISyCrowBarterType_$1130_$",
																	"typeString": "type(enum ISyCrowBarterType)"
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "TOKEN_FOR_TOKEN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1129,
															"src": "9716:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
																"typeString": "enum ISyCrowBarterType"
															}
														},
														"src": "9702:47:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1066,
														"nodeType": "Block",
														"src": "9855:88:3",
														"statements": [
															{
																"expression": {
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1058,
																		"name": "value1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "9869:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1059,
																		"name": "depositedTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "9878:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9869:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1061,
																"nodeType": "ExpressionStatement",
																"src": "9869:30:3"
															},
															{
																"expression": {
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1062,
																		"name": "value2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "9913:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1063,
																		"name": "ethBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "9922:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9913:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1065,
																"nodeType": "ExpressionStatement",
																"src": "9913:19:3"
															}
														]
													},
													"id": 1067,
													"nodeType": "IfStatement",
													"src": "9698:245:3",
													"trueBody": {
														"id": 1057,
														"nodeType": "Block",
														"src": "9751:98:3",
														"statements": [
															{
																"expression": {
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1049,
																		"name": "value1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "9765:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1050,
																		"name": "depositedTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "9774:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9765:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1052,
																"nodeType": "ExpressionStatement",
																"src": "9765:30:3"
															},
															{
																"expression": {
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1053,
																		"name": "value2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "9809:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1054,
																		"name": "expectedTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "9818:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9809:29:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1056,
																"nodeType": "ExpressionStatement",
																"src": "9809:29:3"
															}
														]
													}
												},
												"id": 1068,
												"nodeType": "IfStatement",
												"src": "9554:389:3",
												"trueBody": {
													"id": 1044,
													"nodeType": "Block",
													"src": "9605:87:3",
													"statements": [
														{
															"expression": {
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1036,
																	"name": "value1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "9619:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1037,
																	"name": "ethBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "9628:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9619:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1039,
															"nodeType": "ExpressionStatement",
															"src": "9619:19:3"
														},
														{
															"expression": {
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1040,
																	"name": "value2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "9652:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1041,
																	"name": "expectedTokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "9661:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9652:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1043,
															"nodeType": "ExpressionStatement",
															"src": "9652:29:3"
														}
													]
												}
											},
											{
												"assignments": [
													1071
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "sycrFactory",
														"nameLocation": "9974:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 1089,
														"src": "9953:32:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
															"typeString": "contract ISyCrowBarterFactory"
														},
														"typeName": {
															"id": 1070,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1069,
																"name": "ISyCrowBarterFactory",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1334,
																"src": "9953:20:3"
															},
															"referencedDeclaration": 1334,
															"src": "9953:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"arguments": [
														{
															"id": 1073,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "10009:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1072,
														"name": "ISyCrowBarterFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "9988:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISyCrowBarterFactory_$1334_$",
															"typeString": "type(contract ISyCrowBarterFactory)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9988:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
														"typeString": "contract ISyCrowBarterFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9953:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1081,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10086:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SyCrowBarter_$1114",
																		"typeString": "contract SyCrowBarter"
																	}
																],
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10078:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1079,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10078:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10078:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1083,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10105:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10105:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "value1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "10129:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "value2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "10149:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1076,
															"name": "sycrFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10028:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISyCrowBarterFactory_$1334",
																"typeString": "contract ISyCrowBarterFactory"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "notifyWithdrawFromBarter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1333,
														"src": "10028:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256) external"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10028:137:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "10028:137:3"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 929,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 928,
												"name": "checkInActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 262,
												"src": "8533:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "8533:13:3"
										},
										{
											"id": 931,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 930,
												"name": "initialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "8547:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "8547:11:3"
										},
										{
											"id": 933,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 932,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8559:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "8559:9:3"
										}
									],
									"name": "withdraw",
									"nameLocation": "8504:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 927,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8524:8:3"
									},
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8512:2:3"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8569:0:3"
									},
									"scope": 1114,
									"src": "8495:1677:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "10251:69:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1097,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "10269:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1098,
																	"name": "_depositedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "10278:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10269:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1100,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10268:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1101,
														"name": "_expectedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "10298:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10268:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1103,
												"nodeType": "Return",
												"src": "10261:52:3"
											}
										]
									},
									"functionSelector": "dab5a8df",
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTradeOutAmount",
									"nameLocation": "10187:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10213:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "10205:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10205:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10204:16:3"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "10242:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10242:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10241:9:3"
									},
									"scope": 1114,
									"src": "10178:142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "10410:2:3",
										"statements": []
									},
									"id": 1109,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10390:2:3"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10410:0:3"
									},
									"scope": 1114,
									"src": "10383:29:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "10508:2:3",
										"statements": []
									},
									"id": 1113,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10488:2:3"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10508:0:3"
									},
									"scope": 1114,
									"src": "10480:30:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1115,
							"src": "332:10180:3",
							"usedErrors": []
						}
					],
					"src": "33:10480:3"
				},
				"id": 3
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1124
						]
					},
					"id": 1125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1116,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1124,
							"linearizedBaseContracts": [
								1124
							],
							"name": "IERC20",
							"nameLocation": "69:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 1123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "91:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "109:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "101:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "101:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "100:15:4"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "139:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:9:4"
									},
									"scope": 1124,
									"src": "82:66:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1125,
							"src": "59:91:4",
							"usedErrors": []
						}
					],
					"src": "33:118:4"
				},
				"id": 4
			},
			"contracts/interfaces/ISyCrowBarter.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ISyCrowBarter.sol",
					"exportedSymbols": {
						"ISyCrowBarter": [
							1180
						],
						"ISyCrowBarterType": [
							1130
						]
					},
					"id": 1181,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1126,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"canonicalName": "ISyCrowBarterType",
							"id": 1130,
							"members": [
								{
									"id": 1127,
									"name": "ETH_FOR_TOKEN",
									"nameLocation": "88:13:5",
									"nodeType": "EnumValue",
									"src": "88:13:5"
								},
								{
									"id": 1128,
									"name": "TOKEN_FOR_ETH",
									"nameLocation": "107:13:5",
									"nodeType": "EnumValue",
									"src": "107:13:5"
								},
								{
									"id": 1129,
									"name": "TOKEN_FOR_TOKEN",
									"nameLocation": "126:15:5",
									"nodeType": "EnumValue",
									"src": "126:15:5"
								}
							],
							"name": "ISyCrowBarterType",
							"nameLocation": "64:17:5",
							"nodeType": "EnumDefinition",
							"src": "59:84:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISyCrowBarter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1180,
							"linearizedBaseContracts": [
								1180
							],
							"name": "ISyCrowBarter",
							"nameLocation": "155:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "184:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "191:2:5"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "217:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:9:5"
									},
									"scope": 1180,
									"src": "175:51:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3d370b4e",
									"id": 1142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmounts",
									"nameLocation": "241:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:5"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "277:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "286:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:18:5"
									},
									"scope": 1180,
									"src": "232:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa6ca808",
									"id": 1149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokens",
									"nameLocation": "310:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:2:5"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "345:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "354:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:18:5"
									},
									"scope": 1180,
									"src": "301:62:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e43372e9",
									"id": 1161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrades",
									"nameLocation": "378:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "387:2:5"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "437:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1151,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "437:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1152,
													"nodeType": "ArrayTypeName",
													"src": "437:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "455:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1154,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "455:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1155,
													"nodeType": "ArrayTypeName",
													"src": "455:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "473:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1157,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "473:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1158,
													"nodeType": "ArrayTypeName",
													"src": "473:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:54:5"
									},
									"scope": 1180,
									"src": "369:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2ffc6887",
									"id": 1166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tradeTokenForToken",
									"nameLocation": "506:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "533:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "525:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:18:5"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:5"
									},
									"scope": 1180,
									"src": "497:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0d182605",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tradeTokenForEth",
									"nameLocation": "567:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "592:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "584:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:18:5"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:5"
									},
									"scope": 1180,
									"src": "558:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4341f920",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tradeEthForToken",
									"nameLocation": "626:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "inAmount",
												"nameLocation": "651:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "643:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:18:5"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:5"
									},
									"scope": 1180,
									"src": "617:61:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3ccfd60b",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "693:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:2:5"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:0:5"
									},
									"scope": 1180,
									"src": "684:29:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1181,
							"src": "145:570:5",
							"usedErrors": []
						}
					],
					"src": "33:683:5"
				},
				"id": 5
			},
			"contracts/interfaces/ISyCrowBarterFactory.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ISyCrowBarterFactory.sol",
					"exportedSymbols": {
						"ISyCrowBarter": [
							1180
						],
						"ISyCrowBarterFactory": [
							1334
						],
						"ISyCrowBarterType": [
							1130
						]
					},
					"id": 1335,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "contracts/interfaces/ISyCrowBarter.sol",
							"file": "./ISyCrowBarter.sol",
							"id": 1182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 1181,
							"src": "32:29:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 1183,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "63:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISyCrowBarterFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1334,
							"linearizedBaseContracts": [
								1334
							],
							"name": "ISyCrowBarterFactory",
							"nameLocation": "99:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "b5f91377f71bd6f89234a5a73ae6e2f2c01decaa3f078466d585916e9559742e",
									"id": 1198,
									"name": "SyCrowBarterCreated",
									"nameLocation": "132:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"indexed": false,
												"mutability": "mutable",
												"name": "_barterType",
												"nameLocation": "179:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "161:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
													"typeString": "enum ISyCrowBarterType"
												},
												"typeName": {
													"id": 1185,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1184,
														"name": "ISyCrowBarterType",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1130,
														"src": "161:17:6"
													},
													"referencedDeclaration": 1130,
													"src": "161:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
														"typeString": "enum ISyCrowBarterType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": true,
												"mutability": "mutable",
												"name": "_createdBy",
												"nameLocation": "216:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "200:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"indexed": true,
												"mutability": "mutable",
												"name": "_barter",
												"nameLocation": "252:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "236:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"indexed": false,
												"mutability": "mutable",
												"name": "_inToken",
												"nameLocation": "277:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "269:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "_outToken",
												"nameLocation": "303:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "295:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "330:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "322:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:194:6"
									},
									"src": "126:220:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e82b14c60d75779dccc3527ccba5c54e01cabef05dfd39eec94dec265f4ff7f1",
									"id": 1208,
									"name": "SyCrowTradeByBarter",
									"nameLocation": "357:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"indexed": true,
												"mutability": "mutable",
												"name": "_barter",
												"nameLocation": "402:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "386:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"indexed": true,
												"mutability": "mutable",
												"name": "_trader",
												"nameLocation": "435:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "419:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "_inAmount",
												"nameLocation": "460:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "452:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"indexed": false,
												"mutability": "mutable",
												"name": "outAmount",
												"nameLocation": "487:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "479:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:126:6"
									},
									"src": "351:152:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8f88efa16eb49629522394f86925a64b5efde928736c868956f1a8e4c7ea8695",
									"id": 1218,
									"name": "SyCrowWithdrawFromBater",
									"nameLocation": "514:23:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "_barter",
												"nameLocation": "563:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "547:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "_trader",
												"nameLocation": "596:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "580:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value1",
												"nameLocation": "621:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "613:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value2",
												"nameLocation": "646:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "638:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:122:6"
									},
									"src": "508:152:6"
								},
								{
									"functionSelector": "db52d829",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createBarter",
									"nameLocation": "675:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "_inToken",
												"nameLocation": "705:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "697:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "_outToken",
												"nameLocation": "731:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "723:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "_deposited",
												"nameLocation": "758:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "750:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "_expected",
												"nameLocation": "786:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "778:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "813:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "805:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "_type",
												"nameLocation": "850:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "832:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
													"typeString": "enum ISyCrowBarterType"
												},
												"typeName": {
													"id": 1230,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1229,
														"name": "ISyCrowBarterType",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1130,
														"src": "832:17:6"
													},
													"referencedDeclaration": 1130,
													"src": "832:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ISyCrowBarterType_$1130",
														"typeString": "enum ISyCrowBarterType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "_allowMultiBarter",
												"nameLocation": "870:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "865:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "865:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:206:6"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "barter",
												"nameLocation": "928:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "920:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:16:6"
									},
									"scope": 1334,
									"src": "666:270:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "be931a41",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalBarterDeployed",
									"nameLocation": "951:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "970:2:6"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "991:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:9:6"
									},
									"scope": 1334,
									"src": "942:58:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ced72f87",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nameLocation": "1015:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:2:6"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1042:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:9:6"
									},
									"scope": 1334,
									"src": "1006:45:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a42dce80",
									"id": 1253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeCollector",
									"nameLocation": "1066:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "_feeCollector",
												"nameLocation": "1090:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1082:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:23:6"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:0:6"
									},
									"scope": 1334,
									"src": "1057:57:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c415b95c",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeCollector",
									"nameLocation": "1129:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1141:2:6"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1167:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:9:6"
									},
									"scope": 1334,
									"src": "1120:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c56559f",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allBartersLength",
									"nameLocation": "1191:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:2:6"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1233:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:9:6"
									},
									"scope": 1334,
									"src": "1182:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e55ef116",
									"id": 1270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allBarters",
									"nameLocation": "1257:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "1268:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:9:6"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "barter",
												"nameLocation": "1308:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "1300:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:16:6"
									},
									"scope": 1334,
									"src": "1248:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e71a76c9",
									"id": 1278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserBarters",
									"nameLocation": "1331:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1354:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "1346:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:21:6"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "barters",
												"nameLocation": "1431:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "1414:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1274,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1414:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1275,
													"nodeType": "ArrayTypeName",
													"src": "1414:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:26:6"
									},
									"scope": 1334,
									"src": "1322:118:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "48403459",
									"id": 1285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserBartersLength",
									"nameLocation": "1455:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1484:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1476:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1475:21:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1544:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:9:6"
									},
									"scope": 1334,
									"src": "1446:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "60612180",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserBarter",
									"nameLocation": "1568:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1590:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1582:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1611:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1603:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1581:36:6"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1665:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1664:9:6"
									},
									"scope": 1334,
									"src": "1559:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b187bd26",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPaused",
									"nameLocation": "1689:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1697:2:6"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "1723:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1723:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:6:6"
									},
									"scope": 1334,
									"src": "1680:49:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bedb86fb",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPause",
									"nameLocation": "1744:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "pause",
												"nameLocation": "1758:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1753:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1753:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1752:12:6"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:0:6"
									},
									"scope": 1334,
									"src": "1735:39:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ac9e981c",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUsePriceFeeds",
									"nameLocation": "1789:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "_baseFee",
												"nameLocation": "1823:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1815:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "enable",
												"nameLocation": "1846:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1841:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1841:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:53:6"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1867:0:6"
									},
									"scope": 1334,
									"src": "1780:88:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f52701b7",
									"id": 1322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyTradeByBarter",
									"nameLocation": "1883:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "_barter",
												"nameLocation": "1920:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1912:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "_trader",
												"nameLocation": "1945:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1937:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_inAmount",
												"nameLocation": "1970:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1962:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "outAmount",
												"nameLocation": "1997:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1989:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:110:6"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2021:0:6"
									},
									"scope": 1334,
									"src": "1874:148:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "33796a0e",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyWithdrawFromBarter",
									"nameLocation": "2037:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "_barter",
												"nameLocation": "2079:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2071:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "_trader",
												"nameLocation": "2104:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2096:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "_value1",
												"nameLocation": "2129:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2121:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_value2",
												"nameLocation": "2154:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2146:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2061:106:6"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2176:0:6"
									},
									"scope": 1334,
									"src": "2028:149:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1335,
							"src": "89:2090:6",
							"usedErrors": []
						}
					],
					"src": "32:2148:6"
				},
				"id": 6
			},
			"contracts/interfaces/IWETH.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IWETH.sol",
					"exportedSymbols": {
						"IWETH": [
							1345
						]
					},
					"id": 1346,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1336,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1345,
							"linearizedBaseContracts": [
								1345
							],
							"name": "IWETH",
							"nameLocation": "70:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "91:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "98:2:7"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "117:0:7"
									},
									"scope": 1345,
									"src": "82:36:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "132:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "141:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "141:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "140:6:7"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:0:7"
									},
									"scope": 1345,
									"src": "123:33:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1346,
							"src": "60:98:7",
							"usedErrors": []
						}
					],
					"src": "33:126:7"
				},
				"id": 7
			},
			"contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							1505
						]
					},
					"id": 1506,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1347,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "39:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1505,
							"linearizedBaseContracts": [
								1505
							],
							"name": "TransferHelper",
							"nameLocation": "185:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "275:285:8",
										"statements": [
											{
												"assignments": [
													1357,
													1359
												],
												"declarations": [
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "356:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "351:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1356,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "351:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1359,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "378:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "365:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1358,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "365:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1369,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "420:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 1365,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "432:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1366,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "436:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1362,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "397:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "397:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "397:45:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1360,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "386:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "386:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "386:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "350:93:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1371,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "461:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1372,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1359,
																					"src": "473:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "473:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "488:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "473:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1378,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1359,
																					"src": "504:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1380,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "511:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1379,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "511:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1381,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "510:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1376,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "493:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "493:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "493:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "473:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1384,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "472:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "461:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "520:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "453:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "453:100:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "453:100:8"
											}
										]
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "215:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "235:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "227:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "250:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "242:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "259:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "254:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "254:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "226:39:8"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:0:8"
									},
									"scope": 1505,
									"src": "206:354:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "636:287:8",
										"statements": [
											{
												"assignments": [
													1400,
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1400,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "718:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "713:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1399,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "713:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "740:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "727:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1401,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "727:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1412,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "782:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 1408,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "794:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1396,
																	"src": "798:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1405,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:45:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1403,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "748:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "712:93:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1414,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "823:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1415,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1402,
																					"src": "835:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "835:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "850:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "835:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1421,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1402,
																					"src": "866:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1423,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "873:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1422,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "873:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1424,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "872:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1419,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "855:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "855:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "855:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "835:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1427,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "834:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "823:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "882:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 1413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "815:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "815:101:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "815:101:8"
											}
										]
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "575:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "596:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "588:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "611:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "603:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "620:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "615:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "615:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:39:8"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:0:8"
									},
									"scope": 1505,
									"src": "566:357:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "1017:310:8",
										"statements": [
											{
												"assignments": [
													1445,
													1447
												],
												"declarations": [
													{
														"constant": false,
														"id": 1445,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1111:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1478,
														"src": "1106:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1444,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1106:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1447,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1133:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1478,
														"src": "1120:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1446,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1120:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1458,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1175:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 1453,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "1187:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1454,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "1193:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1455,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "1197:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1450,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1152:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1152:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1152:51:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1448,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "1141:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1141:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1141:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1105:99:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1460,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "1222:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1461,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1447,
																					"src": "1234:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1234:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1249:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1234:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1467,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1447,
																					"src": "1265:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1469,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1272:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1468,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1272:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1470,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1271:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1465,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1254:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1254:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1254:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1234:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1473,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1233:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1222:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1281:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 1459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1214:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1214:106:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "1214:106:8"
											}
										]
									},
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "938:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "963:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "955:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "978:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "970:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "992:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "984:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1001:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "996:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "996:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:53:8"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1017:0:8"
									},
									"scope": 1505,
									"src": "929:398:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "1391:134:8",
										"statements": [
											{
												"assignments": [
													1487,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1407:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1503,
														"src": "1402:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1486,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1402:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1497,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1450:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1440:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1492,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1444:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1440:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1488,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "1419:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1419:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1490,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "1433:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1419:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1401:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1499,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "1471:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a204554485f5452414e534645525f4641494c4544",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1480:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
																"typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
															},
															"value": "TransferHelper: ETH_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
																"typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
															}
														],
														"id": 1498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1463:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1463:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "1463:55:8"
											}
										]
									},
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1342:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1366:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1358:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1375:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1370:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1370:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1357:24:8"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1391:0:8"
									},
									"scope": 1505,
									"src": "1333:192:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1506,
							"src": "177:1350:8",
							"usedErrors": []
						}
					],
					"src": "39:1488:8"
				},
				"id": 8
			}
		}
	}
}