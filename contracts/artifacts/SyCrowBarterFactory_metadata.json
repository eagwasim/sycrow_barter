{
	"compiler": {
		"version": "0.8.13+commit.abaa5c0e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "baseFee",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "priceFeed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "WETH",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "enum ISyCrowBarterType",
						"name": "_barterType",
						"type": "uint8"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_createdBy",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_barter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_inToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_outToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_deadline",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_isPrivate",
						"type": "bool"
					}
				],
				"name": "SyCrowBarterCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_barter",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_trader",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_inAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "outAmount",
						"type": "uint256"
					}
				],
				"name": "SyCrowTradeByBarter",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_barter",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_trader",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_value1",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_value2",
						"type": "uint256"
					}
				],
				"name": "SyCrowWithdrawFromBarter",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_WETH",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allBarters",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "allBartersLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "inToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "outToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deposited",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expected",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "enum ISyCrowBarterType",
						"name": "barterType",
						"type": "uint8"
					},
					{
						"internalType": "bool",
						"name": "allowMultiBarter",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isPrivate",
						"type": "bool"
					}
				],
				"name": "createBarter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeCollector",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getUserBarter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					}
				],
				"name": "getUserBarters",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "barters",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					}
				],
				"name": "getUserBartersLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_barter",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_trader",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_inAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_outAmount",
						"type": "uint256"
					}
				],
				"name": "notifyTradeByBarter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_barter",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_trader",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_value2",
						"type": "uint256"
					}
				],
				"name": "notifyWithdrawFromBarter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_feeCollector",
						"type": "address"
					}
				],
				"name": "setFeeCollector",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_pause",
						"type": "bool"
					}
				],
				"name": "setPause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "baseFee",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "enable",
						"type": "bool"
					}
				],
				"name": "setUsePriceFeeds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalBarterDeployed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "usePriceFeeds",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/SyCrowBarterFactory.sol": "SyCrowBarterFactory"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
			"keccak256": "0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5",
			"license": "MIT",
			"urls": [
				"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120",
				"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/SyCrowBarter.sol": {
			"keccak256": "0x9728a6268a968ef4da909455cfb3825fc954cde9ab6551e7eb9ac1f659ac1e76",
			"license": "MIT",
			"urls": [
				"bzz-raw://f80740865784e813a5da0b69748e61129488da7f42eae05c249dc2ef56783a9d",
				"dweb:/ipfs/QmStB6eSSL9Uzapy9RVNkBgZUfT6a8qc1iTEFyABUWMz5n"
			]
		},
		"contracts/SyCrowBarterFactory.sol": {
			"keccak256": "0x57b07697172f47539cf3efbaa27aff284bc25996dd7ba0a1424e93ad3a3ff779",
			"license": "MIT",
			"urls": [
				"bzz-raw://a4d7adcbbe393253a494f8eac574d4b44f1f88ca216fb3c3fde8ecd0458d56ed",
				"dweb:/ipfs/QmXPjVHNrBPMGTV88CSHgRAMam1LB8nnXBzXveUUHkdGDk"
			]
		},
		"contracts/interfaces/IERC20.sol": {
			"keccak256": "0x867d929fef5a0612cfd78ee70db7d70a39d62a251220133a14a5ff9b4a0b122d",
			"license": "MIT",
			"urls": [
				"bzz-raw://3b267eff6bf024caa15d33f8b3f87043c641c4e2aec873db451dd9df41473757",
				"dweb:/ipfs/QmWNWcN7BsEJtXPXTFfkCpEnc7PTLGfGZQPEgxnsKu4S6d"
			]
		},
		"contracts/interfaces/ISyCrowBarter.sol": {
			"keccak256": "0xf89f053fad6fc9183d4fb4b713c63721c0f966c68923c54450a3539d0f3982d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://bdb15f807ef5d39691a5e45fee017688653f050e201a2baa4999a904b160dd01",
				"dweb:/ipfs/QmNTiWruYdgdvsRtWPSNMqST1775ogrEKYTUKASemKY1mt"
			]
		},
		"contracts/interfaces/ISyCrowBarterFactory.sol": {
			"keccak256": "0x5eb41969b923a4308417ca509a2f98c4fc41b53cd927ffdccdce9405d419b254",
			"license": "MIT",
			"urls": [
				"bzz-raw://57b658e7f2919b47fcfe543930f9c57da9ec968538683f828df5f49b3169f981",
				"dweb:/ipfs/QmaVBRVsXqc1uvj7QTufoURtvBjaqSF23HQt3ZUgyKg4ep"
			]
		},
		"contracts/interfaces/IWETH.sol": {
			"keccak256": "0x48429d7752165439258d8d6a26ea29150d5af05374b9182de97982a544ef35d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://b09b55a8331e9de6a903b319e3e0a89e2fafb38bdce098ca14aa05b08723c792",
				"dweb:/ipfs/QmdQtkqgCdwAfVFWX1cAGi8urTS7D23ax3ETs4ykLXFYNT"
			]
		},
		"contracts/libraries/TransferHelper.sol": {
			"keccak256": "0x4d076df1676fb5f85d7dda5ef0b5610c3aebd2729a7c32a1bf3bad105f1aac7e",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://354e47ea2ac17432f862c476e95a7e504607c1829a125e9f4257c4ec99fcb4e6",
				"dweb:/ipfs/Qme2sV3FsSvN3uALvpN1tbQkTpUgFEjg2gHXSrwEkGjgCZ"
			]
		}
	},
	"version": 1
}